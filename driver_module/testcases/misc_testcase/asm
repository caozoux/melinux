
misc.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <misc_template_write>:
       0:	e8 00 00 00 00       	callq  5 <misc_template_write+0x5>
       5:	31 c0                	xor    %eax,%eax
       7:	c3                   	retq   
       8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
       f:	00 

0000000000000010 <misc_template_release>:
      10:	e8 00 00 00 00       	callq  15 <misc_template_release+0x5>
      15:	48 8b be c8 00 00 00 	mov    0xc8(%rsi),%rdi
      1c:	48 85 ff             	test   %rdi,%rdi
      1f:	74 05                	je     26 <misc_template_release+0x16>
      21:	e8 00 00 00 00       	callq  26 <misc_template_release+0x16>
      26:	31 c0                	xor    %eax,%eax
      28:	c3                   	retq   
      29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000030 <misc_template_open>:
      30:	e8 00 00 00 00       	callq  35 <misc_template_open+0x5>
      35:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 3c <misc_template_open+0xc>
      3c:	53                   	push   %rbx
      3d:	ba 18 00 00 00       	mov    $0x18,%edx
      42:	48 89 f3             	mov    %rsi,%rbx
      45:	be c0 80 60 00       	mov    $0x6080c0,%esi
      4a:	e8 00 00 00 00       	callq  4f <misc_template_open+0x1f>
      4f:	48 85 c0             	test   %rax,%rax
      52:	74 0b                	je     5f <misc_template_open+0x2f>
      54:	48 89 83 c8 00 00 00 	mov    %rax,0xc8(%rbx)
      5b:	31 c0                	xor    %eax,%eax
      5d:	5b                   	pop    %rbx
      5e:	c3                   	retq   
      5f:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
      64:	5b                   	pop    %rbx
      65:	c3                   	retq   
      66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      6d:	00 00 00 

0000000000000070 <misc_template_unlocked_ioctl>:
      70:	e8 00 00 00 00       	callq  75 <misc_template_unlocked_ioctl+0x5>
      75:	41 54                	push   %r12
      77:	55                   	push   %rbp
      78:	89 f5                	mov    %esi,%ebp
      7a:	53                   	push   %rbx
      7b:	48 89 d3             	mov    %rdx,%rbx
      7e:	ba d0 01 00 00       	mov    $0x1d0,%edx
      83:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
      8a:	48 89 de             	mov    %rbx,%rsi
      8d:	4c 8b a7 c8 00 00 00 	mov    0xc8(%rdi),%r12
      94:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
      9b:	00 00 
      9d:	48 89 84 24 d0 01 00 	mov    %rax,0x1d0(%rsp)
      a4:	00 
      a5:	31 c0                	xor    %eax,%eax
      a7:	48 89 e7             	mov    %rsp,%rdi
      aa:	e8 00 00 00 00       	callq  af <misc_template_unlocked_ioctl+0x3f>
      af:	48 85 c0             	test   %rax,%rax
      b2:	74 39                	je     ed <misc_template_unlocked_ioctl+0x7d>
      b4:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
      b9:	89 ea                	mov    %ebp,%edx
      bb:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
      c2:	e8 00 00 00 00       	callq  c7 <misc_template_unlocked_ioctl+0x57>
      c7:	48 c7 c0 f2 ff ff ff 	mov    $0xfffffffffffffff2,%rax
      ce:	48 8b 8c 24 d0 01 00 	mov    0x1d0(%rsp),%rcx
      d5:	00 
      d6:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
      dd:	00 00 
      df:	75 50                	jne    131 <misc_template_unlocked_ioctl+0xc1>
      e1:	48 81 c4 d8 01 00 00 	add    $0x1d8,%rsp
      e8:	5b                   	pop    %rbx
      e9:	5d                   	pop    %rbp
      ea:	41 5c                	pop    %r12
      ec:	c3                   	retq   
      ed:	8b 54 24 04          	mov    0x4(%rsp),%edx
      f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
      f8:	8b 34 24             	mov    (%rsp),%esi
      fb:	e8 00 00 00 00       	callq  100 <misc_template_unlocked_ioctl+0x90>
     100:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 106 <misc_template_unlocked_ioctl+0x96>
     106:	85 c0                	test   %eax,%eax
     108:	74 23                	je     12d <misc_template_unlocked_ioctl+0xbd>
     10a:	8b 34 24             	mov    (%rsp),%esi
     10d:	39 f0                	cmp    %esi,%eax
     10f:	74 25                	je     136 <misc_template_unlocked_ioctl+0xc6>
     111:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
     118:	31 c0                	xor    %eax,%eax
     11a:	eb 08                	jmp    124 <misc_template_unlocked_ioctl+0xb4>
     11c:	48 83 c2 28          	add    $0x28,%rdx
     120:	39 f1                	cmp    %esi,%ecx
     122:	74 14                	je     138 <misc_template_unlocked_ioctl+0xc8>
     124:	8b 0a                	mov    (%rdx),%ecx
     126:	83 c0 01             	add    $0x1,%eax
     129:	85 c9                	test   %ecx,%ecx
     12b:	75 ef                	jne    11c <misc_template_unlocked_ioctl+0xac>
     12d:	31 c0                	xor    %eax,%eax
     12f:	eb 9d                	jmp    ce <misc_template_unlocked_ioctl+0x5e>
     131:	e8 00 00 00 00       	callq  136 <misc_template_unlocked_ioctl+0xc6>
     136:	31 c0                	xor    %eax,%eax
     138:	48 98                	cltq   
     13a:	48 89 e2             	mov    %rsp,%rdx
     13d:	48 89 de             	mov    %rbx,%rsi
     140:	48 6b c0 28          	imul   $0x28,%rax,%rax
     144:	89 ef                	mov    %ebp,%edi
     146:	48 8b 80 00 00 00 00 	mov    0x0(%rax),%rax
     14d:	e8 00 00 00 00       	callq  152 <misc_template_unlocked_ioctl+0xe2>
     152:	ba d0 01 00 00       	mov    $0x1d0,%edx
     157:	48 89 df             	mov    %rbx,%rdi
     15a:	48 89 e6             	mov    %rsp,%rsi
     15d:	e8 00 00 00 00       	callq  162 <misc_template_unlocked_ioctl+0xf2>
     162:	48 85 c0             	test   %rax,%rax
     165:	74 c6                	je     12d <misc_template_unlocked_ioctl+0xbd>
     167:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
     16c:	89 ea                	mov    %ebp,%edx
     16e:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     175:	e8 00 00 00 00       	callq  17a <misc_template_unlocked_ioctl+0x10a>
     17a:	31 c0                	xor    %eax,%eax
     17c:	e9 4d ff ff ff       	jmpq   ce <misc_template_unlocked_ioctl+0x5e>
     181:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     18d:	00 00 00 

0000000000000190 <write_enable>:
     190:	e8 00 00 00 00       	callq  195 <write_enable+0x5>
     195:	53                   	push   %rbx
     196:	48 89 d7             	mov    %rdx,%rdi
     199:	31 f6                	xor    %esi,%esi
     19b:	48 89 cb             	mov    %rcx,%rbx
     19e:	48 83 ec 08          	sub    $0x8,%rsp
     1a2:	48 89 e2             	mov    %rsp,%rdx
     1a5:	e8 00 00 00 00       	callq  1aa <write_enable+0x1a>
     1aa:	85 c0                	test   %eax,%eax
     1ac:	75 0a                	jne    1b8 <write_enable+0x28>
     1ae:	48 8b 04 24          	mov    (%rsp),%rax
     1b2:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 1b8 <write_enable+0x28>
     1b8:	48 83 c4 08          	add    $0x8,%rsp
     1bc:	48 89 d8             	mov    %rbx,%rax
     1bf:	5b                   	pop    %rbx
     1c0:	c3                   	retq   
     1c1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     1cd:	00 00 00 

00000000000001d0 <read_enable>:
     1d0:	e8 00 00 00 00       	callq  1d5 <read_enable+0x5>
     1d5:	48 89 d7             	mov    %rdx,%rdi
     1d8:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 1de <read_enable+0xe>
     1de:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     1e5:	e8 00 00 00 00       	callq  1ea <read_enable+0x1a>
     1ea:	48 98                	cltq   
     1ec:	c3                   	retq   
     1ed:	0f 1f 00             	nopl   (%rax)

00000000000001f0 <misc_template_read>:
     1f0:	e8 00 00 00 00       	callq  1f5 <misc_template_read+0x5>
     1f5:	31 c0                	xor    %eax,%eax
     1f7:	c3                   	retq   
     1f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     1ff:	00 

0000000000000200 <page_unit_ioctl_func>:
     200:	e8 00 00 00 00       	callq  205 <page_unit_ioctl_func+0x5>
     205:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     20a:	c3                   	retq   
     20b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000210 <page_unit_init>:
     210:	e8 00 00 00 00       	callq  215 <page_unit_init+0x5>
     215:	31 c0                	xor    %eax,%eax
     217:	c3                   	retq   
     218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     21f:	00 

0000000000000220 <page_unit_exit>:
     220:	e8 00 00 00 00       	callq  225 <page_unit_exit+0x5>
     225:	31 c0                	xor    %eax,%eax
     227:	c3                   	retq   
     228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     22f:	00 

0000000000000230 <rcuread_thread>:
     230:	e8 00 00 00 00       	callq  235 <rcuread_thread+0x5>
     235:	53                   	push   %rbx
     236:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
     23d:	e8 00 00 00 00       	callq  242 <rcuread_thread+0x12>
     242:	84 c0                	test   %al,%al
     244:	75 32                	jne    278 <rcuread_thread+0x48>
     246:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 24d <rcuread_thread+0x1d>
     24d:	48 85 c0             	test   %rax,%rax
     250:	75 eb                	jne    23d <rcuread_thread+0xd>
     252:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 259 <rcuread_thread+0x29>
     259:	48 85 c0             	test   %rax,%rax
     25c:	75 df                	jne    23d <rcuread_thread+0xd>
     25e:	48 89 df             	mov    %rbx,%rdi
     261:	e8 00 00 00 00       	callq  266 <rcuread_thread+0x36>
     266:	85 c0                	test   %eax,%eax
     268:	74 d3                	je     23d <rcuread_thread+0xd>
     26a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     271:	e8 00 00 00 00       	callq  276 <rcuread_thread+0x46>
     276:	eb c5                	jmp    23d <rcuread_thread+0xd>
     278:	31 c0                	xor    %eax,%eax
     27a:	5b                   	pop    %rbx
     27b:	c3                   	retq   
     27c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000280 <rcuassigned_thread>:
     280:	e8 00 00 00 00       	callq  285 <rcuassigned_thread+0x5>
     285:	41 54                	push   %r12
     287:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 28e <rcuassigned_thread+0xe>
     28e:	55                   	push   %rbp
     28f:	31 ed                	xor    %ebp,%ebp
     291:	53                   	push   %rbx
     292:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
     299:	eb 1c                	jmp    2b7 <rcuassigned_thread+0x37>
     29b:	e8 00 00 00 00       	callq  2a0 <rcuassigned_thread+0x20>
     2a0:	48 89 df             	mov    %rbx,%rdi
     2a3:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 2ae <rcuassigned_thread+0x2e>
     2aa:	00 00 00 00 
     2ae:	e8 00 00 00 00       	callq  2b3 <rcuassigned_thread+0x33>
     2b3:	85 c0                	test   %eax,%eax
     2b5:	75 10                	jne    2c7 <rcuassigned_thread+0x47>
     2b7:	e8 00 00 00 00       	callq  2bc <rcuassigned_thread+0x3c>
     2bc:	84 c0                	test   %al,%al
     2be:	74 db                	je     29b <rcuassigned_thread+0x1b>
     2c0:	5b                   	pop    %rbx
     2c1:	31 c0                	xor    %eax,%eax
     2c3:	5d                   	pop    %rbp
     2c4:	41 5c                	pop    %r12
     2c6:	c3                   	retq   
     2c7:	44 8d 65 01          	lea    0x1(%rbp),%r12d
     2cb:	89 ee                	mov    %ebp,%esi
     2cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     2d4:	e8 00 00 00 00       	callq  2d9 <rcuassigned_thread+0x59>
     2d9:	44 89 e5             	mov    %r12d,%ebp
     2dc:	eb d9                	jmp    2b7 <rcuassigned_thread+0x37>
     2de:	66 90                	xchg   %ax,%ax

00000000000002e0 <rcutest_unit_ioctl_func>:
     2e0:	e8 00 00 00 00       	callq  2e5 <rcutest_unit_ioctl_func+0x5>
     2e5:	53                   	push   %rbx
     2e6:	8b 42 04             	mov    0x4(%rdx),%eax
     2e9:	83 f8 01             	cmp    $0x1,%eax
     2ec:	74 30                	je     31e <rcutest_unit_ioctl_func+0x3e>
     2ee:	83 f8 02             	cmp    $0x2,%eax
     2f1:	75 24                	jne    317 <rcutest_unit_ioctl_func+0x37>
     2f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     2fa:	e8 00 00 00 00       	callq  2ff <rcutest_unit_ioctl_func+0x1f>
     2ff:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 306 <rcutest_unit_ioctl_func+0x26>
     306:	e8 00 00 00 00       	callq  30b <rcutest_unit_ioctl_func+0x2b>
     30b:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 312 <rcutest_unit_ioctl_func+0x32>
     312:	e8 00 00 00 00       	callq  317 <rcutest_unit_ioctl_func+0x37>
     317:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     31c:	5b                   	pop    %rbx
     31d:	c3                   	retq   
     31e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     325:	e8 00 00 00 00       	callq  32a <rcutest_unit_ioctl_func+0x4a>
     32a:	ba 00 10 00 00       	mov    $0x1000,%edx
     32f:	be c0 00 60 00       	mov    $0x6000c0,%esi
     334:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 33b <rcutest_unit_ioctl_func+0x5b>
     33b:	e8 00 00 00 00       	callq  340 <rcutest_unit_ioctl_func+0x60>
     340:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     347:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     34e:	48 89 c2             	mov    %rax,%rdx
     351:	48 89 c3             	mov    %rax,%rbx
     354:	e8 00 00 00 00       	callq  359 <rcutest_unit_ioctl_func+0x79>
     359:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
     360:	b9 01 00 00 00       	mov    $0x1,%ecx
     365:	31 f6                	xor    %esi,%esi
     367:	48 89 1d 00 00 00 00 	mov    %rbx,0x0(%rip)        # 36e <rcutest_unit_ioctl_func+0x8e>
     36e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     373:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     37a:	e8 00 00 00 00       	callq  37f <rcutest_unit_ioctl_func+0x9f>
     37f:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
     386:	b9 02 00 00 00       	mov    $0x2,%ecx
     38b:	31 f6                	xor    %esi,%esi
     38d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     392:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     399:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3a0 <rcutest_unit_ioctl_func+0xc0>
     3a0:	e8 00 00 00 00       	callq  3a5 <rcutest_unit_ioctl_func+0xc5>
     3a5:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 3ac <rcutest_unit_ioctl_func+0xcc>
     3ac:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3b3 <rcutest_unit_ioctl_func+0xd3>
     3b3:	e8 00 00 00 00       	callq  3b8 <rcutest_unit_ioctl_func+0xd8>
     3b8:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 3bf <rcutest_unit_ioctl_func+0xdf>
     3bf:	e8 00 00 00 00       	callq  3c4 <rcutest_unit_ioctl_func+0xe4>
     3c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     3c9:	5b                   	pop    %rbx
     3ca:	c3                   	retq   
     3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000003d0 <rcutest_unit_init>:
     3d0:	e8 00 00 00 00       	callq  3d5 <rcutest_unit_init+0x5>
     3d5:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 3e0 <rcutest_unit_init+0x10>
     3dc:	00 00 00 00 
     3e0:	31 c0                	xor    %eax,%eax
     3e2:	c3                   	retq   
     3e3:	0f 1f 00             	nopl   (%rax)
     3e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     3ed:	00 00 00 

00000000000003f0 <rcutest_unit_exit>:
     3f0:	e8 00 00 00 00       	callq  3f5 <rcutest_unit_exit+0x5>
     3f5:	31 c0                	xor    %eax,%eax
     3f7:	c3                   	retq   
     3f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     3ff:	00 

0000000000000400 <kprobe_handler>:
     400:	e8 00 00 00 00       	callq  405 <kprobe_handler+0x5>
     405:	48 85 ff             	test   %rdi,%rdi
     408:	53                   	push   %rbx
     409:	74 3a                	je     445 <kprobe_handler+0x45>
     40b:	48 89 fb             	mov    %rdi,%rbx
     40e:	48 8b bf b8 00 00 00 	mov    0xb8(%rdi),%rdi
     415:	31 d2                	xor    %edx,%edx
     417:	31 f6                	xor    %esi,%esi
     419:	e8 00 00 00 00       	callq  41e <kprobe_handler+0x1e>
     41e:	c6 83 b0 00 00 00 01 	movb   $0x1,0xb0(%rbx)
     425:	31 c9                	xor    %ecx,%ecx
     427:	ba 01 00 00 00       	mov    $0x1,%edx
     42c:	83 4b 70 02          	orl    $0x2,0x70(%rbx)
     430:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
     437:	be 03 00 00 00       	mov    $0x3,%esi
     43c:	e8 00 00 00 00       	callq  441 <kprobe_handler+0x41>
     441:	31 c0                	xor    %eax,%eax
     443:	5b                   	pop    %rbx
     444:	c3                   	retq   
     445:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     44c:	e8 00 00 00 00       	callq  451 <kprobe_handler+0x51>
     451:	c6 04 25 b0 00 00 00 	movb   $0x1,0xb0
     458:	01 
     459:	83 0c 25 70 00 00 00 	orl    $0x2,0x70
     460:	02 
     461:	eb de                	jmp    441 <kprobe_handler+0x41>
     463:	0f 1f 00             	nopl   (%rax)
     466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     46d:	00 00 00 

0000000000000470 <kprobe_func_dump>:
     470:	e8 00 00 00 00       	callq  475 <kprobe_func_dump+0x5>
     475:	41 55                	push   %r13
     477:	41 54                	push   %r12
     479:	55                   	push   %rbp
     47a:	53                   	push   %rbx
     47b:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
     482:	48 85 f6             	test   %rsi,%rsi
     485:	0f 84 50 01 00 00    	je     5db <kprobe_func_dump+0x16b>
     48b:	4c 8d 64 24 28       	lea    0x28(%rsp),%r12
     490:	31 c0                	xor    %eax,%eax
     492:	49 89 fd             	mov    %rdi,%r13
     495:	b9 18 00 00 00       	mov    $0x18,%ecx
     49a:	4c 89 e7             	mov    %r12,%rdi
     49d:	48 89 f3             	mov    %rsi,%rbx
     4a0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
     4a3:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
     4aa:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     4b1:	49 8d bc 24 80 00 00 	lea    0x80(%r12),%rdi
     4b8:	00 
     4b9:	49 8d ac 24 98 00 00 	lea    0x98(%r12),%rbp
     4c0:	00 
     4c1:	e8 00 00 00 00       	callq  4c6 <kprobe_func_dump+0x56>
     4c6:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
     4cd:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     4d4:	48 89 ef             	mov    %rbp,%rdi
     4d7:	e8 00 00 00 00       	callq  4dc <kprobe_func_dump+0x6c>
     4dc:	4d 85 ed             	test   %r13,%r13
     4df:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
     4e4:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
     4eb:	00 00 
     4ed:	4c 89 ac 24 e0 00 00 	mov    %r13,0xe0(%rsp)
     4f4:	00 
     4f5:	0f 84 bb 00 00 00    	je     5b6 <kprobe_func_dump+0x146>
     4fb:	4c 89 e7             	mov    %r12,%rdi
     4fe:	e8 00 00 00 00       	callq  503 <kprobe_func_dump+0x93>
     503:	85 c0                	test   %eax,%eax
     505:	41 89 c5             	mov    %eax,%r13d
     508:	0f 85 b3 00 00 00    	jne    5c1 <kprobe_func_dump+0x151>
     50e:	80 bc 24 d8 00 00 00 	cmpb   $0x0,0xd8(%rsp)
     515:	00 
     516:	74 19                	je     531 <kprobe_func_dump+0xc1>
     518:	4c 89 e7             	mov    %r12,%rdi
     51b:	e8 00 00 00 00       	callq  520 <kprobe_func_dump+0xb0>
     520:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
     527:	44 89 e8             	mov    %r13d,%eax
     52a:	5b                   	pop    %rbx
     52b:	5d                   	pop    %rbp
     52c:	41 5c                	pop    %r12
     52e:	41 5d                	pop    %r13
     530:	c3                   	retq   
     531:	31 f6                	xor    %esi,%esi
     533:	48 89 e7             	mov    %rsp,%rdi
     536:	bb a0 86 01 00       	mov    $0x186a0,%ebx
     53b:	e8 00 00 00 00       	callq  540 <kprobe_func_dump+0xd0>
     540:	ba 01 00 00 00       	mov    $0x1,%edx
     545:	48 89 ef             	mov    %rbp,%rdi
     548:	48 89 e6             	mov    %rsp,%rsi
     54b:	e8 00 00 00 00       	callq  550 <kprobe_func_dump+0xe0>
     550:	80 bc 24 d8 00 00 00 	cmpb   $0x0,0xd8(%rsp)
     557:	00 
     558:	0f 95 c2             	setne  %dl
     55b:	31 c9                	xor    %ecx,%ecx
     55d:	84 d2                	test   %dl,%dl
     55f:	0f 85 8d 00 00 00    	jne    5f2 <kprobe_func_dump+0x182>
     565:	84 c9                	test   %cl,%cl
     567:	0f 85 85 00 00 00    	jne    5f2 <kprobe_func_dump+0x182>
     56d:	48 85 c0             	test   %rax,%rax
     570:	75 a6                	jne    518 <kprobe_func_dump+0xa8>
     572:	48 89 df             	mov    %rbx,%rdi
     575:	e8 00 00 00 00       	callq  57a <kprobe_func_dump+0x10a>
     57a:	ba 01 00 00 00       	mov    $0x1,%edx
     57f:	48 89 ef             	mov    %rbp,%rdi
     582:	48 89 e6             	mov    %rsp,%rsi
     585:	48 89 c3             	mov    %rax,%rbx
     588:	e8 00 00 00 00       	callq  58d <kprobe_func_dump+0x11d>
     58d:	80 bc 24 d8 00 00 00 	cmpb   $0x0,0xd8(%rsp)
     594:	00 
     595:	0f 95 c2             	setne  %dl
     598:	48 85 db             	test   %rbx,%rbx
     59b:	0f 94 c1             	sete   %cl
     59e:	84 d2                	test   %dl,%dl
     5a0:	74 c3                	je     565 <kprobe_func_dump+0xf5>
     5a2:	84 c9                	test   %cl,%cl
     5a4:	74 b7                	je     55d <kprobe_func_dump+0xed>
     5a6:	48 89 e6             	mov    %rsp,%rsi
     5a9:	48 89 ef             	mov    %rbp,%rdi
     5ac:	e8 00 00 00 00       	callq  5b1 <kprobe_func_dump+0x141>
     5b1:	e9 62 ff ff ff       	jmpq   518 <kprobe_func_dump+0xa8>
     5b6:	41 bd f4 ff ff ff    	mov    $0xfffffff4,%r13d
     5bc:	e9 5f ff ff ff       	jmpq   520 <kprobe_func_dump+0xb0>
     5c1:	48 89 de             	mov    %rbx,%rsi
     5c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     5cb:	41 bd ea ff ff ff    	mov    $0xffffffea,%r13d
     5d1:	e8 00 00 00 00       	callq  5d6 <kprobe_func_dump+0x166>
     5d6:	e9 45 ff ff ff       	jmpq   520 <kprobe_func_dump+0xb0>
     5db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     5e2:	41 bd ea ff ff ff    	mov    $0xffffffea,%r13d
     5e8:	e8 00 00 00 00       	callq  5ed <kprobe_func_dump+0x17d>
     5ed:	e9 2e ff ff ff       	jmpq   520 <kprobe_func_dump+0xb0>
     5f2:	49 8d bc 24 98 00 00 	lea    0x98(%r12),%rdi
     5f9:	00 
     5fa:	48 89 e6             	mov    %rsp,%rsi
     5fd:	e8 00 00 00 00       	callq  602 <kprobe_func_dump+0x192>
     602:	48 85 db             	test   %rbx,%rbx
     605:	0f 85 0d ff ff ff    	jne    518 <kprobe_func_dump+0xa8>
     60b:	41 bd f0 ff ff ff    	mov    $0xfffffff0,%r13d
     611:	e9 0a ff ff ff       	jmpq   520 <kprobe_func_dump+0xb0>
     616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     61d:	00 00 00 

0000000000000620 <kprobe_unit_ioctl_func>:
     620:	e8 00 00 00 00       	callq  625 <kprobe_unit_ioctl_func+0x5>
     625:	41 55                	push   %r13
     627:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
     62d:	41 54                	push   %r12
     62f:	55                   	push   %rbp
     630:	53                   	push   %rbx
     631:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
     638:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     63f:	00 00 
     641:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
     648:	00 
     649:	31 c0                	xor    %eax,%eax
     64b:	83 7a 04 01          	cmpl   $0x1,0x4(%rdx)
     64f:	0f 85 dd 00 00 00    	jne    732 <kprobe_unit_ioctl_func+0x112>
     655:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 65c <kprobe_unit_ioctl_func+0x3c>
     65c:	48 89 d5             	mov    %rdx,%rbp
     65f:	be c0 80 60 00       	mov    $0x6080c0,%esi
     664:	ba 00 10 00 00       	mov    $0x1000,%edx
     669:	e8 00 00 00 00       	callq  66e <kprobe_unit_ioctl_func+0x4e>
     66e:	48 63 5d 18          	movslq 0x18(%rbp),%rbx
     672:	49 89 c4             	mov    %rax,%r12
     675:	4c 8b 6d 10          	mov    0x10(%rbp),%r13
     679:	48 83 fb 7d          	cmp    $0x7d,%rbx
     67d:	0f 87 d3 00 00 00    	ja     756 <kprobe_unit_ioctl_func+0x136>
     683:	48 8d 7c 24 03       	lea    0x3(%rsp),%rdi
     688:	31 d2                	xor    %edx,%edx
     68a:	48 89 de             	mov    %rbx,%rsi
     68d:	e8 00 00 00 00       	callq  692 <kprobe_unit_ioctl_func+0x72>
     692:	48 89 da             	mov    %rbx,%rdx
     695:	4c 89 ee             	mov    %r13,%rsi
     698:	48 8d 7c 24 03       	lea    0x3(%rsp),%rdi
     69d:	e8 00 00 00 00       	callq  6a2 <kprobe_unit_ioctl_func+0x82>
     6a2:	48 85 c0             	test   %rax,%rax
     6a5:	0f 85 c1 00 00 00    	jne    76c <kprobe_unit_ioctl_func+0x14c>
     6ab:	48 8d 74 24 03       	lea    0x3(%rsp),%rsi
     6b0:	4c 89 e7             	mov    %r12,%rdi
     6b3:	c6 44 1c 03 00       	movb   $0x0,0x3(%rsp,%rbx,1)
     6b8:	e8 b3 fd ff ff       	callq  470 <kprobe_func_dump>
     6bd:	85 c0                	test   %eax,%eax
     6bf:	41 89 c5             	mov    %eax,%r13d
     6c2:	75 66                	jne    72a <kprobe_unit_ioctl_func+0x10a>
     6c4:	4c 89 e2             	mov    %r12,%rdx
     6c7:	8b 0a                	mov    (%rdx),%ecx
     6c9:	48 83 c2 04          	add    $0x4,%rdx
     6cd:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
     6d3:	f7 d1                	not    %ecx
     6d5:	21 c8                	and    %ecx,%eax
     6d7:	25 80 80 80 80       	and    $0x80808080,%eax
     6dc:	74 e9                	je     6c7 <kprobe_unit_ioctl_func+0xa7>
     6de:	89 c1                	mov    %eax,%ecx
     6e0:	4c 89 e7             	mov    %r12,%rdi
     6e3:	c1 e9 10             	shr    $0x10,%ecx
     6e6:	a9 80 80 00 00       	test   $0x8080,%eax
     6eb:	0f 44 c1             	cmove  %ecx,%eax
     6ee:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
     6f2:	89 c3                	mov    %eax,%ebx
     6f4:	48 0f 44 d1          	cmove  %rcx,%rdx
     6f8:	00 c3                	add    %al,%bl
     6fa:	48 83 da 03          	sbb    $0x3,%rdx
     6fe:	4c 29 e2             	sub    %r12,%rdx
     701:	39 55 28             	cmp    %edx,0x28(%rbp)
     704:	0f 4e 55 28          	cmovle 0x28(%rbp),%edx
     708:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
     70c:	48 63 da             	movslq %edx,%rbx
     70f:	ba 01 00 00 00       	mov    $0x1,%edx
     714:	48 89 de             	mov    %rbx,%rsi
     717:	e8 00 00 00 00       	callq  71c <kprobe_unit_ioctl_func+0xfc>
     71c:	48 89 da             	mov    %rbx,%rdx
     71f:	4c 89 e6             	mov    %r12,%rsi
     722:	48 89 ef             	mov    %rbp,%rdi
     725:	e8 00 00 00 00       	callq  72a <kprobe_unit_ioctl_func+0x10a>
     72a:	4c 89 e7             	mov    %r12,%rdi
     72d:	e8 00 00 00 00       	callq  732 <kprobe_unit_ioctl_func+0x112>
     732:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
     739:	00 
     73a:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
     741:	00 00 
     743:	44 89 e8             	mov    %r13d,%eax
     746:	75 38                	jne    780 <kprobe_unit_ioctl_func+0x160>
     748:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
     74f:	5b                   	pop    %rbx
     750:	5d                   	pop    %rbp
     751:	41 5c                	pop    %r12
     753:	41 5d                	pop    %r13
     755:	c3                   	retq   
     756:	48 89 da             	mov    %rbx,%rdx
     759:	be 7d 00 00 00       	mov    $0x7d,%esi
     75e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     765:	e8 00 00 00 00       	callq  76a <kprobe_unit_ioctl_func+0x14a>
     76a:	0f 0b                	ud2    
     76c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     773:	41 bd f4 ff ff ff    	mov    $0xfffffff4,%r13d
     779:	e8 00 00 00 00       	callq  77e <kprobe_unit_ioctl_func+0x15e>
     77e:	eb b2                	jmp    732 <kprobe_unit_ioctl_func+0x112>
     780:	e8 00 00 00 00       	callq  785 <kprobe_unit_ioctl_func+0x165>
     785:	90                   	nop
     786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     78d:	00 00 00 

0000000000000790 <kprobe_unit_exit>:
     790:	e8 00 00 00 00       	callq  795 <kprobe_unit_exit+0x5>
     795:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     79c:	e8 00 00 00 00       	callq  7a1 <kprobe_unit_exit+0x11>
     7a1:	31 c0                	xor    %eax,%eax
     7a3:	c3                   	retq   
     7a4:	66 90                	xchg   %ax,%ax
     7a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     7ad:	00 00 00 

00000000000007b0 <kprobe_unit_init>:
     7b0:	e8 00 00 00 00       	callq  7b5 <kprobe_unit_init+0x5>
     7b5:	eb d9                	jmp    790 <kprobe_unit_exit>
     7b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     7be:	00 00 

00000000000007c0 <show_trace_log.isra.0.constprop.1>:
     7c0:	e8 00 00 00 00       	callq  7c5 <show_trace_log.isra.0.constprop.1+0x5>
     7c5:	55                   	push   %rbp
     7c6:	48 89 e5             	mov    %rsp,%rbp
     7c9:	41 57                	push   %r15
     7cb:	41 56                	push   %r14
     7cd:	41 55                	push   %r13
     7cf:	49 89 fd             	mov    %rdi,%r13
     7d2:	41 54                	push   %r12
     7d4:	53                   	push   %rbx
     7d5:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
     7dc:	48 85 d2             	test   %rdx,%rdx
     7df:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
     7e6:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
     7ed:	00 00 00 00 
     7f1:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
     7f8:	00 00 00 00 
     7fc:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
     803:	00 00 00 00 
     807:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
     80e:	00 00 00 00 
     812:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
     819:	00 00 00 00 
     81d:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
     824:	00 00 00 
     827:	0f 84 af 01 00 00    	je     9dc <show_trace_log.isra.0.constprop.1+0x21c>
     82d:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
     834:	48 8d 45 80          	lea    -0x80(%rbp),%rax
     838:	48 89 d1             	mov    %rdx,%rcx
     83b:	48 89 d3             	mov    %rdx,%rbx
     83e:	48 89 c7             	mov    %rax,%rdi
     841:	31 d2                	xor    %edx,%edx
     843:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
     84a:	e8 00 00 00 00       	callq  84f <show_trace_log.isra.0.constprop.1+0x8f>
     84f:	8b 45 80             	mov    -0x80(%rbp),%eax
     852:	85 c0                	test   %eax,%eax
     854:	0f 84 7a 01 00 00    	je     9d4 <show_trace_log.isra.0.constprop.1+0x214>
     85a:	4c 8b 75 d0          	mov    -0x30(%rbp),%r14
     85e:	48 85 db             	test   %rbx,%rbx
     861:	0f 84 5b 01 00 00    	je     9c2 <show_trace_log.isra.0.constprop.1+0x202>
     867:	4c 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%r15
     86e:	48 8d 8d 58 ff ff ff 	lea    -0xa8(%rbp),%rcx
     875:	48 89 df             	mov    %rbx,%rdi
     878:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
     87f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 886 <show_trace_log.isra.0.constprop.1+0xc6>
     886:	4c 89 fe             	mov    %r15,%rsi
     889:	e8 00 00 00 00       	callq  88e <show_trace_log.isra.0.constprop.1+0xce>
     88e:	85 c0                	test   %eax,%eax
     890:	74 36                	je     8c8 <show_trace_log.isra.0.constprop.1+0x108>
     892:	48 81 c3 ff 0f 00 00 	add    $0xfff,%rbx
     899:	4c 89 fe             	mov    %r15,%rsi
     89c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8a3 <show_trace_log.isra.0.constprop.1+0xe3>
     8a3:	48 8d 8d 58 ff ff ff 	lea    -0xa8(%rbp),%rcx
     8aa:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
     8b1:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
     8b8:	48 89 df             	mov    %rbx,%rdi
     8bb:	e8 00 00 00 00       	callq  8c0 <show_trace_log.isra.0.constprop.1+0x100>
     8c0:	85 c0                	test   %eax,%eax
     8c2:	0f 85 fa 00 00 00    	jne    9c2 <show_trace_log.isra.0.constprop.1+0x202>
     8c8:	8b bd 60 ff ff ff    	mov    -0xa0(%rbp),%edi
     8ce:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8d5 <show_trace_log.isra.0.constprop.1+0x115>
     8d5:	e8 00 00 00 00       	callq  8da <show_trace_log.isra.0.constprop.1+0x11a>
     8da:	48 3b 9d 70 ff ff ff 	cmp    -0x90(%rbp),%rbx
     8e1:	0f 83 c6 00 00 00    	jae    9ad <show_trace_log.isra.0.constprop.1+0x1ed>
     8e7:	4c 8b 23             	mov    (%rbx),%r12
     8ea:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
     8f1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8f8 <show_trace_log.isra.0.constprop.1+0x138>
     8f8:	e8 00 00 00 00       	callq  8fd <show_trace_log.isra.0.constprop.1+0x13d>
     8fd:	49 89 c7             	mov    %rax,%r15
     900:	4c 89 e7             	mov    %r12,%rdi
     903:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 90a <show_trace_log.isra.0.constprop.1+0x14a>
     90a:	e8 00 00 00 00       	callq  90f <show_trace_log.isra.0.constprop.1+0x14f>
     90f:	85 c0                	test   %eax,%eax
     911:	0f 84 85 00 00 00    	je     99c <show_trace_log.isra.0.constprop.1+0x1dc>
     917:	4d 85 f6             	test   %r14,%r14
     91a:	74 0c                	je     928 <show_trace_log.isra.0.constprop.1+0x168>
     91c:	49 8d 86 80 00 00 00 	lea    0x80(%r14),%rax
     923:	48 39 c3             	cmp    %rax,%rbx
     926:	74 58                	je     980 <show_trace_log.isra.0.constprop.1+0x1c0>
     928:	48 89 d9             	mov    %rbx,%rcx
     92b:	4c 89 e2             	mov    %r12,%rdx
     92e:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
     935:	48 8d b5 54 ff ff ff 	lea    -0xac(%rbp),%rsi
     93c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 943 <show_trace_log.isra.0.constprop.1+0x183>
     943:	e8 00 00 00 00       	callq  948 <show_trace_log.isra.0.constprop.1+0x188>
     948:	49 39 c4             	cmp    %rax,%r12
     94b:	74 17                	je     964 <show_trace_log.isra.0.constprop.1+0x1a4>
     94d:	4c 89 ef             	mov    %r13,%rdi
     950:	4c 89 e2             	mov    %r12,%rdx
     953:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     95a:	e8 00 00 00 00       	callq  95f <show_trace_log.isra.0.constprop.1+0x19f>
     95f:	48 98                	cltq   
     961:	49 01 c5             	add    %rax,%r13
     964:	4c 89 ef             	mov    %r13,%rdi
     967:	4c 89 e2             	mov    %r12,%rdx
     96a:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     971:	e8 00 00 00 00       	callq  976 <show_trace_log.isra.0.constprop.1+0x1b6>
     976:	48 98                	cltq   
     978:	49 01 c5             	add    %rax,%r13
     97b:	49 39 df             	cmp    %rbx,%r15
     97e:	75 1c                	jne    99c <show_trace_log.isra.0.constprop.1+0x1dc>
     980:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
     987:	41 be 00 00 00 00    	mov    $0x0,%r14d
     98d:	e8 00 00 00 00       	callq  992 <show_trace_log.isra.0.constprop.1+0x1d2>
     992:	8b 55 80             	mov    -0x80(%rbp),%edx
     995:	85 d2                	test   %edx,%edx
     997:	4c 0f 45 75 d0       	cmovne -0x30(%rbp),%r14
     99c:	48 83 c3 08          	add    $0x8,%rbx
     9a0:	48 3b 9d 70 ff ff ff 	cmp    -0x90(%rbp),%rbx
     9a7:	0f 82 3a ff ff ff    	jb     8e7 <show_trace_log.isra.0.constprop.1+0x127>
     9ad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
     9b4:	48 8d 58 07          	lea    0x7(%rax),%rbx
     9b8:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
     9bc:	0f 85 a5 fe ff ff    	jne    867 <show_trace_log.isra.0.constprop.1+0xa7>
     9c2:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
     9c9:	5b                   	pop    %rbx
     9ca:	41 5c                	pop    %r12
     9cc:	41 5d                	pop    %r13
     9ce:	41 5e                	pop    %r14
     9d0:	41 5f                	pop    %r15
     9d2:	5d                   	pop    %rbp
     9d3:	c3                   	retq   
     9d4:	45 31 f6             	xor    %r14d,%r14d
     9d7:	e9 8b fe ff ff       	jmpq   867 <show_trace_log.isra.0.constprop.1+0xa7>
     9dc:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
     9e3:	00 00 
     9e5:	48 39 f0             	cmp    %rsi,%rax
     9e8:	48 89 e9             	mov    %rbp,%rcx
     9eb:	74 0e                	je     9fb <show_trace_log.isra.0.constprop.1+0x23b>
     9ed:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
     9f4:	48 8b 88 58 0b 00 00 	mov    0xb58(%rax),%rcx
     9fb:	48 8b 9d 40 ff ff ff 	mov    -0xc0(%rbp),%rbx
     a02:	48 8d 45 80          	lea    -0x80(%rbp),%rax
     a06:	31 d2                	xor    %edx,%edx
     a08:	48 89 c7             	mov    %rax,%rdi
     a0b:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
     a12:	48 89 de             	mov    %rbx,%rsi
     a15:	e8 00 00 00 00       	callq  a1a <show_trace_log.isra.0.constprop.1+0x25a>
     a1a:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
     a21:	00 00 
     a23:	48 39 c3             	cmp    %rax,%rbx
     a26:	74 21                	je     a49 <show_trace_log.isra.0.constprop.1+0x289>
     a28:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
     a2f:	48 8b 98 58 0b 00 00 	mov    0xb58(%rax),%rbx
     a36:	8b 4d 80             	mov    -0x80(%rbp),%ecx
     a39:	45 31 f6             	xor    %r14d,%r14d
     a3c:	85 c9                	test   %ecx,%ecx
     a3e:	0f 85 16 fe ff ff    	jne    85a <show_trace_log.isra.0.constprop.1+0x9a>
     a44:	e9 15 fe ff ff       	jmpq   85e <show_trace_log.isra.0.constprop.1+0x9e>
     a49:	48 89 eb             	mov    %rbp,%rbx
     a4c:	eb e8                	jmp    a36 <show_trace_log.isra.0.constprop.1+0x276>
     a4e:	66 90                	xchg   %ax,%ax

0000000000000a50 <misc_show_stack>:
     a50:	e8 00 00 00 00       	callq  a55 <misc_show_stack+0x5>
     a55:	48 85 f6             	test   %rsi,%rsi
     a58:	74 24                	je     a7e <misc_show_stack+0x2e>
     a5a:	48 85 d2             	test   %rdx,%rdx
     a5d:	74 05                	je     a64 <misc_show_stack+0x14>
     a5f:	e9 5c fd ff ff       	jmpq   7c0 <show_trace_log.isra.0.constprop.1>
     a64:	55                   	push   %rbp
     a65:	48 89 e5             	mov    %rsp,%rbp
     a68:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
     a6f:	00 00 
     a71:	48 39 c6             	cmp    %rax,%rsi
     a74:	48 0f 44 d5          	cmove  %rbp,%rdx
     a78:	5d                   	pop    %rbp
     a79:	e9 42 fd ff ff       	jmpq   7c0 <show_trace_log.isra.0.constprop.1>
     a7e:	65 48 8b 34 25 00 00 	mov    %gs:0x0,%rsi
     a85:	00 00 
     a87:	eb d1                	jmp    a5a <misc_show_stack+0xa>
     a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000a90 <showstack_unit_init>:
     a90:	e8 00 00 00 00       	callq  a95 <showstack_unit_init+0x5>
     a95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     a9c:	e8 00 00 00 00       	callq  aa1 <showstack_unit_init+0x11>
     aa1:	48 85 c0             	test   %rax,%rax
     aa4:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # aab <showstack_unit_init+0x1b>
     aab:	74 7c                	je     b29 <showstack_unit_init+0x99>
     aad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     ab4:	e8 00 00 00 00       	callq  ab9 <showstack_unit_init+0x29>
     ab9:	48 85 c0             	test   %rax,%rax
     abc:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # ac3 <showstack_unit_init+0x33>
     ac3:	0f 84 dd 00 00 00    	je     ba6 <showstack_unit_init+0x116>
     ac9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     ad0:	e8 00 00 00 00       	callq  ad5 <showstack_unit_init+0x45>
     ad5:	48 85 c0             	test   %rax,%rax
     ad8:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # adf <showstack_unit_init+0x4f>
     adf:	0f 84 a8 00 00 00    	je     b8d <showstack_unit_init+0xfd>
     ae5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     aec:	e8 00 00 00 00       	callq  af1 <showstack_unit_init+0x61>
     af1:	48 85 c0             	test   %rax,%rax
     af4:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # afb <showstack_unit_init+0x6b>
     afb:	74 77                	je     b74 <showstack_unit_init+0xe4>
     afd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b04:	e8 00 00 00 00       	callq  b09 <showstack_unit_init+0x79>
     b09:	48 85 c0             	test   %rax,%rax
     b0c:	74 4d                	je     b5b <showstack_unit_init+0xcb>
     b0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b15:	e8 00 00 00 00       	callq  b1a <showstack_unit_init+0x8a>
     b1a:	48 85 c0             	test   %rax,%rax
     b1d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # b24 <showstack_unit_init+0x94>
     b24:	74 1c                	je     b42 <showstack_unit_init+0xb2>
     b26:	31 c0                	xor    %eax,%eax
     b28:	c3                   	retq   
     b29:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     b30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b37:	e8 00 00 00 00       	callq  b3c <showstack_unit_init+0xac>
     b3c:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     b41:	c3                   	retq   
     b42:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     b49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b50:	e8 00 00 00 00       	callq  b55 <showstack_unit_init+0xc5>
     b55:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     b5a:	c3                   	retq   
     b5b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     b62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b69:	e8 00 00 00 00       	callq  b6e <showstack_unit_init+0xde>
     b6e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     b73:	c3                   	retq   
     b74:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     b7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b82:	e8 00 00 00 00       	callq  b87 <showstack_unit_init+0xf7>
     b87:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     b8c:	c3                   	retq   
     b8d:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     b94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     b9b:	e8 00 00 00 00       	callq  ba0 <showstack_unit_init+0x110>
     ba0:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     ba5:	c3                   	retq   
     ba6:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     bad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     bb4:	e8 00 00 00 00       	callq  bb9 <showstack_unit_init+0x129>
     bb9:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     bbe:	c3                   	retq   
     bbf:	90                   	nop

0000000000000bc0 <wkq_delay_test>:
     bc0:	e8 00 00 00 00       	callq  bc5 <wkq_delay_test+0x5>
     bc5:	c3                   	retq   
     bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     bcd:	00 00 00 

0000000000000bd0 <wkq_sig_performace_delay>:
     bd0:	e8 00 00 00 00       	callq  bd5 <wkq_sig_performace_delay+0x5>
     bd5:	53                   	push   %rbx
     bd6:	48 89 fb             	mov    %rdi,%rbx
     bd9:	e8 00 00 00 00       	callq  bde <wkq_sig_performace_delay+0xe>
     bde:	48 8d 7b 78          	lea    0x78(%rbx),%rdi
     be2:	31 c9                	xor    %ecx,%ecx
     be4:	ba 01 00 00 00       	mov    $0x1,%edx
     be9:	48 2b 83 98 00 00 00 	sub    0x98(%rbx),%rax
     bf0:	c6 83 90 00 00 00 01 	movb   $0x1,0x90(%rbx)
     bf7:	be 03 00 00 00       	mov    $0x3,%esi
     bfc:	48 89 83 a0 00 00 00 	mov    %rax,0xa0(%rbx)
     c03:	5b                   	pop    %rbx
     c04:	e9 00 00 00 00       	jmpq   c09 <wkq_sig_performace_delay+0x39>
     c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000c10 <wkq_sig_test>:
     c10:	e8 00 00 00 00       	callq  c15 <wkq_sig_test+0x5>
     c15:	bf 01 00 00 00       	mov    $0x1,%edi
     c1a:	e9 00 00 00 00       	jmpq   c1f <wkq_sig_test+0xf>
     c1f:	90                   	nop

0000000000000c20 <wkq_sig_spinlockirq_race_test>:
     c20:	e8 00 00 00 00       	callq  c25 <wkq_sig_spinlockirq_race_test+0x5>
     c25:	55                   	push   %rbp
     c26:	53                   	push   %rbx
     c27:	8b bf e8 00 00 00    	mov    0xe8(%rdi),%edi
     c2d:	e8 00 00 00 00       	callq  c32 <wkq_sig_spinlockirq_race_test+0x12>
     c32:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # c39 <wkq_sig_spinlockirq_race_test+0x19>
     c39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     c40:	48 01 c3             	add    %rax,%rbx
     c43:	e8 00 00 00 00       	callq  c48 <wkq_sig_spinlockirq_race_test+0x28>
     c48:	48 89 c5             	mov    %rax,%rbp
     c4b:	bf 01 00 00 00       	mov    $0x1,%edi
     c50:	e8 00 00 00 00       	callq  c55 <wkq_sig_spinlockirq_race_test+0x35>
     c55:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # c5c <wkq_sig_spinlockirq_race_test+0x3c>
     c5c:	48 39 d3             	cmp    %rdx,%rbx
     c5f:	79 ea                	jns    c4b <wkq_sig_spinlockirq_race_test+0x2b>
     c61:	48 89 ee             	mov    %rbp,%rsi
     c64:	5b                   	pop    %rbx
     c65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     c6c:	5d                   	pop    %rbp
     c6d:	e9 00 00 00 00       	jmpq   c72 <wkq_sig_spinlockirq_race_test+0x52>
     c72:	0f 1f 40 00          	nopl   0x0(%rax)
     c76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     c7d:	00 00 00 

0000000000000c80 <wkq_sig_spinlockirq_test>:
     c80:	e8 00 00 00 00       	callq  c85 <wkq_sig_spinlockirq_test+0x5>
     c85:	41 54                	push   %r12
     c87:	55                   	push   %rbp
     c88:	53                   	push   %rbx
     c89:	8b bf e8 00 00 00    	mov    0xe8(%rdi),%edi
     c8f:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
     c96:	e8 00 00 00 00       	callq  c9b <wkq_sig_spinlockirq_test+0x1b>
     c9b:	4c 8b 25 00 00 00 00 	mov    0x0(%rip),%r12        # ca2 <wkq_sig_spinlockirq_test+0x22>
     ca2:	49 01 c4             	add    %rax,%r12
     ca5:	48 89 df             	mov    %rbx,%rdi
     ca8:	e8 00 00 00 00       	callq  cad <wkq_sig_spinlockirq_test+0x2d>
     cad:	bf 01 00 00 00       	mov    $0x1,%edi
     cb2:	48 89 c5             	mov    %rax,%rbp
     cb5:	e8 00 00 00 00       	callq  cba <wkq_sig_spinlockirq_test+0x3a>
     cba:	48 89 ee             	mov    %rbp,%rsi
     cbd:	48 89 df             	mov    %rbx,%rdi
     cc0:	e8 00 00 00 00       	callq  cc5 <wkq_sig_spinlockirq_test+0x45>
     cc5:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # ccc <wkq_sig_spinlockirq_test+0x4c>
     ccc:	49 39 d4             	cmp    %rdx,%r12
     ccf:	79 d4                	jns    ca5 <wkq_sig_spinlockirq_test+0x25>
     cd1:	5b                   	pop    %rbx
     cd2:	5d                   	pop    %rbp
     cd3:	41 5c                	pop    %r12
     cd5:	c3                   	retq   
     cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     cdd:	00 00 00 

0000000000000ce0 <wkq_sig_spinlock_test>:
     ce0:	e8 00 00 00 00       	callq  ce5 <wkq_sig_spinlock_test+0x5>
     ce5:	55                   	push   %rbp
     ce6:	48 c7 c5 00 00 00 00 	mov    $0x0,%rbp
     ced:	53                   	push   %rbx
     cee:	8b bf 08 01 00 00    	mov    0x108(%rdi),%edi
     cf4:	e8 00 00 00 00       	callq  cf9 <wkq_sig_spinlock_test+0x19>
     cf9:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # d00 <wkq_sig_spinlock_test+0x20>
     d00:	48 01 c3             	add    %rax,%rbx
     d03:	48 89 ef             	mov    %rbp,%rdi
     d06:	e8 00 00 00 00       	callq  d0b <wkq_sig_spinlock_test+0x2b>
     d0b:	bf 01 00 00 00       	mov    $0x1,%edi
     d10:	e8 00 00 00 00       	callq  d15 <wkq_sig_spinlock_test+0x35>
     d15:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # d1c <wkq_sig_spinlock_test+0x3c>
     d1c:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # d23 <wkq_sig_spinlock_test+0x43>
     d23:	48 39 d3             	cmp    %rdx,%rbx
     d26:	79 db                	jns    d03 <wkq_sig_spinlock_test+0x23>
     d28:	5b                   	pop    %rbx
     d29:	5d                   	pop    %rbp
     d2a:	c3                   	retq   
     d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000d30 <workqueue_unit_ioctl_func>:
     d30:	e8 00 00 00 00       	callq  d35 <workqueue_unit_ioctl_func+0x5>
     d35:	41 54                	push   %r12
     d37:	55                   	push   %rbp
     d38:	53                   	push   %rbx
     d39:	48 89 d3             	mov    %rdx,%rbx
     d3c:	48 83 ec 28          	sub    $0x28,%rsp
     d40:	8b 52 10             	mov    0x10(%rdx),%edx
     d43:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # d4a <workqueue_unit_ioctl_func+0x1a>
     d4a:	89 90 38 01 00 00    	mov    %edx,0x138(%rax)
     d50:	8b 53 04             	mov    0x4(%rbx),%edx
     d53:	83 fa 03             	cmp    $0x3,%edx
     d56:	0f 84 a1 01 00 00    	je     efd <workqueue_unit_ioctl_func+0x1cd>
     d5c:	7f 41                	jg     d9f <workqueue_unit_ioctl_func+0x6f>
     d5e:	83 fa 01             	cmp    $0x1,%edx
     d61:	0f 84 c5 01 00 00    	je     f2c <workqueue_unit_ioctl_func+0x1fc>
     d67:	83 fa 02             	cmp    $0x2,%edx
     d6a:	0f 85 aa 01 00 00    	jne    f1a <workqueue_unit_ioctl_func+0x1ea>
     d70:	48 8b 30             	mov    (%rax),%rsi
     d73:	48 8d 50 30          	lea    0x30(%rax),%rdx
     d77:	bf 00 02 00 00       	mov    $0x200,%edi
     d7c:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
     d82:	e8 00 00 00 00       	callq  d87 <workqueue_unit_ioctl_func+0x57>
     d87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     d8e:	e8 00 00 00 00       	callq  d93 <workqueue_unit_ioctl_func+0x63>
     d93:	44 89 e0             	mov    %r12d,%eax
     d96:	48 83 c4 28          	add    $0x28,%rsp
     d9a:	5b                   	pop    %rbx
     d9b:	5d                   	pop    %rbp
     d9c:	41 5c                	pop    %r12
     d9e:	c3                   	retq   
     d9f:	83 fa 05             	cmp    $0x5,%edx
     da2:	0f 84 3c 01 00 00    	je     ee4 <workqueue_unit_ioctl_func+0x1b4>
     da8:	83 fa 06             	cmp    $0x6,%edx
     dab:	0f 85 69 01 00 00    	jne    f1a <workqueue_unit_ioctl_func+0x1ea>
     db1:	48 8b 30             	mov    (%rax),%rsi
     db4:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
     dbb:	bf 00 02 00 00       	mov    $0x200,%edi
     dc0:	e8 00 00 00 00       	callq  dc5 <workqueue_unit_ioctl_func+0x95>
     dc5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # dcc <workqueue_unit_ioctl_func+0x9c>
     dcc:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
     dd3:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
     dda:	48 8d b8 08 01 00 00 	lea    0x108(%rax),%rdi
     de1:	e8 00 00 00 00       	callq  de6 <workqueue_unit_ioctl_func+0xb6>
     de6:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # ded <workqueue_unit_ioctl_func+0xbd>
     ded:	0f 31                	rdtsc  
     def:	48 c1 e2 20          	shl    $0x20,%rdx
     df3:	c6 81 20 01 00 00 00 	movb   $0x0,0x120(%rcx)
     dfa:	31 f6                	xor    %esi,%esi
     dfc:	48 89 e7             	mov    %rsp,%rdi
     dff:	48 09 d0             	or     %rdx,%rax
     e02:	bd a0 86 01 00       	mov    $0x186a0,%ebp
     e07:	48 89 81 28 01 00 00 	mov    %rax,0x128(%rcx)
     e0e:	e8 00 00 00 00       	callq  e13 <workqueue_unit_ioctl_func+0xe3>
     e13:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # e1a <workqueue_unit_ioctl_func+0xea>
     e1a:	ba 01 00 00 00       	mov    $0x1,%edx
     e1f:	48 89 e6             	mov    %rsp,%rsi
     e22:	48 8d b8 08 01 00 00 	lea    0x108(%rax),%rdi
     e29:	e8 00 00 00 00       	callq  e2e <workqueue_unit_ioctl_func+0xfe>
     e2e:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # e35 <workqueue_unit_ioctl_func+0x105>
     e35:	80 bf 20 01 00 00 00 	cmpb   $0x0,0x120(%rdi)
     e3c:	0f 95 c2             	setne  %dl
     e3f:	31 c9                	xor    %ecx,%ecx
     e41:	84 d2                	test   %dl,%dl
     e43:	0f 85 12 01 00 00    	jne    f5b <workqueue_unit_ioctl_func+0x22b>
     e49:	84 c9                	test   %cl,%cl
     e4b:	0f 85 0a 01 00 00    	jne    f5b <workqueue_unit_ioctl_func+0x22b>
     e51:	48 85 c0             	test   %rax,%rax
     e54:	75 5b                	jne    eb1 <workqueue_unit_ioctl_func+0x181>
     e56:	48 89 ef             	mov    %rbp,%rdi
     e59:	e8 00 00 00 00       	callq  e5e <workqueue_unit_ioctl_func+0x12e>
     e5e:	ba 01 00 00 00       	mov    $0x1,%edx
     e63:	48 89 c5             	mov    %rax,%rbp
     e66:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # e6d <workqueue_unit_ioctl_func+0x13d>
     e6d:	48 89 e6             	mov    %rsp,%rsi
     e70:	48 8d b8 08 01 00 00 	lea    0x108(%rax),%rdi
     e77:	e8 00 00 00 00       	callq  e7c <workqueue_unit_ioctl_func+0x14c>
     e7c:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # e83 <workqueue_unit_ioctl_func+0x153>
     e83:	80 bf 20 01 00 00 00 	cmpb   $0x0,0x120(%rdi)
     e8a:	0f 95 c2             	setne  %dl
     e8d:	48 85 ed             	test   %rbp,%rbp
     e90:	0f 94 c1             	sete   %cl
     e93:	84 d2                	test   %dl,%dl
     e95:	74 b2                	je     e49 <workqueue_unit_ioctl_func+0x119>
     e97:	84 c9                	test   %cl,%cl
     e99:	74 a6                	je     e41 <workqueue_unit_ioctl_func+0x111>
     e9b:	48 81 c7 08 01 00 00 	add    $0x108,%rdi
     ea2:	48 89 e6             	mov    %rsp,%rsi
     ea5:	e8 00 00 00 00       	callq  eaa <workqueue_unit_ioctl_func+0x17a>
     eaa:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # eb1 <workqueue_unit_ioctl_func+0x181>
     eb1:	48 8d b7 30 01 00 00 	lea    0x130(%rdi),%rsi
     eb8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
     ebc:	ba 08 00 00 00       	mov    $0x8,%edx
     ec1:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
     ec7:	e8 00 00 00 00       	callq  ecc <workqueue_unit_ioctl_func+0x19c>
     ecc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     ed3:	e8 00 00 00 00       	callq  ed8 <workqueue_unit_ioctl_func+0x1a8>
     ed8:	44 89 e0             	mov    %r12d,%eax
     edb:	48 83 c4 28          	add    $0x28,%rsp
     edf:	5b                   	pop    %rbx
     ee0:	5d                   	pop    %rbp
     ee1:	41 5c                	pop    %r12
     ee3:	c3                   	retq   
     ee4:	48 8b 70 08          	mov    0x8(%rax),%rsi
     ee8:	48 8d 50 50          	lea    0x50(%rax),%rdx
     eec:	bf 00 02 00 00       	mov    $0x200,%edi
     ef1:	e8 00 00 00 00       	callq  ef6 <workqueue_unit_ioctl_func+0x1c6>
     ef6:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # efd <workqueue_unit_ioctl_func+0x1cd>
     efd:	48 8b 30             	mov    (%rax),%rsi
     f00:	48 8d 50 50          	lea    0x50(%rax),%rdx
     f04:	bf 00 02 00 00       	mov    $0x200,%edi
     f09:	e8 00 00 00 00       	callq  f0e <workqueue_unit_ioctl_func+0x1de>
     f0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     f15:	e8 00 00 00 00       	callq  f1a <workqueue_unit_ioctl_func+0x1ea>
     f1a:	48 83 c4 28          	add    $0x28,%rsp
     f1e:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
     f24:	44 89 e0             	mov    %r12d,%eax
     f27:	5b                   	pop    %rbx
     f28:	5d                   	pop    %rbp
     f29:	41 5c                	pop    %r12
     f2b:	c3                   	retq   
     f2c:	48 8b 30             	mov    (%rax),%rsi
     f2f:	48 8d 50 10          	lea    0x10(%rax),%rdx
     f33:	bf 00 02 00 00       	mov    $0x200,%edi
     f38:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
     f3e:	e8 00 00 00 00       	callq  f43 <workqueue_unit_ioctl_func+0x213>
     f43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     f4a:	e8 00 00 00 00       	callq  f4f <workqueue_unit_ioctl_func+0x21f>
     f4f:	44 89 e0             	mov    %r12d,%eax
     f52:	48 83 c4 28          	add    $0x28,%rsp
     f56:	5b                   	pop    %rbx
     f57:	5d                   	pop    %rbp
     f58:	41 5c                	pop    %r12
     f5a:	c3                   	retq   
     f5b:	48 81 c7 08 01 00 00 	add    $0x108,%rdi
     f62:	48 89 e6             	mov    %rsp,%rsi
     f65:	41 bc f0 ff ff ff    	mov    $0xfffffff0,%r12d
     f6b:	e8 00 00 00 00       	callq  f70 <workqueue_unit_ioctl_func+0x240>
     f70:	48 85 ed             	test   %rbp,%rbp
     f73:	0f 84 53 ff ff ff    	je     ecc <workqueue_unit_ioctl_func+0x19c>
     f79:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # f80 <workqueue_unit_ioctl_func+0x250>
     f80:	e9 2c ff ff ff       	jmpq   eb1 <workqueue_unit_ioctl_func+0x181>
     f85:	90                   	nop
     f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f8d:	00 00 00 

0000000000000f90 <workqueue_unit_init>:
     f90:	e8 00 00 00 00       	callq  f95 <workqueue_unit_init+0x5>
     f95:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # f9c <workqueue_unit_init+0xc>
     f9c:	53                   	push   %rbx
     f9d:	ba 40 01 00 00       	mov    $0x140,%edx
     fa2:	be c0 80 60 00       	mov    $0x6080c0,%esi
     fa7:	e8 00 00 00 00       	callq  fac <workqueue_unit_init+0x1c>
     fac:	48 85 c0             	test   %rax,%rax
     faf:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # fb6 <workqueue_unit_init+0x26>
     fb6:	0f 84 3e 01 00 00    	je     10fa <workqueue_unit_init+0x16a>
     fbc:	45 31 c0             	xor    %r8d,%r8d
     fbf:	31 c9                	xor    %ecx,%ecx
     fc1:	ba 01 00 00 00       	mov    $0x1,%edx
     fc6:	49 c7 c1 00 00 00 00 	mov    $0x0,%r9
     fcd:	be 0a 00 0e 00       	mov    $0xe000a,%esi
     fd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
     fd9:	48 89 c3             	mov    %rax,%rbx
     fdc:	e8 00 00 00 00       	callq  fe1 <workqueue_unit_init+0x51>
     fe1:	48 89 03             	mov    %rax,(%rbx)
     fe4:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # feb <workqueue_unit_init+0x5b>
     feb:	48 83 3b 00          	cmpq   $0x0,(%rbx)
     fef:	0f 84 05 01 00 00    	je     10fa <workqueue_unit_init+0x16a>
     ff5:	45 31 c0             	xor    %r8d,%r8d
     ff8:	31 c9                	xor    %ecx,%ecx
     ffa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1001:	49 c7 c1 00 00 00 00 	mov    $0x0,%r9
    1008:	ba 01 00 00 00       	mov    $0x1,%edx
    100d:	be 08 00 04 00       	mov    $0x40008,%esi
    1012:	e8 00 00 00 00       	callq  1017 <workqueue_unit_init+0x87>
    1017:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 101e <workqueue_unit_init+0x8e>
    101e:	48 89 43 08          	mov    %rax,0x8(%rbx)
    1022:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    1027:	0f 84 cd 00 00 00    	je     10fa <workqueue_unit_init+0x16a>
    102d:	48 8d 57 18          	lea    0x18(%rdi),%rdx
    1031:	45 31 c0             	xor    %r8d,%r8d
    1034:	31 c9                	xor    %ecx,%ecx
    1036:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    103d:	00 
    103e:	48 89 57 18          	mov    %rdx,0x18(%rdi)
    1042:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1049:	48 b8 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rax
    1050:	00 00 00 
    1053:	48 89 57 20          	mov    %rdx,0x20(%rdi)
    1057:	48 8d 57 38          	lea    0x38(%rdi),%rdx
    105b:	48 89 57 38          	mov    %rdx,0x38(%rdi)
    105f:	48 89 57 40          	mov    %rdx,0x40(%rdi)
    1063:	48 8d 57 58          	lea    0x58(%rdi),%rdx
    1067:	48 89 57 58          	mov    %rdx,0x58(%rdi)
    106b:	48 89 57 60          	mov    %rdx,0x60(%rdi)
    106f:	48 8d 57 78          	lea    0x78(%rdi),%rdx
    1073:	48 89 57 78          	mov    %rdx,0x78(%rdi)
    1077:	48 89 47 10          	mov    %rax,0x10(%rdi)
    107b:	48 89 47 30          	mov    %rax,0x30(%rdi)
    107f:	48 89 47 50          	mov    %rax,0x50(%rdi)
    1083:	48 89 47 70          	mov    %rax,0x70(%rdi)
    1087:	48 89 97 80 00 00 00 	mov    %rdx,0x80(%rdi)
    108e:	48 8d 97 98 00 00 00 	lea    0x98(%rdi),%rdx
    1095:	48 89 87 90 00 00 00 	mov    %rax,0x90(%rdi)
    109c:	48 89 87 b0 00 00 00 	mov    %rax,0xb0(%rdi)
    10a3:	48 8d 87 b8 00 00 00 	lea    0xb8(%rdi),%rax
    10aa:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
    10b1:	48 89 57 c8          	mov    %rdx,-0x38(%rdi)
    10b5:	48 89 57 d0          	mov    %rdx,-0x30(%rdi)
    10b9:	ba 00 00 20 00       	mov    $0x200000,%edx
    10be:	48 89 47 e8          	mov    %rax,-0x18(%rdi)
    10c2:	48 89 47 f0          	mov    %rax,-0x10(%rdi)
    10c6:	48 c7 87 78 ff ff ff 	movq   $0x0,-0x88(%rdi)
    10cd:	00 00 00 00 
    10d1:	48 c7 47 98 00 00 00 	movq   $0x0,-0x68(%rdi)
    10d8:	00 
    10d9:	48 c7 47 b8 00 00 00 	movq   $0x0,-0x48(%rdi)
    10e0:	00 
    10e1:	48 c7 47 d8 00 00 00 	movq   $0x0,-0x28(%rdi)
    10e8:	00 
    10e9:	48 c7 47 f8 00 00 00 	movq   $0x0,-0x8(%rdi)
    10f0:	00 
    10f1:	e8 00 00 00 00       	callq  10f6 <workqueue_unit_init+0x166>
    10f6:	31 c0                	xor    %eax,%eax
    10f8:	5b                   	pop    %rbx
    10f9:	c3                   	retq   
    10fa:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    10ff:	5b                   	pop    %rbx
    1100:	c3                   	retq   
    1101:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    110d:	00 00 00 

0000000000001110 <workqueue_unit_exit>:
    1110:	e8 00 00 00 00       	callq  1115 <workqueue_unit_exit+0x5>
    1115:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 111c <workqueue_unit_exit+0xc>
    111c:	48 8b 38             	mov    (%rax),%rdi
    111f:	e8 00 00 00 00       	callq  1124 <workqueue_unit_exit+0x14>
    1124:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 112b <workqueue_unit_exit+0x1b>
    112b:	48 8b 78 08          	mov    0x8(%rax),%rdi
    112f:	e8 00 00 00 00       	callq  1134 <workqueue_unit_exit+0x24>
    1134:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 113b <workqueue_unit_exit+0x2b>
    113b:	e8 00 00 00 00       	callq  1140 <workqueue_unit_exit+0x30>
    1140:	31 c0                	xor    %eax,%eax
    1142:	c3                   	retq   
    1143:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    114a:	00 00 00 
    114d:	0f 1f 00             	nopl   (%rax)

0000000000001150 <me_udelay>:
    1150:	e8 00 00 00 00       	callq  1155 <me_udelay+0x5>
    1155:	48 69 c7 28 0a 00 00 	imul   $0xa28,%rdi,%rax
    115c:	48 85 c0             	test   %rax,%rax
    115f:	74 24                	je     1185 <me_udelay+0x35>
    1161:	eb 0d                	jmp    1170 <me_udelay+0x20>
    1163:	0f 1f 00             	nopl   (%rax)
    1166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    116d:	00 00 00 
    1170:	eb 0e                	jmp    1180 <me_udelay+0x30>
    1172:	0f 1f 40 00          	nopl   0x0(%rax)
    1176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    117d:	00 00 00 
    1180:	48 ff c8             	dec    %rax
    1183:	75 fb                	jne    1180 <me_udelay+0x30>
    1185:	48 ff c8             	dec    %rax
    1188:	c3                   	retq   
    1189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001190 <me_mdelay>:
    1190:	e8 00 00 00 00       	callq  1195 <me_mdelay+0x5>
    1195:	48 69 c7 40 ac 27 00 	imul   $0x27ac40,%rdi,%rax
    119c:	48 85 c0             	test   %rax,%rax
    119f:	74 24                	je     11c5 <me_mdelay+0x35>
    11a1:	eb 0d                	jmp    11b0 <me_mdelay+0x20>
    11a3:	0f 1f 00             	nopl   (%rax)
    11a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    11ad:	00 00 00 
    11b0:	eb 0e                	jmp    11c0 <me_mdelay+0x30>
    11b2:	0f 1f 40 00          	nopl   0x0(%rax)
    11b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    11bd:	00 00 00 
    11c0:	48 ff c8             	dec    %rax
    11c3:	75 fb                	jne    11c0 <me_mdelay+0x30>
    11c5:	48 ff c8             	dec    %rax
    11c8:	c3                   	retq   
    11c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011d0 <get_time_tick>:
    11d0:	e8 00 00 00 00       	callq  11d5 <get_time_tick+0x5>
    11d5:	0f 31                	rdtsc  
    11d7:	48 c1 e2 20          	shl    $0x20,%rdx
    11db:	48 09 d0             	or     %rdx,%rax
    11de:	c3                   	retq   
    11df:	90                   	nop

00000000000011e0 <locktest_unit_ioctl_func>:
    11e0:	e8 00 00 00 00       	callq  11e5 <locktest_unit_ioctl_func+0x5>
    11e5:	8b 42 04             	mov    0x4(%rdx),%eax
    11e8:	83 f8 03             	cmp    $0x3,%eax
    11eb:	0f 84 9c 00 00 00    	je     128d <locktest_unit_ioctl_func+0xad>
    11f1:	7e 1b                	jle    120e <locktest_unit_ioctl_func+0x2e>
    11f3:	83 f8 05             	cmp    $0x5,%eax
    11f6:	74 36                	je     122e <locktest_unit_ioctl_func+0x4e>
    11f8:	7c 71                	jl     126b <locktest_unit_ioctl_func+0x8b>
    11fa:	83 f8 06             	cmp    $0x6,%eax
    11fd:	75 0c                	jne    120b <locktest_unit_ioctl_func+0x2b>
    11ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1206:	e8 00 00 00 00       	callq  120b <locktest_unit_ioctl_func+0x2b>
    120b:	31 c0                	xor    %eax,%eax
    120d:	c3                   	retq   
    120e:	83 f8 01             	cmp    $0x1,%eax
    1211:	74 3d                	je     1250 <locktest_unit_ioctl_func+0x70>
    1213:	83 f8 02             	cmp    $0x2,%eax
    1216:	75 f3                	jne    120b <locktest_unit_ioctl_func+0x2b>
    1218:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    121f:	e8 00 00 00 00       	callq  1224 <locktest_unit_ioctl_func+0x44>
    1224:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 122b <locktest_unit_ioctl_func+0x4b>
    122b:	31 c0                	xor    %eax,%eax
    122d:	c3                   	retq   
    122e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1235:	e8 00 00 00 00       	callq  123a <locktest_unit_ioctl_func+0x5a>
    123a:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 1241 <locktest_unit_ioctl_func+0x61>
    1241:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1248:	e8 00 00 00 00       	callq  124d <locktest_unit_ioctl_func+0x6d>
    124d:	31 c0                	xor    %eax,%eax
    124f:	c3                   	retq   
    1250:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1257:	e8 00 00 00 00       	callq  125c <locktest_unit_ioctl_func+0x7c>
    125c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1263:	e8 00 00 00 00       	callq  1268 <locktest_unit_ioctl_func+0x88>
    1268:	31 c0                	xor    %eax,%eax
    126a:	c3                   	retq   
    126b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1272:	e8 00 00 00 00       	callq  1277 <locktest_unit_ioctl_func+0x97>
    1277:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    127e:	e8 00 00 00 00       	callq  1283 <locktest_unit_ioctl_func+0xa3>
    1283:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 128a <locktest_unit_ioctl_func+0xaa>
    128a:	31 c0                	xor    %eax,%eax
    128c:	c3                   	retq   
    128d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1294:	e8 00 00 00 00       	callq  1299 <locktest_unit_ioctl_func+0xb9>
    1299:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    12a0:	e8 00 00 00 00       	callq  12a5 <locktest_unit_ioctl_func+0xc5>
    12a5:	31 c0                	xor    %eax,%eax
    12a7:	c3                   	retq   
    12a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12af:	00 

00000000000012b0 <locktest_unit_init>:
    12b0:	e8 00 00 00 00       	callq  12b5 <locktest_unit_init+0x5>
    12b5:	31 c0                	xor    %eax,%eax
    12b7:	c3                   	retq   
    12b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12bf:	00 

00000000000012c0 <locktest_unit_exit>:
    12c0:	e8 00 00 00 00       	callq  12c5 <locktest_unit_exit+0x5>
    12c5:	31 c0                	xor    %eax,%eax
    12c7:	c3                   	retq   
    12c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12cf:	00 

00000000000012d0 <msr_unit_ioctl_func>:
    12d0:	e8 00 00 00 00       	callq  12d5 <msr_unit_ioctl_func+0x5>
    12d5:	31 c0                	xor    %eax,%eax
    12d7:	c3                   	retq   
    12d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12df:	00 

00000000000012e0 <msr_unit_init>:
    12e0:	e8 00 00 00 00       	callq  12e5 <msr_unit_init+0x5>
    12e5:	31 c0                	xor    %eax,%eax
    12e7:	c3                   	retq   
    12e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12ef:	00 

00000000000012f0 <msr_unit_exit>:
    12f0:	e8 00 00 00 00       	callq  12f5 <msr_unit_exit+0x5>
    12f5:	31 c0                	xor    %eax,%eax
    12f7:	c3                   	retq   
    12f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12ff:	00 

0000000000001300 <radixtree_unit_ioctl_func>:
    1300:	e8 00 00 00 00       	callq  1305 <radixtree_unit_ioctl_func+0x5>
    1305:	41 56                	push   %r14
    1307:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 130e <radixtree_unit_ioctl_func+0xe>
    130e:	41 55                	push   %r13
    1310:	41 54                	push   %r12
    1312:	55                   	push   %rbp
    1313:	53                   	push   %rbx
    1314:	8b 42 04             	mov    0x4(%rdx),%eax
    1317:	48 89 d3             	mov    %rdx,%rbx
    131a:	83 f8 02             	cmp    $0x2,%eax
    131d:	0f 84 1d 01 00 00    	je     1440 <radixtree_unit_ioctl_func+0x140>
    1323:	7e 72                	jle    1397 <radixtree_unit_ioctl_func+0x97>
    1325:	83 f8 03             	cmp    $0x3,%eax
    1328:	74 23                	je     134d <radixtree_unit_ioctl_func+0x4d>
    132a:	83 f8 04             	cmp    $0x4,%eax
    132d:	0f 85 fb 00 00 00    	jne    142e <radixtree_unit_ioctl_func+0x12e>
    1333:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    1337:	31 f6                	xor    %esi,%esi
    1339:	45 31 ed             	xor    %r13d,%r13d
    133c:	e8 00 00 00 00       	callq  1341 <radixtree_unit_ioctl_func+0x41>
    1341:	5b                   	pop    %rbx
    1342:	44 89 e8             	mov    %r13d,%eax
    1345:	5d                   	pop    %rbp
    1346:	41 5c                	pop    %r12
    1348:	41 5d                	pop    %r13
    134a:	41 5e                	pop    %r14
    134c:	c3                   	retq   
    134d:	48 63 72 10          	movslq 0x10(%rdx),%rsi
    1351:	e8 00 00 00 00       	callq  1356 <radixtree_unit_ioctl_func+0x56>
    1356:	48 85 c0             	test   %rax,%rax
    1359:	48 89 c5             	mov    %rax,%rbp
    135c:	0f 84 1d 01 00 00    	je     147f <radixtree_unit_ioctl_func+0x17f>
    1362:	4c 63 63 20          	movslq 0x20(%rbx),%r12
    1366:	48 89 c7             	mov    %rax,%rdi
    1369:	ba 01 00 00 00       	mov    $0x1,%edx
    136e:	45 31 ed             	xor    %r13d,%r13d
    1371:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    1375:	4c 89 e6             	mov    %r12,%rsi
    1378:	e8 00 00 00 00       	callq  137d <radixtree_unit_ioctl_func+0x7d>
    137d:	4c 89 e2             	mov    %r12,%rdx
    1380:	48 89 ee             	mov    %rbp,%rsi
    1383:	48 89 df             	mov    %rbx,%rdi
    1386:	e8 00 00 00 00       	callq  138b <radixtree_unit_ioctl_func+0x8b>
    138b:	44 89 e8             	mov    %r13d,%eax
    138e:	5b                   	pop    %rbx
    138f:	5d                   	pop    %rbp
    1390:	41 5c                	pop    %r12
    1392:	41 5d                	pop    %r13
    1394:	41 5e                	pop    %r14
    1396:	c3                   	retq   
    1397:	83 f8 01             	cmp    $0x1,%eax
    139a:	0f 85 8e 00 00 00    	jne    142e <radixtree_unit_ioctl_func+0x12e>
    13a0:	8b 6a 14             	mov    0x14(%rdx),%ebp
    13a3:	85 ed                	test   %ebp,%ebp
    13a5:	0f 8e 83 00 00 00    	jle    142e <radixtree_unit_ioctl_func+0x12e>
    13ab:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 13b2 <radixtree_unit_ioctl_func+0xb2>
    13b2:	ba 00 10 00 00       	mov    $0x1000,%edx
    13b7:	be c0 80 60 00       	mov    $0x6080c0,%esi
    13bc:	e8 00 00 00 00       	callq  13c1 <radixtree_unit_ioctl_func+0xc1>
    13c1:	4c 63 6b 20          	movslq 0x20(%rbx),%r13
    13c5:	31 d2                	xor    %edx,%edx
    13c7:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    13cb:	49 89 c4             	mov    %rax,%r12
    13ce:	48 89 c7             	mov    %rax,%rdi
    13d1:	4c 89 ee             	mov    %r13,%rsi
    13d4:	e8 00 00 00 00       	callq  13d9 <radixtree_unit_ioctl_func+0xd9>
    13d9:	4c 89 ea             	mov    %r13,%rdx
    13dc:	4c 89 f6             	mov    %r14,%rsi
    13df:	4c 89 e7             	mov    %r12,%rdi
    13e2:	e8 00 00 00 00       	callq  13e7 <radixtree_unit_ioctl_func+0xe7>
    13e7:	48 85 c0             	test   %rax,%rax
    13ea:	75 42                	jne    142e <radixtree_unit_ioctl_func+0x12e>
    13ec:	83 ed 01             	sub    $0x1,%ebp
    13ef:	48 63 73 10          	movslq 0x10(%rbx),%rsi
    13f3:	31 d2                	xor    %edx,%edx
    13f5:	4c 89 e1             	mov    %r12,%rcx
    13f8:	83 ed 01             	sub    $0x1,%ebp
    13fb:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1402 <radixtree_unit_ioctl_func+0x102>
    1402:	8d 46 01             	lea    0x1(%rsi),%eax
    1405:	89 43 10             	mov    %eax,0x10(%rbx)
    1408:	e8 00 00 00 00       	callq  140d <radixtree_unit_ioctl_func+0x10d>
    140d:	83 fd ff             	cmp    $0xffffffff,%ebp
    1410:	41 89 c5             	mov    %eax,%r13d
    1413:	75 da                	jne    13ef <radixtree_unit_ioctl_func+0xef>
    1415:	85 c0                	test   %eax,%eax
    1417:	0f 84 24 ff ff ff    	je     1341 <radixtree_unit_ioctl_func+0x41>
    141d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1424:	e8 00 00 00 00       	callq  1429 <radixtree_unit_ioctl_func+0x129>
    1429:	e9 13 ff ff ff       	jmpq   1341 <radixtree_unit_ioctl_func+0x41>
    142e:	41 bd ea ff ff ff    	mov    $0xffffffea,%r13d
    1434:	5b                   	pop    %rbx
    1435:	44 89 e8             	mov    %r13d,%eax
    1438:	5d                   	pop    %rbp
    1439:	41 5c                	pop    %r12
    143b:	41 5d                	pop    %r13
    143d:	41 5e                	pop    %r14
    143f:	c3                   	retq   
    1440:	48 63 72 10          	movslq 0x10(%rdx),%rsi
    1444:	e8 00 00 00 00       	callq  1449 <radixtree_unit_ioctl_func+0x149>
    1449:	48 85 c0             	test   %rax,%rax
    144c:	74 17                	je     1465 <radixtree_unit_ioctl_func+0x165>
    144e:	48 89 c7             	mov    %rax,%rdi
    1451:	45 31 ed             	xor    %r13d,%r13d
    1454:	e8 00 00 00 00       	callq  1459 <radixtree_unit_ioctl_func+0x159>
    1459:	44 89 e8             	mov    %r13d,%eax
    145c:	5b                   	pop    %rbx
    145d:	5d                   	pop    %rbp
    145e:	41 5c                	pop    %r12
    1460:	41 5d                	pop    %r13
    1462:	41 5e                	pop    %r14
    1464:	c3                   	retq   
    1465:	8b 73 10             	mov    0x10(%rbx),%esi
    1468:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    146f:	41 bd ea ff ff ff    	mov    $0xffffffea,%r13d
    1475:	e8 00 00 00 00       	callq  147a <radixtree_unit_ioctl_func+0x17a>
    147a:	e9 c2 fe ff ff       	jmpq   1341 <radixtree_unit_ioctl_func+0x41>
    147f:	8b 73 10             	mov    0x10(%rbx),%esi
    1482:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1489:	41 bd ea ff ff ff    	mov    $0xffffffea,%r13d
    148f:	e8 00 00 00 00       	callq  1494 <radixtree_unit_ioctl_func+0x194>
    1494:	e9 a8 fe ff ff       	jmpq   1341 <radixtree_unit_ioctl_func+0x41>
    1499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014a0 <radixtree_unit_init>:
    14a0:	e8 00 00 00 00       	callq  14a5 <radixtree_unit_init+0x5>
    14a5:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 14ac <radixtree_unit_init+0xc>
    14ac:	ba 10 00 00 00       	mov    $0x10,%edx
    14b1:	be c0 80 60 00       	mov    $0x6080c0,%esi
    14b6:	e8 00 00 00 00       	callq  14bb <radixtree_unit_init+0x1b>
    14bb:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 14c2 <radixtree_unit_init+0x22>
    14c2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    14c8:	c7 40 04 c0 00 60 00 	movl   $0x6000c0,0x4(%rax)
    14cf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    14d6:	00 
    14d7:	31 c0                	xor    %eax,%eax
    14d9:	c3                   	retq   
    14da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000014e0 <radixtree_unit_exit>:
    14e0:	e8 00 00 00 00       	callq  14e5 <radixtree_unit_exit+0x5>
    14e5:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 14ec <radixtree_unit_exit+0xc>
    14ec:	e8 00 00 00 00       	callq  14f1 <radixtree_unit_exit+0x11>
    14f1:	31 c0                	xor    %eax,%eax
    14f3:	c3                   	retq   
    14f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    14fb:	00 00 00 
    14fe:	66 90                	xchg   %ax,%ax

0000000000001500 <get_block_by_name>:
    1500:	e8 00 00 00 00       	callq  1505 <get_block_by_name+0x5>
    1505:	41 54                	push   %r12
    1507:	4c 8b 25 00 00 00 00 	mov    0x0(%rip),%r12        # 150e <get_block_by_name+0xe>
    150e:	55                   	push   %rbp
    150f:	53                   	push   %rbx
    1510:	49 8b 1c 24          	mov    (%r12),%rbx
    1514:	49 39 dc             	cmp    %rbx,%r12
    1517:	74 28                	je     1541 <get_block_by_name+0x41>
    1519:	48 89 fd             	mov    %rdi,%rbp
    151c:	eb 08                	jmp    1526 <get_block_by_name+0x26>
    151e:	48 8b 1b             	mov    (%rbx),%rbx
    1521:	49 39 dc             	cmp    %rbx,%r12
    1524:	74 1b                	je     1541 <get_block_by_name+0x41>
    1526:	48 8d bb d8 03 00 00 	lea    0x3d8(%rbx),%rdi
    152d:	48 89 ee             	mov    %rbp,%rsi
    1530:	e8 00 00 00 00       	callq  1535 <get_block_by_name+0x35>
    1535:	85 c0                	test   %eax,%eax
    1537:	74 e5                	je     151e <get_block_by_name+0x1e>
    1539:	48 89 d8             	mov    %rbx,%rax
    153c:	5b                   	pop    %rbx
    153d:	5d                   	pop    %rbp
    153e:	41 5c                	pop    %r12
    1540:	c3                   	retq   
    1541:	31 db                	xor    %ebx,%ebx
    1543:	48 89 d8             	mov    %rbx,%rax
    1546:	5b                   	pop    %rbx
    1547:	5d                   	pop    %rbp
    1548:	41 5c                	pop    %r12
    154a:	c3                   	retq   
    154b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001550 <ext2test_unit_ioctl_func>:
    1550:	e8 00 00 00 00       	callq  1555 <ext2test_unit_ioctl_func+0x5>
    1555:	55                   	push   %rbp
    1556:	53                   	push   %rbx
    1557:	8b 42 04             	mov    0x4(%rdx),%eax
    155a:	83 f8 01             	cmp    $0x1,%eax
    155d:	74 3f                	je     159e <ext2test_unit_ioctl_func+0x4e>
    155f:	83 f8 02             	cmp    $0x2,%eax
    1562:	75 32                	jne    1596 <ext2test_unit_ioctl_func+0x46>
    1564:	48 8d 5a 10          	lea    0x10(%rdx),%rbx
    1568:	48 89 df             	mov    %rbx,%rdi
    156b:	e8 00 00 00 00       	callq  1570 <ext2test_unit_ioctl_func+0x20>
    1570:	48 85 c0             	test   %rax,%rax
    1573:	48 89 c5             	mov    %rax,%rbp
    1576:	74 1e                	je     1596 <ext2test_unit_ioctl_func+0x46>
    1578:	8b 50 18             	mov    0x18(%rax),%edx
    157b:	b9 08 00 00 00       	mov    $0x8,%ecx
    1580:	be 02 00 00 00       	mov    $0x2,%esi
    1585:	48 8b b8 d0 00 00 00 	mov    0xd0(%rax),%rdi
    158c:	e8 00 00 00 00       	callq  1591 <ext2test_unit_ioctl_func+0x41>
    1591:	48 85 c0             	test   %rax,%rax
    1594:	75 51                	jne    15e7 <ext2test_unit_ioctl_func+0x97>
    1596:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    159b:	5b                   	pop    %rbx
    159c:	5d                   	pop    %rbp
    159d:	c3                   	retq   
    159e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    15a5:	e8 00 00 00 00       	callq  15aa <ext2test_unit_ioctl_func+0x5a>
    15aa:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 15b1 <ext2test_unit_ioctl_func+0x61>
    15b1:	48 8b 10             	mov    (%rax),%rdx
    15b4:	48 39 d0             	cmp    %rdx,%rax
    15b7:	75 05                	jne    15be <ext2test_unit_ioctl_func+0x6e>
    15b9:	31 c0                	xor    %eax,%eax
    15bb:	5b                   	pop    %rbx
    15bc:	5d                   	pop    %rbp
    15bd:	c3                   	retq   
    15be:	48 89 d3             	mov    %rdx,%rbx
    15c1:	48 c7 c5 00 00 00 00 	mov    $0x0,%rbp
    15c8:	48 8d b3 d8 03 00 00 	lea    0x3d8(%rbx),%rsi
    15cf:	48 89 ef             	mov    %rbp,%rdi
    15d2:	e8 00 00 00 00       	callq  15d7 <ext2test_unit_ioctl_func+0x87>
    15d7:	48 8b 1b             	mov    (%rbx),%rbx
    15da:	48 3b 1d 00 00 00 00 	cmp    0x0(%rip),%rbx        # 15e1 <ext2test_unit_ioctl_func+0x91>
    15e1:	75 e5                	jne    15c8 <ext2test_unit_ioctl_func+0x78>
    15e3:	31 c0                	xor    %eax,%eax
    15e5:	eb d4                	jmp    15bb <ext2test_unit_ioctl_func+0x6b>
    15e7:	48 8d 95 d8 03 00 00 	lea    0x3d8(%rbp),%rdx
    15ee:	48 89 de             	mov    %rbx,%rsi
    15f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    15f8:	e8 00 00 00 00       	callq  15fd <ext2test_unit_ioctl_func+0xad>
    15fd:	83 c8 ff             	or     $0xffffffff,%eax
    1600:	eb 99                	jmp    159b <ext2test_unit_ioctl_func+0x4b>
    1602:	0f 1f 40 00          	nopl   0x0(%rax)
    1606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    160d:	00 00 00 

0000000000001610 <ext2test_unit_init>:
    1610:	e8 00 00 00 00       	callq  1615 <ext2test_unit_init+0x5>
    1615:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    161c:	e8 00 00 00 00       	callq  1621 <ext2test_unit_init+0x11>
    1621:	48 85 c0             	test   %rax,%rax
    1624:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 162b <ext2test_unit_init+0x1b>
    162b:	0f 94 c0             	sete   %al
    162e:	0f b6 c0             	movzbl %al,%eax
    1631:	c3                   	retq   
    1632:	0f 1f 40 00          	nopl   0x0(%rax)
    1636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    163d:	00 00 00 

0000000000001640 <ext2test_unit_exit>:
    1640:	e8 00 00 00 00       	callq  1645 <ext2test_unit_exit+0x5>
    1645:	31 c0                	xor    %eax,%eax
    1647:	c3                   	retq   
    1648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    164f:	00 

0000000000001650 <atm_sig_test>:
    1650:	e8 00 00 00 00       	callq  1655 <atm_sig_test+0x5>
    1655:	53                   	push   %rbx
    1656:	e8 00 00 00 00       	callq  165b <atm_sig_test+0xb>
    165b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1662:	48 89 c3             	mov    %rax,%rbx
    1665:	e8 00 00 00 00       	callq  166a <atm_sig_test+0x1a>
    166a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1671:	e8 00 00 00 00       	callq  1676 <atm_sig_test+0x26>
    1676:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 167d <atm_sig_test+0x2d>
    167d:	8b ba a8 10 00 00    	mov    0x10a8(%rdx),%edi
    1683:	ba 80 96 98 00       	mov    $0x989680,%edx
    1688:	eb 06                	jmp    1690 <atm_sig_test+0x40>
    168a:	48 83 ea 01          	sub    $0x1,%rdx
    168e:	74 1c                	je     16ac <atm_sig_test+0x5c>
    1690:	83 ff 01             	cmp    $0x1,%edi
    1693:	75 f5                	jne    168a <atm_sig_test+0x3a>
    1695:	48 63 0d 00 00 00 00 	movslq 0x0(%rip),%rcx        # 169c <atm_sig_test+0x4c>
    169c:	48 83 c1 01          	add    $0x1,%rcx
    16a0:	48 83 ea 01          	sub    $0x1,%rdx
    16a4:	89 0d 00 00 00 00    	mov    %ecx,0x0(%rip)        # 16aa <atm_sig_test+0x5a>
    16aa:	75 e4                	jne    1690 <atm_sig_test+0x40>
    16ac:	48 89 c6             	mov    %rax,%rsi
    16af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    16b6:	e8 00 00 00 00       	callq  16bb <atm_sig_test+0x6b>
    16bb:	e8 00 00 00 00       	callq  16c0 <atm_sig_test+0x70>
    16c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    16c7:	48 29 d8             	sub    %rbx,%rax
    16ca:	5b                   	pop    %rbx
    16cb:	48 89 c6             	mov    %rax,%rsi
    16ce:	e9 00 00 00 00       	jmpq   16d3 <atm_sig_test+0x83>
    16d3:	0f 1f 00             	nopl   (%rax)
    16d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    16dd:	00 00 00 

00000000000016e0 <atomic_unit_ioctl_func>:
    16e0:	e8 00 00 00 00       	callq  16e5 <atomic_unit_ioctl_func+0x5>
    16e5:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 16ec <atomic_unit_ioctl_func+0xc>
    16ec:	83 7a 04 01          	cmpl   $0x1,0x4(%rdx)
    16f0:	74 03                	je     16f5 <atomic_unit_ioctl_func+0x15>
    16f2:	31 c0                	xor    %eax,%eax
    16f4:	c3                   	retq   
    16f5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 16fc <atomic_unit_ioctl_func+0x1c>
    16fc:	bf 00 02 00 00       	mov    $0x200,%edi
    1701:	48 8b 30             	mov    (%rax),%rsi
    1704:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1708:	c7 80 a8 10 00 00 01 	movl   $0x1,0x10a8(%rax)
    170f:	00 00 00 
    1712:	e8 00 00 00 00       	callq  1717 <atomic_unit_ioctl_func+0x37>
    1717:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 171e <atomic_unit_ioctl_func+0x3e>
    171e:	48 8d 78 10          	lea    0x10(%rax),%rdi
    1722:	e8 00 00 00 00       	callq  1727 <atomic_unit_ioctl_func+0x47>
    1727:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    172e:	e8 00 00 00 00       	callq  1733 <atomic_unit_ioctl_func+0x53>
    1733:	eb bd                	jmp    16f2 <atomic_unit_ioctl_func+0x12>
    1735:	90                   	nop
    1736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    173d:	00 00 00 

0000000000001740 <atomic_unit_init>:
    1740:	e8 00 00 00 00       	callq  1745 <atomic_unit_init+0x5>
    1745:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 174c <atomic_unit_init+0xc>
    174c:	53                   	push   %rbx
    174d:	ba b0 10 00 00       	mov    $0x10b0,%edx
    1752:	be c0 80 60 00       	mov    $0x6080c0,%esi
    1757:	e8 00 00 00 00       	callq  175c <atomic_unit_init+0x1c>
    175c:	48 85 c0             	test   %rax,%rax
    175f:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1766 <atomic_unit_init+0x26>
    1766:	0f 84 a6 00 00 00    	je     1812 <atomic_unit_init+0xd2>
    176c:	45 31 c0             	xor    %r8d,%r8d
    176f:	31 c9                	xor    %ecx,%ecx
    1771:	ba 01 00 00 00       	mov    $0x1,%edx
    1776:	49 c7 c1 00 00 00 00 	mov    $0x0,%r9
    177d:	be 0a 00 0e 00       	mov    $0xe000a,%esi
    1782:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1789:	48 89 c3             	mov    %rax,%rbx
    178c:	e8 00 00 00 00       	callq  1791 <atomic_unit_init+0x51>
    1791:	48 89 03             	mov    %rax,(%rbx)
    1794:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 179b <atomic_unit_init+0x5b>
    179b:	48 83 3b 00          	cmpq   $0x0,(%rbx)
    179f:	74 78                	je     1819 <atomic_unit_init+0xd9>
    17a1:	45 31 c0             	xor    %r8d,%r8d
    17a4:	31 c9                	xor    %ecx,%ecx
    17a6:	ba 01 00 00 00       	mov    $0x1,%edx
    17ab:	49 c7 c1 00 00 00 00 	mov    $0x0,%r9
    17b2:	be 08 00 04 00       	mov    $0x40008,%esi
    17b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    17be:	e8 00 00 00 00       	callq  17c3 <atomic_unit_init+0x83>
    17c3:	48 89 43 08          	mov    %rax,0x8(%rbx)
    17c7:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 17ce <atomic_unit_init+0x8e>
    17ce:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
    17d3:	74 53                	je     1828 <atomic_unit_init+0xe8>
    17d5:	48 8d 50 18          	lea    0x18(%rax),%rdx
    17d9:	48 b9 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rcx
    17e0:	00 00 00 
    17e3:	48 89 50 18          	mov    %rdx,0x18(%rax)
    17e7:	48 89 48 10          	mov    %rcx,0x10(%rax)
    17eb:	48 89 50 20          	mov    %rdx,0x20(%rax)
    17ef:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
    17f6:	48 89 48 30          	mov    %rcx,0x30(%rax)
    17fa:	48 8d 48 38          	lea    0x38(%rax),%rcx
    17fe:	48 89 50 28          	mov    %rdx,0x28(%rax)
    1802:	48 89 48 38          	mov    %rcx,0x38(%rax)
    1806:	48 89 48 40          	mov    %rcx,0x40(%rax)
    180a:	48 89 50 48          	mov    %rdx,0x48(%rax)
    180e:	31 c0                	xor    %eax,%eax
    1810:	5b                   	pop    %rbx
    1811:	c3                   	retq   
    1812:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1817:	5b                   	pop    %rbx
    1818:	c3                   	retq   
    1819:	48 89 df             	mov    %rbx,%rdi
    181c:	e8 00 00 00 00       	callq  1821 <atomic_unit_init+0xe1>
    1821:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1826:	5b                   	pop    %rbx
    1827:	c3                   	retq   
    1828:	48 8b 38             	mov    (%rax),%rdi
    182b:	e8 00 00 00 00       	callq  1830 <atomic_unit_init+0xf0>
    1830:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1837 <atomic_unit_init+0xf7>
    1837:	e8 00 00 00 00       	callq  183c <atomic_unit_init+0xfc>
    183c:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1841:	5b                   	pop    %rbx
    1842:	c3                   	retq   
    1843:	0f 1f 00             	nopl   (%rax)
    1846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    184d:	00 00 00 

0000000000001850 <atomic_unit_exit>:
    1850:	e8 00 00 00 00       	callq  1855 <atomic_unit_exit+0x5>
    1855:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 185c <atomic_unit_exit+0xc>
    185c:	48 8b 38             	mov    (%rax),%rdi
    185f:	e8 00 00 00 00       	callq  1864 <atomic_unit_exit+0x14>
    1864:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 186b <atomic_unit_exit+0x1b>
    186b:	48 8b 78 08          	mov    0x8(%rax),%rdi
    186f:	e8 00 00 00 00       	callq  1874 <atomic_unit_exit+0x24>
    1874:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 187b <atomic_unit_exit+0x2b>
    187b:	e8 00 00 00 00       	callq  1880 <atomic_unit_exit+0x30>
    1880:	c3                   	retq   
    1881:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1888:	00 00 00 
    188b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001890 <devbusdrvtest_unit_ioctl_func>:
    1890:	e8 00 00 00 00       	callq  1895 <devbusdrvtest_unit_ioctl_func+0x5>
    1895:	83 7a 04 02          	cmpl   $0x2,0x4(%rdx)
    1899:	75 0c                	jne    18a7 <devbusdrvtest_unit_ioctl_func+0x17>
    189b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    18a2:	e8 00 00 00 00       	callq  18a7 <devbusdrvtest_unit_ioctl_func+0x17>
    18a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    18ac:	c3                   	retq   
    18ad:	0f 1f 00             	nopl   (%rax)

00000000000018b0 <devbusdrvtest_unit_init>:
    18b0:	e8 00 00 00 00       	callq  18b5 <devbusdrvtest_unit_init+0x5>
    18b5:	e8 00 00 00 00       	callq  18ba <devbusdrvtest_unit_init+0xa>
    18ba:	31 c0                	xor    %eax,%eax
    18bc:	c3                   	retq   
    18bd:	0f 1f 00             	nopl   (%rax)

00000000000018c0 <devbusdrvtest_unit_exit>:
    18c0:	e8 00 00 00 00       	callq  18c5 <devbusdrvtest_unit_exit+0x5>
    18c5:	e9 00 00 00 00       	jmpq   18ca <devbusdrvtest_unit_exit+0xa>
    18ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000018d0 <pci_rescan_devices>:
    18d0:	e8 00 00 00 00       	callq  18d5 <pci_rescan_devices+0x5>
    18d5:	f6 87 ea 06 00 00 04 	testb  $0x4,0x6ea(%rdi)
    18dc:	74 1e                	je     18fc <pci_rescan_devices+0x2c>
    18de:	41 54                	push   %r12
    18e0:	55                   	push   %rbp
    18e1:	53                   	push   %rbx
    18e2:	48 8b 87 b8 01 00 00 	mov    0x1b8(%rdi),%rax
    18e9:	48 8d 9f b8 01 00 00 	lea    0x1b8(%rdi),%rbx
    18f0:	48 39 d8             	cmp    %rbx,%rax
    18f3:	75 0a                	jne    18ff <pci_rescan_devices+0x2f>
    18f5:	5b                   	pop    %rbx
    18f6:	31 c0                	xor    %eax,%eax
    18f8:	5d                   	pop    %rbp
    18f9:	41 5c                	pop    %r12
    18fb:	c3                   	retq   
    18fc:	31 c0                	xor    %eax,%eax
    18fe:	c3                   	retq   
    18ff:	48 89 c5             	mov    %rax,%rbp
    1902:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
    1909:	8b 75 10             	mov    0x10(%rbp),%esi
    190c:	4c 89 e7             	mov    %r12,%rdi
    190f:	e8 00 00 00 00       	callq  1914 <pci_rescan_devices+0x44>
    1914:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    1918:	48 39 dd             	cmp    %rbx,%rbp
    191b:	74 d8                	je     18f5 <pci_rescan_devices+0x25>
    191d:	eb ea                	jmp    1909 <pci_rescan_devices+0x39>
    191f:	90                   	nop

0000000000001920 <pci_unit_register_pci_device>:
    1920:	e8 00 00 00 00       	callq  1925 <pci_unit_register_pci_device+0x5>
    1925:	31 c0                	xor    %eax,%eax
    1927:	c3                   	retq   
    1928:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    192f:	00 

0000000000001930 <pci_bus_scan>:
    1930:	e8 00 00 00 00       	callq  1935 <pci_bus_scan+0x5>
    1935:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 193c <pci_bus_scan+0xc>
    193c:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
    1943:	31 d2                	xor    %edx,%edx
    1945:	31 f6                	xor    %esi,%esi
    1947:	e9 00 00 00 00       	jmpq   194c <pci_bus_scan+0x1c>
    194c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001950 <hwpci_unit_ioctl_func>:
    1950:	e8 00 00 00 00       	callq  1955 <hwpci_unit_ioctl_func+0x5>
    1955:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 195c <hwpci_unit_ioctl_func+0xc>
    195c:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
    1963:	31 d2                	xor    %edx,%edx
    1965:	31 f6                	xor    %esi,%esi
    1967:	e8 00 00 00 00       	callq  196c <hwpci_unit_ioctl_func+0x1c>
    196c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1971:	c3                   	retq   
    1972:	0f 1f 40 00          	nopl   0x0(%rax)
    1976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    197d:	00 00 00 

0000000000001980 <hwpci_unit_init>:
    1980:	e8 00 00 00 00       	callq  1985 <hwpci_unit_init+0x5>
    1985:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    198c:	e8 00 00 00 00       	callq  1991 <hwpci_unit_init+0x11>
    1991:	48 85 c0             	test   %rax,%rax
    1994:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 199b <hwpci_unit_init+0x1b>
    199b:	74 2d                	je     19ca <hwpci_unit_init+0x4a>
    199d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    19a4:	e8 00 00 00 00       	callq  19a9 <hwpci_unit_init+0x29>
    19a9:	48 89 c2             	mov    %rax,%rdx
    19ac:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 19b3 <hwpci_unit_init+0x33>
    19b3:	31 c0                	xor    %eax,%eax
    19b5:	48 85 d2             	test   %rdx,%rdx
    19b8:	74 01                	je     19bb <hwpci_unit_init+0x3b>
    19ba:	c3                   	retq   
    19bb:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 19c2 <hwpci_unit_init+0x42>
    19c2:	48 89 15 00 00 00 00 	mov    %rdx,0x0(%rip)        # 19c9 <hwpci_unit_init+0x49>
    19c9:	c3                   	retq   
    19ca:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    19d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    19d8:	e8 00 00 00 00       	callq  19dd <hwpci_unit_init+0x5d>
    19dd:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    19e2:	c3                   	retq   
    19e3:	0f 1f 00             	nopl   (%rax)
    19e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    19ed:	00 00 00 

00000000000019f0 <hwpci_unit_exit>:
    19f0:	e8 00 00 00 00       	callq  19f5 <hwpci_unit_exit+0x5>
    19f5:	31 c0                	xor    %eax,%eax
    19f7:	c3                   	retq   
    19f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    19ff:	00 

0000000000001a00 <statickey_unit_ioctl_func>:
    1a00:	e8 00 00 00 00       	callq  1a05 <statickey_unit_ioctl_func+0x5>
    1a05:	31 c0                	xor    %eax,%eax
    1a07:	c3                   	retq   
    1a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1a0f:	00 

0000000000001a10 <statickey_unit_init>:
    1a10:	e8 00 00 00 00       	callq  1a15 <statickey_unit_init+0x5>
    1a15:	e9 2c 00 00 00       	jmpq   1a46 <statickey_unit_init+0x36>
    1a1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1a21:	e8 00 00 00 00       	callq  1a26 <statickey_unit_init+0x16>
    1a26:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1a2d:	e8 00 00 00 00       	callq  1a32 <statickey_unit_init+0x22>
    1a32:	e9 1d 00 00 00       	jmpq   1a54 <statickey_unit_init+0x44>
    1a37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1a3e:	e8 00 00 00 00       	callq  1a43 <statickey_unit_init+0x33>
    1a43:	31 c0                	xor    %eax,%eax
    1a45:	c3                   	retq   
    1a46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1a4d:	e8 00 00 00 00       	callq  1a52 <statickey_unit_init+0x42>
    1a52:	eb d2                	jmp    1a26 <statickey_unit_init+0x16>
    1a54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1a5b:	e8 00 00 00 00       	callq  1a60 <statickey_unit_init+0x50>
    1a60:	31 c0                	xor    %eax,%eax
    1a62:	c3                   	retq   
    1a63:	0f 1f 00             	nopl   (%rax)
    1a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1a6d:	00 00 00 

0000000000001a70 <statickey_unit_exit>:
    1a70:	e8 00 00 00 00       	callq  1a75 <statickey_unit_exit+0x5>
    1a75:	31 c0                	xor    %eax,%eax
    1a77:	c3                   	retq   
    1a78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1a7f:	00 

0000000000001a80 <sched_unit_ioctl_func>:
    1a80:	e8 00 00 00 00       	callq  1a85 <sched_unit_ioctl_func+0x5>
    1a85:	83 7a 04 01          	cmpl   $0x1,0x4(%rdx)
    1a89:	75 0f                	jne    1a9a <sched_unit_ioctl_func+0x1a>
    1a8b:	8b 7a 10             	mov    0x10(%rdx),%edi
    1a8e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1a95 <sched_unit_ioctl_func+0x15>
    1a95:	e8 00 00 00 00       	callq  1a9a <sched_unit_ioctl_func+0x1a>
    1a9a:	31 c0                	xor    %eax,%eax
    1a9c:	c3                   	retq   
    1a9d:	0f 1f 00             	nopl   (%rax)

0000000000001aa0 <sched_unit_init>:
    1aa0:	e8 00 00 00 00       	callq  1aa5 <sched_unit_init+0x5>
    1aa5:	55                   	push   %rbp
    1aa6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1aad:	53                   	push   %rbx
    1aae:	e8 00 00 00 00       	callq  1ab3 <sched_unit_init+0x13>
    1ab3:	48 85 c0             	test   %rax,%rax
    1ab6:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1abd <sched_unit_init+0x1d>
    1abd:	74 6a                	je     1b29 <sched_unit_init+0x89>
    1abf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1ac6:	e8 00 00 00 00       	callq  1acb <sched_unit_init+0x2b>
    1acb:	48 85 c0             	test   %rax,%rax
    1ace:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1ad5 <sched_unit_init+0x35>
    1ad5:	74 38                	je     1b0f <sched_unit_init+0x6f>
    1ad7:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1ade <sched_unit_init+0x3e>
    1ade:	48 8b 58 30          	mov    0x30(%rax),%rbx
    1ae2:	48 89 dd             	mov    %rbx,%rbp
    1ae5:	48 03 68 28          	add    0x28(%rax),%rbp
    1ae9:	e8 00 00 00 00       	callq  1aee <sched_unit_init+0x4e>
    1aee:	49 89 d8             	mov    %rbx,%r8
    1af1:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1af8:	48 89 c2             	mov    %rax,%rdx
    1afb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b02:	48 89 e9             	mov    %rbp,%rcx
    1b05:	e8 00 00 00 00       	callq  1b0a <sched_unit_init+0x6a>
    1b0a:	31 c0                	xor    %eax,%eax
    1b0c:	5b                   	pop    %rbx
    1b0d:	5d                   	pop    %rbp
    1b0e:	c3                   	retq   
    1b0f:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1b16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b1d:	e8 00 00 00 00       	callq  1b22 <sched_unit_init+0x82>
    1b22:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1b27:	eb e3                	jmp    1b0c <sched_unit_init+0x6c>
    1b29:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1b30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b37:	e8 00 00 00 00       	callq  1b3c <sched_unit_init+0x9c>
    1b3c:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1b41:	eb c9                	jmp    1b0c <sched_unit_init+0x6c>
    1b43:	0f 1f 00             	nopl   (%rax)
    1b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1b4d:	00 00 00 

0000000000001b50 <sched_unit_exit>:
    1b50:	e8 00 00 00 00       	callq  1b55 <sched_unit_exit+0x5>
    1b55:	31 c0                	xor    %eax,%eax
    1b57:	c3                   	retq   
    1b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1b5f:	00 

0000000000001b60 <cpu_unit_ioctl_func>:
    1b60:	e8 00 00 00 00       	callq  1b65 <cpu_unit_ioctl_func+0x5>
    1b65:	31 c0                	xor    %eax,%eax
    1b67:	c3                   	retq   
    1b68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1b6f:	00 

0000000000001b70 <cpu_unit_init>:
    1b70:	e8 00 00 00 00       	callq  1b75 <cpu_unit_init+0x5>
    1b75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b7c:	e8 00 00 00 00       	callq  1b81 <cpu_unit_init+0x11>
    1b81:	48 85 c0             	test   %rax,%rax
    1b84:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1b8b <cpu_unit_init+0x1b>
    1b8b:	74 03                	je     1b90 <cpu_unit_init+0x20>
    1b8d:	31 c0                	xor    %eax,%eax
    1b8f:	c3                   	retq   
    1b90:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1b97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1b9e:	e8 00 00 00 00       	callq  1ba3 <cpu_unit_init+0x33>
    1ba3:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1ba8:	c3                   	retq   
    1ba9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001bb0 <cpu_unit_exit>:
    1bb0:	e8 00 00 00 00       	callq  1bb5 <cpu_unit_exit+0x5>
    1bb5:	31 c0                	xor    %eax,%eax
    1bb7:	c3                   	retq   
    1bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1bbf:	00 

0000000000001bc0 <misc_virtio_queue_rq_hook>:
    1bc0:	e8 00 00 00 00       	callq  1bc5 <misc_virtio_queue_rq_hook+0x5>
    1bc5:	48 8b 3e             	mov    (%rsi),%rdi
    1bc8:	e9 00 00 00 00       	jmpq   1bcd <misc_virtio_queue_rq_hook+0xd>
    1bcd:	0f 1f 00             	nopl   (%rax)

0000000000001bd0 <bio_test>:
    1bd0:	e8 00 00 00 00       	callq  1bd5 <bio_test+0x5>
    1bd5:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1bdc <bio_test+0xc>
    1bdc:	41 55                	push   %r13
    1bde:	ba 00 10 00 00       	mov    $0x1000,%edx
    1be3:	be c0 00 60 00       	mov    $0x6000c0,%esi
    1be8:	41 54                	push   %r12
    1bea:	55                   	push   %rbp
    1beb:	53                   	push   %rbx
    1bec:	e8 00 00 00 00       	callq  1bf1 <bio_test+0x21>
    1bf1:	31 d2                	xor    %edx,%edx
    1bf3:	31 f6                	xor    %esi,%esi
    1bf5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1bfc:	e8 00 00 00 00       	callq  1c01 <bio_test+0x31>
    1c01:	48 85 c0             	test   %rax,%rax
    1c04:	75 0c                	jne    1c12 <bio_test+0x42>
    1c06:	b8 01 00 00 00       	mov    $0x1,%eax
    1c0b:	5b                   	pop    %rbx
    1c0c:	5d                   	pop    %rbp
    1c0d:	41 5c                	pop    %r12
    1c0f:	41 5d                	pop    %r13
    1c11:	c3                   	retq   
    1c12:	4c 8b a0 f0 00 00 00 	mov    0xf0(%rax),%r12
    1c19:	ba 4f 00 00 00       	mov    $0x4f,%edx
    1c1e:	48 89 c3             	mov    %rax,%rbx
    1c21:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1c28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1c2f:	45 8b ac 24 84 00 00 	mov    0x84(%r12),%r13d
    1c36:	00 
    1c37:	e8 00 00 00 00       	callq  1c3c <bio_test+0x6c>
    1c3c:	41 81 cd 00 12 00 00 	or     $0x1200,%r13d
    1c43:	44 89 ef             	mov    %r13d,%edi
    1c46:	e8 00 00 00 00       	callq  1c4b <bio_test+0x7b>
    1c4b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1c52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1c59:	48 89 c2             	mov    %rax,%rdx
    1c5c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    1c63:	00 
    1c64:	48 89 c5             	mov    %rax,%rbp
    1c67:	e8 00 00 00 00       	callq  1c6c <bio_test+0x9c>
    1c6c:	49 8b 44 24 70       	mov    0x70(%r12),%rax
    1c71:	ba 5c 00 00 00       	mov    $0x5c,%edx
    1c76:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1c7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1c84:	48 8b 48 08          	mov    0x8(%rax),%rcx
    1c88:	e8 00 00 00 00       	callq  1c8d <bio_test+0xbd>
    1c8d:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    1c91:	44 89 e9             	mov    %r13d,%ecx
    1c94:	4c 89 e6             	mov    %r12,%rsi
    1c97:	48 89 ef             	mov    %rbp,%rdi
    1c9a:	e8 00 00 00 00       	callq  1c9f <bio_test+0xcf>
    1c9f:	48 89 e9             	mov    %rbp,%rcx
    1ca2:	48 89 da             	mov    %rbx,%rdx
    1ca5:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1cac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1cb3:	e8 00 00 00 00       	callq  1cb8 <bio_test+0xe8>
    1cb8:	49 8b 44 24 70       	mov    0x70(%r12),%rax
    1cbd:	48 89 ee             	mov    %rbp,%rsi
    1cc0:	48 89 df             	mov    %rbx,%rdi
    1cc3:	48 8b 40 08          	mov    0x8(%rax),%rax
    1cc7:	e8 00 00 00 00       	callq  1ccc <bio_test+0xfc>
    1ccc:	49 8b 44 24 70       	mov    0x70(%r12),%rax
    1cd1:	48 89 ee             	mov    %rbp,%rsi
    1cd4:	48 89 df             	mov    %rbx,%rdi
    1cd7:	48 8b 40 08          	mov    0x8(%rax),%rax
    1cdb:	e8 00 00 00 00       	callq  1ce0 <bio_test+0x110>
    1ce0:	ba 61 00 00 00       	mov    $0x61,%edx
    1ce5:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1cec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1cf3:	e8 00 00 00 00       	callq  1cf8 <bio_test+0x128>
    1cf8:	31 f6                	xor    %esi,%esi
    1cfa:	48 89 df             	mov    %rbx,%rdi
    1cfd:	e8 00 00 00 00       	callq  1d02 <bio_test+0x132>
    1d02:	ba 75 00 00 00       	mov    $0x75,%edx
    1d07:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1d0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d15:	e8 00 00 00 00       	callq  1d1a <bio_test+0x14a>
    1d1a:	31 c0                	xor    %eax,%eax
    1d1c:	e9 ea fe ff ff       	jmpq   1c0b <bio_test+0x3b>
    1d21:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d2d:	00 00 00 

0000000000001d30 <block_unit_ioctl_func>:
    1d30:	e8 00 00 00 00       	callq  1d35 <block_unit_ioctl_func+0x5>
    1d35:	83 7a 04 02          	cmpl   $0x2,0x4(%rdx)
    1d39:	75 0e                	jne    1d49 <block_unit_ioctl_func+0x19>
    1d3b:	65 48 8b 3c 25 00 00 	mov    %gs:0x0,%rdi
    1d42:	00 00 
    1d44:	e8 00 00 00 00       	callq  1d49 <block_unit_ioctl_func+0x19>
    1d49:	31 c0                	xor    %eax,%eax
    1d4b:	c3                   	retq   
    1d4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001d50 <block_unit_init>:
    1d50:	e8 00 00 00 00       	callq  1d55 <block_unit_init+0x5>
    1d55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d5c:	e8 00 00 00 00       	callq  1d61 <block_unit_init+0x11>
    1d61:	48 85 c0             	test   %rax,%rax
    1d64:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1d6b <block_unit_init+0x1b>
    1d6b:	0f 84 89 00 00 00    	je     1dfa <block_unit_init+0xaa>
    1d71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d78:	e8 00 00 00 00       	callq  1d7d <block_unit_init+0x2d>
    1d7d:	48 85 c0             	test   %rax,%rax
    1d80:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1d87 <block_unit_init+0x37>
    1d87:	0f 84 9f 00 00 00    	je     1e2c <block_unit_init+0xdc>
    1d8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1d94:	e8 00 00 00 00       	callq  1d99 <block_unit_init+0x49>
    1d99:	48 85 c0             	test   %rax,%rax
    1d9c:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1da3 <block_unit_init+0x53>
    1da3:	74 6e                	je     1e13 <block_unit_init+0xc3>
    1da5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1dac:	e8 00 00 00 00       	callq  1db1 <block_unit_init+0x61>
    1db1:	48 85 c0             	test   %rax,%rax
    1db4:	74 22                	je     1dd8 <block_unit_init+0x88>
    1db6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1dbd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1dc4:	e8 00 00 00 00       	callq  1dc9 <block_unit_init+0x79>
    1dc9:	e8 00 00 00 00       	callq  1dce <block_unit_init+0x7e>
    1dce:	31 ff                	xor    %edi,%edi
    1dd0:	e8 00 00 00 00       	callq  1dd5 <block_unit_init+0x85>
    1dd5:	31 c0                	xor    %eax,%eax
    1dd7:	c3                   	retq   
    1dd8:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1ddf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1de6:	e8 00 00 00 00       	callq  1deb <block_unit_init+0x9b>
    1deb:	e8 00 00 00 00       	callq  1df0 <block_unit_init+0xa0>
    1df0:	31 ff                	xor    %edi,%edi
    1df2:	e8 00 00 00 00       	callq  1df7 <block_unit_init+0xa7>
    1df7:	31 c0                	xor    %eax,%eax
    1df9:	c3                   	retq   
    1dfa:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1e01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1e08:	e8 00 00 00 00       	callq  1e0d <block_unit_init+0xbd>
    1e0d:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1e12:	c3                   	retq   
    1e13:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1e1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1e21:	e8 00 00 00 00       	callq  1e26 <block_unit_init+0xd6>
    1e26:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1e2b:	c3                   	retq   
    1e2c:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1e33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1e3a:	e8 00 00 00 00       	callq  1e3f <block_unit_init+0xef>
    1e3f:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1e44:	c3                   	retq   
    1e45:	90                   	nop
    1e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1e4d:	00 00 00 

0000000000001e50 <block_unit_exit>:
    1e50:	e8 00 00 00 00       	callq  1e55 <block_unit_exit+0x5>
    1e55:	31 c0                	xor    %eax,%eax
    1e57:	c3                   	retq   
    1e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1e5f:	00 

0000000000001e60 <ktime_unit_ioctl_func>:
    1e60:	e8 00 00 00 00       	callq  1e65 <ktime_unit_ioctl_func+0x5>
    1e65:	83 7a 04 01          	cmpl   $0x1,0x4(%rdx)
    1e69:	74 03                	je     1e6e <ktime_unit_ioctl_func+0xe>
    1e6b:	31 c0                	xor    %eax,%eax
    1e6d:	c3                   	retq   
    1e6e:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1e75 <ktime_unit_ioctl_func+0x15>
    1e75:	48 8b 02             	mov    (%rdx),%rax
    1e78:	48 8d 88 48 ff ff ff 	lea    -0xb8(%rax),%rcx
    1e7f:	48 39 c2             	cmp    %rax,%rdx
    1e82:	74 e7                	je     1e6b <ktime_unit_ioctl_func+0xb>
    1e84:	41 55                	push   %r13
    1e86:	41 83 cd ff          	or     $0xffffffff,%r13d
    1e8a:	41 54                	push   %r12
    1e8c:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
    1e93:	55                   	push   %rbp
    1e94:	53                   	push   %rbx
    1e95:	48 89 cb             	mov    %rcx,%rbx
    1e98:	48 8b b3 98 00 00 00 	mov    0x98(%rbx),%rsi
    1e9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1ea6:	44 89 ed             	mov    %r13d,%ebp
    1ea9:	e8 00 00 00 00       	callq  1eae <ktime_unit_ioctl_func+0x4e>
    1eae:	48 8b b3 b0 00 00 00 	mov    0xb0(%rbx),%rsi
    1eb5:	89 ef                	mov    %ebp,%edi
    1eb7:	e8 00 00 00 00       	callq  1ebc <ktime_unit_ioctl_func+0x5c>
    1ebc:	3b 05 00 00 00 00    	cmp    0x0(%rip),%eax        # 1ec2 <ktime_unit_ioctl_func+0x62>
    1ec2:	72 20                	jb     1ee4 <ktime_unit_ioctl_func+0x84>
    1ec4:	48 8b 83 b8 00 00 00 	mov    0xb8(%rbx),%rax
    1ecb:	48 39 05 00 00 00 00 	cmp    %rax,0x0(%rip)        # 1ed2 <ktime_unit_ioctl_func+0x72>
    1ed2:	48 8d 98 48 ff ff ff 	lea    -0xb8(%rax),%rbx
    1ed9:	75 bd                	jne    1e98 <ktime_unit_ioctl_func+0x38>
    1edb:	5b                   	pop    %rbx
    1edc:	31 c0                	xor    %eax,%eax
    1ede:	5d                   	pop    %rbp
    1edf:	41 5c                	pop    %r12
    1ee1:	41 5d                	pop    %r13
    1ee3:	c3                   	retq   
    1ee4:	89 c6                	mov    %eax,%esi
    1ee6:	4c 89 e7             	mov    %r12,%rdi
    1ee9:	89 c5                	mov    %eax,%ebp
    1eeb:	e8 00 00 00 00       	callq  1ef0 <ktime_unit_ioctl_func+0x90>
    1ef0:	eb bc                	jmp    1eae <ktime_unit_ioctl_func+0x4e>
    1ef2:	0f 1f 40 00          	nopl   0x0(%rax)
    1ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1efd:	00 00 00 

0000000000001f00 <ktime_unit_init>:
    1f00:	e8 00 00 00 00       	callq  1f05 <ktime_unit_init+0x5>
    1f05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1f0c:	e8 00 00 00 00       	callq  1f11 <ktime_unit_init+0x11>
    1f11:	48 85 c0             	test   %rax,%rax
    1f14:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1f1b <ktime_unit_init+0x1b>
    1f1b:	74 03                	je     1f20 <ktime_unit_init+0x20>
    1f1d:	31 c0                	xor    %eax,%eax
    1f1f:	c3                   	retq   
    1f20:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    1f27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    1f2e:	e8 00 00 00 00       	callq  1f33 <ktime_unit_init+0x33>
    1f33:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    1f38:	c3                   	retq   
    1f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001f40 <ktime_unit_exit>:
    1f40:	e8 00 00 00 00       	callq  1f45 <ktime_unit_exit+0x5>
    1f45:	31 c0                	xor    %eax,%eax
    1f47:	c3                   	retq   
    1f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1f4f:	00 

0000000000001f50 <dump_pte_info>:
    1f50:	e8 00 00 00 00       	callq  1f55 <dump_pte_info+0x5>
    1f55:	48 89 f8             	mov    %rdi,%rax
    1f58:	48 89 f9             	mov    %rdi,%rcx
    1f5b:	49 89 f9             	mov    %rdi,%r9
    1f5e:	48 c1 e8 02          	shr    $0x2,%rax
    1f62:	49 89 f8             	mov    %rdi,%r8
    1f65:	48 c1 e9 3d          	shr    $0x3d,%rcx
    1f69:	83 e0 07             	and    $0x7,%eax
    1f6c:	48 89 fa             	mov    %rdi,%rdx
    1f6f:	49 c1 e9 3b          	shr    $0x3b,%r9
    1f73:	50                   	push   %rax
    1f74:	48 89 f8             	mov    %rdi,%rax
    1f77:	49 c1 e8 3c          	shr    $0x3c,%r8
    1f7b:	83 e1 03             	and    $0x3,%ecx
    1f7e:	48 c1 e8 05          	shr    $0x5,%rax
    1f82:	48 c1 ea 3f          	shr    $0x3f,%rdx
    1f86:	48 89 fe             	mov    %rdi,%rsi
    1f89:	83 e0 01             	and    $0x1,%eax
    1f8c:	50                   	push   %rax
    1f8d:	31 c0                	xor    %eax,%eax
    1f8f:	40 f6 c7 c0          	test   $0xc0,%dil
    1f93:	0f 95 c0             	setne  %al
    1f96:	41 83 e1 01          	and    $0x1,%r9d
    1f9a:	41 83 e0 01          	and    $0x1,%r8d
    1f9e:	50                   	push   %rax
    1f9f:	48 89 f8             	mov    %rdi,%rax
    1fa2:	48 c1 e8 06          	shr    $0x6,%rax
    1fa6:	83 e0 03             	and    $0x3,%eax
    1fa9:	50                   	push   %rax
    1faa:	48 89 f8             	mov    %rdi,%rax
    1fad:	48 c1 e8 08          	shr    $0x8,%rax
    1fb1:	83 e0 03             	and    $0x3,%eax
    1fb4:	50                   	push   %rax
    1fb5:	48 89 f8             	mov    %rdi,%rax
    1fb8:	48 c1 e8 0a          	shr    $0xa,%rax
    1fbc:	83 e0 01             	and    $0x1,%eax
    1fbf:	50                   	push   %rax
    1fc0:	48 89 f8             	mov    %rdi,%rax
    1fc3:	48 c1 e8 0b          	shr    $0xb,%rax
    1fc7:	83 e0 01             	and    $0x1,%eax
    1fca:	50                   	push   %rax
    1fcb:	48 89 f8             	mov    %rdi,%rax
    1fce:	48 c1 e8 10          	shr    $0x10,%rax
    1fd2:	83 e0 01             	and    $0x1,%eax
    1fd5:	50                   	push   %rax
    1fd6:	48 89 f8             	mov    %rdi,%rax
    1fd9:	48 c1 e8 32          	shr    $0x32,%rax
    1fdd:	83 e0 01             	and    $0x1,%eax
    1fe0:	50                   	push   %rax
    1fe1:	48 89 f8             	mov    %rdi,%rax
    1fe4:	48 c1 e8 33          	shr    $0x33,%rax
    1fe8:	83 e0 01             	and    $0x1,%eax
    1feb:	50                   	push   %rax
    1fec:	48 89 f8             	mov    %rdi,%rax
    1fef:	48 c1 e8 34          	shr    $0x34,%rax
    1ff3:	83 e0 01             	and    $0x1,%eax
    1ff6:	50                   	push   %rax
    1ff7:	48 89 f8             	mov    %rdi,%rax
    1ffa:	48 c1 e8 35          	shr    $0x35,%rax
    1ffe:	83 e0 01             	and    $0x1,%eax
    2001:	50                   	push   %rax
    2002:	48 89 f8             	mov    %rdi,%rax
    2005:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    200c:	48 c1 e8 36          	shr    $0x36,%rax
    2010:	83 e0 01             	and    $0x1,%eax
    2013:	50                   	push   %rax
    2014:	e8 00 00 00 00       	callq  2019 <dump_pte_info+0xc9>
    2019:	48 83 c4 68          	add    $0x68,%rsp
    201d:	c3                   	retq   
    201e:	66 90                	xchg   %ax,%ax

0000000000002020 <is_sibling_entry>:
    2020:	e8 00 00 00 00       	callq  2025 <is_sibling_entry+0x5>
    2025:	48 8d 57 28          	lea    0x28(%rdi),%rdx
    2029:	31 c0                	xor    %eax,%eax
    202b:	48 39 d6             	cmp    %rdx,%rsi
    202e:	72 0d                	jb     203d <is_sibling_entry+0x1d>
    2030:	48 81 c7 28 02 00 00 	add    $0x228,%rdi
    2037:	48 39 fe             	cmp    %rdi,%rsi
    203a:	0f 92 c0             	setb   %al
    203d:	c3                   	retq   
    203e:	66 90                	xchg   %ax,%ax

0000000000002040 <radixtree_page_scan>:
    2040:	e8 00 00 00 00       	callq  2045 <radixtree_page_scan+0x5>
    2045:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    2049:	41 57                	push   %r15
    204b:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    2051:	41 56                	push   %r14
    2053:	49 89 ff             	mov    %rdi,%r15
    2056:	45 31 f6             	xor    %r14d,%r14d
    2059:	41 55                	push   %r13
    205b:	4d 8d af 28 02 00 00 	lea    0x228(%r15),%r13
    2062:	41 54                	push   %r12
    2064:	4d 8d 67 28          	lea    0x28(%r15),%r12
    2068:	55                   	push   %rbp
    2069:	bd 01 00 00 00       	mov    $0x1,%ebp
    206e:	53                   	push   %rbx
    206f:	0f b6 07             	movzbl (%rdi),%eax
    2072:	48 89 f3             	mov    %rsi,%rbx
    2075:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
    2079:	89 c1                	mov    %eax,%ecx
    207b:	49 d3 e0             	shl    %cl,%r8
    207e:	0f b6 4f 03          	movzbl 0x3(%rdi),%ecx
    2082:	49 83 e8 01          	sub    $0x1,%r8
    2086:	49 09 f0             	or     %rsi,%r8
    2089:	51                   	push   %rcx
    208a:	0f b6 4f 02          	movzbl 0x2(%rdi),%ecx
    208e:	51                   	push   %rcx
    208f:	48 89 f1             	mov    %rsi,%rcx
    2092:	48 89 fe             	mov    %rdi,%rsi
    2095:	50                   	push   %rax
    2096:	ff b7 38 02 00 00    	pushq  0x238(%rdi)
    209c:	ff b7 30 02 00 00    	pushq  0x230(%rdi)
    20a2:	ff b7 28 02 00 00    	pushq  0x228(%rdi)
    20a8:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    20ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    20b3:	e8 00 00 00 00       	callq  20b8 <radixtree_page_scan+0x78>
    20b8:	48 83 c4 30          	add    $0x30,%rsp
    20bc:	eb 34                	jmp    20f2 <radixtree_page_scan+0xb2>
    20be:	4c 39 ef             	cmp    %r13,%rdi
    20c1:	73 6d                	jae    2130 <radixtree_page_scan+0xf0>
    20c3:	48 89 f8             	mov    %rdi,%rax
    20c6:	49 89 c8             	mov    %rcx,%r8
    20c9:	4d 89 f9             	mov    %r15,%r9
    20cc:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    20d0:	48 89 f1             	mov    %rsi,%rcx
    20d3:	4c 89 f2             	mov    %r14,%rdx
    20d6:	ff 30                	pushq  (%rax)
    20d8:	48 89 fe             	mov    %rdi,%rsi
    20db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    20e2:	e8 00 00 00 00       	callq  20e7 <radixtree_page_scan+0xa7>
    20e7:	58                   	pop    %rax
    20e8:	49 83 c6 01          	add    $0x1,%r14
    20ec:	49 83 fe 40          	cmp    $0x40,%r14
    20f0:	74 51                	je     2143 <radixtree_page_scan+0x103>
    20f2:	41 0f b6 0f          	movzbl (%r15),%ecx
    20f6:	48 89 e8             	mov    %rbp,%rax
    20f9:	4c 89 f6             	mov    %r14,%rsi
    20fc:	4b 8b 7c f7 28       	mov    0x28(%r15,%r14,8),%rdi
    2101:	48 d3 e0             	shl    %cl,%rax
    2104:	48 d3 e6             	shl    %cl,%rsi
    2107:	48 89 c1             	mov    %rax,%rcx
    210a:	48 09 de             	or     %rbx,%rsi
    210d:	48 83 e9 01          	sub    $0x1,%rcx
    2111:	48 09 f1             	or     %rsi,%rcx
    2114:	48 85 ff             	test   %rdi,%rdi
    2117:	74 cf                	je     20e8 <radixtree_page_scan+0xa8>
    2119:	48 83 ff 01          	cmp    $0x1,%rdi
    211d:	74 2f                	je     214e <radixtree_page_scan+0x10e>
    211f:	48 89 f8             	mov    %rdi,%rax
    2122:	83 e0 03             	and    $0x3,%eax
    2125:	48 83 f8 01          	cmp    $0x1,%rax
    2129:	75 3a                	jne    2165 <radixtree_page_scan+0x125>
    212b:	4c 39 e7             	cmp    %r12,%rdi
    212e:	73 8e                	jae    20be <radixtree_page_scan+0x7e>
    2130:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    2134:	49 83 c6 01          	add    $0x1,%r14
    2138:	e8 00 00 00 00       	callq  213d <radixtree_page_scan+0xfd>
    213d:	49 83 fe 40          	cmp    $0x40,%r14
    2141:	75 af                	jne    20f2 <radixtree_page_scan+0xb2>
    2143:	5b                   	pop    %rbx
    2144:	5d                   	pop    %rbp
    2145:	41 5c                	pop    %r12
    2147:	41 5d                	pop    %r13
    2149:	41 5e                	pop    %r14
    214b:	41 5f                	pop    %r15
    214d:	c3                   	retq   
    214e:	48 89 f2             	mov    %rsi,%rdx
    2151:	4d 89 f8             	mov    %r15,%r8
    2154:	4c 89 f6             	mov    %r14,%rsi
    2157:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    215e:	e8 00 00 00 00       	callq  2163 <radixtree_page_scan+0x123>
    2163:	eb 83                	jmp    20e8 <radixtree_page_scan+0xa8>
    2165:	49 89 f9             	mov    %rdi,%r9
    2168:	48 89 f2             	mov    %rsi,%rdx
    216b:	4d 89 f8             	mov    %r15,%r8
    216e:	4c 89 f6             	mov    %r14,%rsi
    2171:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2178:	e8 00 00 00 00       	callq  217d <radixtree_page_scan+0x13d>
    217d:	e9 66 ff ff ff       	jmpq   20e8 <radixtree_page_scan+0xa8>
    2182:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2189:	00 00 00 
    218c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002190 <task_file_enum>:
    2190:	e8 00 00 00 00       	callq  2195 <task_file_enum+0x5>
    2195:	41 56                	push   %r14
    2197:	41 55                	push   %r13
    2199:	41 54                	push   %r12
    219b:	55                   	push   %rbp
    219c:	53                   	push   %rbx
    219d:	48 8b af f0 06 00 00 	mov    0x6f0(%rdi),%rbp
    21a4:	48 85 ed             	test   %rbp,%rbp
    21a7:	74 42                	je     21eb <task_file_enum+0x5b>
    21a9:	48 8b 45 20          	mov    0x20(%rbp),%rax
    21ad:	8b 00                	mov    (%rax),%eax
    21af:	85 c0                	test   %eax,%eax
    21b1:	74 38                	je     21eb <task_file_enum+0x5b>
    21b3:	31 db                	xor    %ebx,%ebx
    21b5:	49 c7 c5 00 00 00 00 	mov    $0x0,%r13
    21bc:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    21c0:	8b 02                	mov    (%rdx),%eax
    21c2:	39 d8                	cmp    %ebx,%eax
    21c4:	76 1a                	jbe    21e0 <task_file_enum+0x50>
    21c6:	89 d9                	mov    %ebx,%ecx
    21c8:	48 39 c1             	cmp    %rax,%rcx
    21cb:	48 19 c0             	sbb    %rax,%rax
    21ce:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    21d2:	21 d8                	and    %ebx,%eax
    21d4:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
    21d8:	4c 8b 20             	mov    (%rax),%r12
    21db:	4d 85 e4             	test   %r12,%r12
    21de:	75 14                	jne    21f4 <task_file_enum+0x64>
    21e0:	48 8b 45 20          	mov    0x20(%rbp),%rax
    21e4:	83 c3 01             	add    $0x1,%ebx
    21e7:	39 18                	cmp    %ebx,(%rax)
    21e9:	77 d1                	ja     21bc <task_file_enum+0x2c>
    21eb:	5b                   	pop    %rbx
    21ec:	5d                   	pop    %rbp
    21ed:	41 5c                	pop    %r12
    21ef:	41 5d                	pop    %r13
    21f1:	41 5e                	pop    %r14
    21f3:	c3                   	retq   
    21f4:	89 da                	mov    %ebx,%edx
    21f6:	4c 89 ee             	mov    %r13,%rsi
    21f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2200:	e8 00 00 00 00       	callq  2205 <task_file_enum+0x75>
    2205:	4d 8b 74 24 18       	mov    0x18(%r12),%r14
    220a:	41 f7 06 00 00 00 04 	testl  $0x4000000,(%r14)
    2211:	75 0f                	jne    2222 <task_file_enum+0x92>
    2213:	4d 85 f6             	test   %r14,%r14
    2216:	75 24                	jne    223c <task_file_enum+0xac>
    2218:	4c 89 f7             	mov    %r14,%rdi
    221b:	e8 00 00 00 00       	callq  2220 <task_file_enum+0x90>
    2220:	eb be                	jmp    21e0 <task_file_enum+0x50>
    2222:	49 8b 46 60          	mov    0x60(%r14),%rax
    2226:	4c 89 f7             	mov    %r14,%rdi
    2229:	49 8b 74 24 20       	mov    0x20(%r12),%rsi
    222e:	48 8b 40 60          	mov    0x60(%rax),%rax
    2232:	e8 00 00 00 00       	callq  2237 <task_file_enum+0xa7>
    2237:	49 89 c6             	mov    %rax,%r14
    223a:	eb d7                	jmp    2213 <task_file_enum+0x83>
    223c:	49 8d 56 38          	lea    0x38(%r14),%rdx
    2240:	89 de                	mov    %ebx,%esi
    2242:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2249:	e8 00 00 00 00       	callq  224e <task_file_enum+0xbe>
    224e:	eb c8                	jmp    2218 <task_file_enum+0x88>

0000000000002250 <get_taskstruct_by_pid>:
    2250:	e8 00 00 00 00       	callq  2255 <get_taskstruct_by_pid+0x5>
    2255:	53                   	push   %rbx
    2256:	89 fb                	mov    %edi,%ebx
    2258:	65 48 8b 3c 25 00 00 	mov    %gs:0x0,%rdi
    225f:	00 00 
    2261:	e8 00 00 00 00       	callq  2266 <get_taskstruct_by_pid+0x16>
    2266:	89 df                	mov    %ebx,%edi
    2268:	48 89 c6             	mov    %rax,%rsi
    226b:	e8 00 00 00 00       	callq  2270 <get_taskstruct_by_pid+0x20>
    2270:	5b                   	pop    %rbx
    2271:	31 f6                	xor    %esi,%esi
    2273:	48 89 c7             	mov    %rax,%rdi
    2276:	e9 00 00 00 00       	jmpq   227b <get_taskstruct_by_pid+0x2b>
    227b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002280 <medentry_dump_full_patch>:
    2280:	e8 00 00 00 00       	callq  2285 <medentry_dump_full_patch+0x5>
    2285:	55                   	push   %rbp
    2286:	53                   	push   %rbx
    2287:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
    228b:	48 39 df             	cmp    %rbx,%rdi
    228e:	75 03                	jne    2293 <medentry_dump_full_patch+0x13>
    2290:	5b                   	pop    %rbx
    2291:	5d                   	pop    %rbp
    2292:	c3                   	retq   
    2293:	48 c7 c5 00 00 00 00 	mov    $0x0,%rbp
    229a:	48 8d 73 38          	lea    0x38(%rbx),%rsi
    229e:	48 89 ef             	mov    %rbp,%rdi
    22a1:	e8 00 00 00 00       	callq  22a6 <medentry_dump_full_patch+0x26>
    22a6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    22aa:	48 39 d8             	cmp    %rbx,%rax
    22ad:	74 e1                	je     2290 <medentry_dump_full_patch+0x10>
    22af:	48 89 c3             	mov    %rax,%rbx
    22b2:	eb e6                	jmp    229a <medentry_dump_full_patch+0x1a>
    22b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    22bb:	00 00 00 
    22be:	66 90                	xchg   %ax,%ax

00000000000022c0 <virtual_test_device_release>:
    22c0:	e8 00 00 00 00       	callq  22c5 <virtual_test_device_release+0x5>
    22c5:	c3                   	retq   
    22c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    22cd:	00 00 00 

00000000000022d0 <virme_bus_uevent>:
    22d0:	e8 00 00 00 00       	callq  22d5 <virme_bus_uevent+0x5>
    22d5:	31 c0                	xor    %eax,%eax
    22d7:	c3                   	retq   
    22d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    22df:	00 

00000000000022e0 <virme_bus_match>:
    22e0:	e8 00 00 00 00       	callq  22e5 <virme_bus_match+0x5>
    22e5:	31 c0                	xor    %eax,%eax
    22e7:	c3                   	retq   
    22e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    22ef:	00 

00000000000022f0 <virtual_test_get_device>:
    22f0:	e8 00 00 00 00       	callq  22f5 <virtual_test_get_device+0x5>
    22f5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22fc <virtual_test_get_device+0xc>
    22fc:	c3                   	retq   
    22fd:	0f 1f 00             	nopl   (%rax)

0000000000002300 <virtual_get_new_device>:
    2300:	e8 00 00 00 00       	callq  2305 <virtual_get_new_device+0x5>
    2305:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 230c <virtual_get_new_device+0xc>
    230c:	ba a0 02 00 00       	mov    $0x2a0,%edx
    2311:	be c0 80 60 00       	mov    $0x6080c0,%esi
    2316:	53                   	push   %rbx
    2317:	e8 00 00 00 00       	callq  231c <virtual_get_new_device+0x1c>
    231c:	48 89 c3             	mov    %rax,%rbx
    231f:	48 89 c7             	mov    %rax,%rdi
    2322:	e8 00 00 00 00       	callq  2327 <virtual_get_new_device+0x27>
    2327:	48 89 df             	mov    %rbx,%rdi
    232a:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
    2331:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    2338:	e8 00 00 00 00       	callq  233d <virtual_get_new_device+0x3d>
    233d:	48 89 df             	mov    %rbx,%rdi
    2340:	48 c7 83 80 02 00 00 	movq   $0x0,0x280(%rbx)
    2347:	00 00 00 00 
    234b:	e8 00 00 00 00       	callq  2350 <virtual_get_new_device+0x50>
    2350:	48 89 d8             	mov    %rbx,%rax
    2353:	5b                   	pop    %rbx
    2354:	c3                   	retq   
    2355:	90                   	nop
    2356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    235d:	00 00 00 

0000000000002360 <virtual_put_new_device>:
    2360:	e8 00 00 00 00       	callq  2365 <virtual_put_new_device+0x5>
    2365:	53                   	push   %rbx
    2366:	48 89 fb             	mov    %rdi,%rbx
    2369:	e8 00 00 00 00       	callq  236e <virtual_put_new_device+0xe>
    236e:	48 89 df             	mov    %rbx,%rdi
    2371:	5b                   	pop    %rbx
    2372:	e9 00 00 00 00       	jmpq   2377 <virtual_put_new_device+0x17>
    2377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    237e:	00 00 

0000000000002380 <virtual_test_bus_init>:
    2380:	e8 00 00 00 00       	callq  2385 <virtual_test_bus_init+0x5>
    2385:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 238c <virtual_test_bus_init+0xc>
    238c:	ba c0 02 00 00       	mov    $0x2c0,%edx
    2391:	be c0 80 60 00       	mov    $0x6080c0,%esi
    2396:	53                   	push   %rbx
    2397:	e8 00 00 00 00       	callq  239c <virtual_test_bus_init+0x1c>
    239c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    23a3:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 23aa <virtual_test_bus_init+0x2a>
    23aa:	e8 00 00 00 00       	callq  23af <virtual_test_bus_init+0x2f>
    23af:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 23b6 <virtual_test_bus_init+0x36>
    23b6:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
    23bd:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    23c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    23cb:	c7 83 a8 02 00 00 00 	movl   $0x0,0x2a8(%rbx)
    23d2:	00 00 00 
    23d5:	c7 83 ac 02 00 00 04 	movl   $0x800004,0x2ac(%rbx)
    23dc:	00 80 00 
    23df:	48 c7 83 b0 02 00 00 	movq   $0x0,0x2b0(%rbx)
    23e6:	00 00 00 00 
    23ea:	c7 83 b8 02 00 00 00 	movl   $0x0,0x2b8(%rbx)
    23f1:	00 00 00 
    23f4:	c7 83 bc 02 00 00 00 	movl   $0x0,0x2bc(%rbx)
    23fb:	00 00 00 
    23fe:	e8 00 00 00 00       	callq  2403 <virtual_test_bus_init+0x83>
    2403:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 240a <virtual_test_bus_init+0x8a>
    240a:	48 89 83 a0 02 00 00 	mov    %rax,0x2a0(%rbx)
    2411:	c7 87 a8 02 00 00 00 	movl   $0x0,0x2a8(%rdi)
    2418:	00 00 00 
    241b:	c7 87 ac 02 00 00 04 	movl   $0x800004,0x2ac(%rdi)
    2422:	00 80 00 
    2425:	48 c7 87 b0 02 00 00 	movq   $0x0,0x2b0(%rdi)
    242c:	00 00 00 00 
    2430:	c7 87 b8 02 00 00 00 	movl   $0x0,0x2b8(%rdi)
    2437:	00 00 00 
    243a:	c7 87 bc 02 00 00 00 	movl   $0x0,0x2bc(%rdi)
    2441:	00 00 00 
    2444:	e8 00 00 00 00       	callq  2449 <virtual_test_bus_init+0xc9>
    2449:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 2450 <virtual_test_bus_init+0xd0>
    2450:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
    2457:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    245e:	e8 00 00 00 00       	callq  2463 <virtual_test_bus_init+0xe3>
    2463:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 246a <virtual_test_bus_init+0xea>
    246a:	48 c7 87 80 00 00 00 	movq   $0x0,0x80(%rdi)
    2471:	00 00 00 00 
    2475:	48 c7 87 80 02 00 00 	movq   $0x0,0x280(%rdi)
    247c:	00 00 00 00 
    2480:	5b                   	pop    %rbx
    2481:	e9 00 00 00 00       	jmpq   2486 <virtual_test_bus_init+0x106>
    2486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    248d:	00 00 00 

0000000000002490 <virtual_test_bus_exit>:
    2490:	e8 00 00 00 00       	callq  2495 <virtual_test_bus_exit+0x5>
    2495:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 249c <virtual_test_bus_exit+0xc>
    249c:	e8 00 00 00 00       	callq  24a1 <virtual_test_bus_exit+0x11>
    24a1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 24a8 <virtual_test_bus_exit+0x18>
    24a8:	48 8b b8 a0 02 00 00 	mov    0x2a0(%rax),%rdi
    24af:	e8 00 00 00 00       	callq  24b4 <virtual_test_bus_exit+0x24>
    24b4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 24bb <virtual_test_bus_exit+0x2b>
    24bb:	48 8d b8 a8 02 00 00 	lea    0x2a8(%rax),%rdi
    24c2:	e8 00 00 00 00       	callq  24c7 <virtual_test_bus_exit+0x37>
    24c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    24ce:	e8 00 00 00 00       	callq  24d3 <virtual_test_bus_exit+0x43>
    24d3:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 24da <virtual_test_bus_exit+0x4a>
    24da:	e8 00 00 00 00       	callq  24df <virtual_test_bus_exit+0x4f>
    24df:	c3                   	retq   

00000000000024e0 <request_flag_dump>:
    24e0:	e8 00 00 00 00       	callq  24e5 <request_flag_dump+0x5>
    24e5:	53                   	push   %rbx
    24e6:	48 89 fb             	mov    %rdi,%rbx
    24e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    24f0:	e8 00 00 00 00       	callq  24f5 <request_flag_dump+0x15>
    24f5:	8b 43 14             	mov    0x14(%rbx),%eax
    24f8:	0f b6 d0             	movzbl %al,%edx
    24fb:	85 d2                	test   %edx,%edx
    24fd:	0f 84 14 01 00 00    	je     2617 <request_flag_dump+0x137>
    2503:	83 fa 01             	cmp    $0x1,%edx
    2506:	0f 84 61 03 00 00    	je     286d <request_flag_dump+0x38d>
    250c:	83 fa 02             	cmp    $0x2,%edx
    250f:	0f 84 41 03 00 00    	je     2856 <request_flag_dump+0x376>
    2515:	83 fa 03             	cmp    $0x3,%edx
    2518:	0f 84 21 03 00 00    	je     283f <request_flag_dump+0x35f>
    251e:	83 fa 04             	cmp    $0x4,%edx
    2521:	0f 84 01 03 00 00    	je     2828 <request_flag_dump+0x348>
    2527:	83 fa 05             	cmp    $0x5,%edx
    252a:	0f 84 e1 02 00 00    	je     2811 <request_flag_dump+0x331>
    2530:	83 fa 06             	cmp    $0x6,%edx
    2533:	0f 84 c1 02 00 00    	je     27fa <request_flag_dump+0x31a>
    2539:	83 fa 07             	cmp    $0x7,%edx
    253c:	0f 84 a1 02 00 00    	je     27e3 <request_flag_dump+0x303>
    2542:	83 fa 09             	cmp    $0x9,%edx
    2545:	0f 84 81 02 00 00    	je     27cc <request_flag_dump+0x2ec>
    254b:	83 fa 20             	cmp    $0x20,%edx
    254e:	0f 84 61 02 00 00    	je     27b5 <request_flag_dump+0x2d5>
    2554:	83 fa 21             	cmp    $0x21,%edx
    2557:	0f 84 41 02 00 00    	je     279e <request_flag_dump+0x2be>
    255d:	83 fa 22             	cmp    $0x22,%edx
    2560:	0f 84 21 02 00 00    	je     2787 <request_flag_dump+0x2a7>
    2566:	83 fa 23             	cmp    $0x23,%edx
    2569:	0f 84 04 02 00 00    	je     2773 <request_flag_dump+0x293>
    256f:	f6 c4 01             	test   $0x1,%ah
    2572:	0f 85 e7 01 00 00    	jne    275f <request_flag_dump+0x27f>
    2578:	f6 c4 02             	test   $0x2,%ah
    257b:	0f 85 ca 01 00 00    	jne    274b <request_flag_dump+0x26b>
    2581:	f6 c4 04             	test   $0x4,%ah
    2584:	0f 85 ad 01 00 00    	jne    2737 <request_flag_dump+0x257>
    258a:	f6 c4 08             	test   $0x8,%ah
    258d:	0f 85 90 01 00 00    	jne    2723 <request_flag_dump+0x243>
    2593:	f6 c4 10             	test   $0x10,%ah
    2596:	0f 85 73 01 00 00    	jne    270f <request_flag_dump+0x22f>
    259c:	f6 c4 20             	test   $0x20,%ah
    259f:	0f 85 56 01 00 00    	jne    26fb <request_flag_dump+0x21b>
    25a5:	f6 c4 40             	test   $0x40,%ah
    25a8:	0f 85 39 01 00 00    	jne    26e7 <request_flag_dump+0x207>
    25ae:	f6 c4 80             	test   $0x80,%ah
    25b1:	0f 85 1c 01 00 00    	jne    26d3 <request_flag_dump+0x1f3>
    25b7:	a9 00 00 01 00       	test   $0x10000,%eax
    25bc:	0f 85 fd 00 00 00    	jne    26bf <request_flag_dump+0x1df>
    25c2:	a9 00 00 02 00       	test   $0x20000,%eax
    25c7:	0f 85 de 00 00 00    	jne    26ab <request_flag_dump+0x1cb>
    25cd:	a9 00 00 04 00       	test   $0x40000,%eax
    25d2:	0f 85 bf 00 00 00    	jne    2697 <request_flag_dump+0x1b7>
    25d8:	a9 00 00 08 00       	test   $0x80000,%eax
    25dd:	0f 85 a0 00 00 00    	jne    2683 <request_flag_dump+0x1a3>
    25e3:	a9 00 00 10 00       	test   $0x100000,%eax
    25e8:	0f 85 81 00 00 00    	jne    266f <request_flag_dump+0x18f>
    25ee:	a9 00 00 20 00       	test   $0x200000,%eax
    25f3:	75 69                	jne    265e <request_flag_dump+0x17e>
    25f5:	a9 00 00 40 00       	test   $0x400000,%eax
    25fa:	75 51                	jne    264d <request_flag_dump+0x16d>
    25fc:	a9 00 00 80 00       	test   $0x800000,%eax
    2601:	75 39                	jne    263c <request_flag_dump+0x15c>
    2603:	a9 00 00 00 01       	test   $0x1000000,%eax
    2608:	75 24                	jne    262e <request_flag_dump+0x14e>
    260a:	5b                   	pop    %rbx
    260b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2612:	e9 00 00 00 00       	jmpq   2617 <request_flag_dump+0x137>
    2617:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    261e:	e8 00 00 00 00       	callq  2623 <request_flag_dump+0x143>
    2623:	8b 43 14             	mov    0x14(%rbx),%eax
    2626:	0f b6 d0             	movzbl %al,%edx
    2629:	e9 d5 fe ff ff       	jmpq   2503 <request_flag_dump+0x23>
    262e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2635:	e8 00 00 00 00       	callq  263a <request_flag_dump+0x15a>
    263a:	eb ce                	jmp    260a <request_flag_dump+0x12a>
    263c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2643:	e8 00 00 00 00       	callq  2648 <request_flag_dump+0x168>
    2648:	8b 43 14             	mov    0x14(%rbx),%eax
    264b:	eb b6                	jmp    2603 <request_flag_dump+0x123>
    264d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2654:	e8 00 00 00 00       	callq  2659 <request_flag_dump+0x179>
    2659:	8b 43 14             	mov    0x14(%rbx),%eax
    265c:	eb 9e                	jmp    25fc <request_flag_dump+0x11c>
    265e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2665:	e8 00 00 00 00       	callq  266a <request_flag_dump+0x18a>
    266a:	8b 43 14             	mov    0x14(%rbx),%eax
    266d:	eb 86                	jmp    25f5 <request_flag_dump+0x115>
    266f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2676:	e8 00 00 00 00       	callq  267b <request_flag_dump+0x19b>
    267b:	8b 43 14             	mov    0x14(%rbx),%eax
    267e:	e9 6b ff ff ff       	jmpq   25ee <request_flag_dump+0x10e>
    2683:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    268a:	e8 00 00 00 00       	callq  268f <request_flag_dump+0x1af>
    268f:	8b 43 14             	mov    0x14(%rbx),%eax
    2692:	e9 4c ff ff ff       	jmpq   25e3 <request_flag_dump+0x103>
    2697:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    269e:	e8 00 00 00 00       	callq  26a3 <request_flag_dump+0x1c3>
    26a3:	8b 43 14             	mov    0x14(%rbx),%eax
    26a6:	e9 2d ff ff ff       	jmpq   25d8 <request_flag_dump+0xf8>
    26ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    26b2:	e8 00 00 00 00       	callq  26b7 <request_flag_dump+0x1d7>
    26b7:	8b 43 14             	mov    0x14(%rbx),%eax
    26ba:	e9 0e ff ff ff       	jmpq   25cd <request_flag_dump+0xed>
    26bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    26c6:	e8 00 00 00 00       	callq  26cb <request_flag_dump+0x1eb>
    26cb:	8b 43 14             	mov    0x14(%rbx),%eax
    26ce:	e9 ef fe ff ff       	jmpq   25c2 <request_flag_dump+0xe2>
    26d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    26da:	e8 00 00 00 00       	callq  26df <request_flag_dump+0x1ff>
    26df:	8b 43 14             	mov    0x14(%rbx),%eax
    26e2:	e9 d0 fe ff ff       	jmpq   25b7 <request_flag_dump+0xd7>
    26e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    26ee:	e8 00 00 00 00       	callq  26f3 <request_flag_dump+0x213>
    26f3:	8b 43 14             	mov    0x14(%rbx),%eax
    26f6:	e9 b3 fe ff ff       	jmpq   25ae <request_flag_dump+0xce>
    26fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2702:	e8 00 00 00 00       	callq  2707 <request_flag_dump+0x227>
    2707:	8b 43 14             	mov    0x14(%rbx),%eax
    270a:	e9 96 fe ff ff       	jmpq   25a5 <request_flag_dump+0xc5>
    270f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2716:	e8 00 00 00 00       	callq  271b <request_flag_dump+0x23b>
    271b:	8b 43 14             	mov    0x14(%rbx),%eax
    271e:	e9 79 fe ff ff       	jmpq   259c <request_flag_dump+0xbc>
    2723:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    272a:	e8 00 00 00 00       	callq  272f <request_flag_dump+0x24f>
    272f:	8b 43 14             	mov    0x14(%rbx),%eax
    2732:	e9 5c fe ff ff       	jmpq   2593 <request_flag_dump+0xb3>
    2737:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    273e:	e8 00 00 00 00       	callq  2743 <request_flag_dump+0x263>
    2743:	8b 43 14             	mov    0x14(%rbx),%eax
    2746:	e9 3f fe ff ff       	jmpq   258a <request_flag_dump+0xaa>
    274b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2752:	e8 00 00 00 00       	callq  2757 <request_flag_dump+0x277>
    2757:	8b 43 14             	mov    0x14(%rbx),%eax
    275a:	e9 22 fe ff ff       	jmpq   2581 <request_flag_dump+0xa1>
    275f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2766:	e8 00 00 00 00       	callq  276b <request_flag_dump+0x28b>
    276b:	8b 43 14             	mov    0x14(%rbx),%eax
    276e:	e9 05 fe ff ff       	jmpq   2578 <request_flag_dump+0x98>
    2773:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    277a:	e8 00 00 00 00       	callq  277f <request_flag_dump+0x29f>
    277f:	8b 43 14             	mov    0x14(%rbx),%eax
    2782:	e9 e8 fd ff ff       	jmpq   256f <request_flag_dump+0x8f>
    2787:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    278e:	e8 00 00 00 00       	callq  2793 <request_flag_dump+0x2b3>
    2793:	8b 43 14             	mov    0x14(%rbx),%eax
    2796:	0f b6 d0             	movzbl %al,%edx
    2799:	e9 c8 fd ff ff       	jmpq   2566 <request_flag_dump+0x86>
    279e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    27a5:	e8 00 00 00 00       	callq  27aa <request_flag_dump+0x2ca>
    27aa:	8b 43 14             	mov    0x14(%rbx),%eax
    27ad:	0f b6 d0             	movzbl %al,%edx
    27b0:	e9 a8 fd ff ff       	jmpq   255d <request_flag_dump+0x7d>
    27b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    27bc:	e8 00 00 00 00       	callq  27c1 <request_flag_dump+0x2e1>
    27c1:	8b 43 14             	mov    0x14(%rbx),%eax
    27c4:	0f b6 d0             	movzbl %al,%edx
    27c7:	e9 88 fd ff ff       	jmpq   2554 <request_flag_dump+0x74>
    27cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    27d3:	e8 00 00 00 00       	callq  27d8 <request_flag_dump+0x2f8>
    27d8:	8b 43 14             	mov    0x14(%rbx),%eax
    27db:	0f b6 d0             	movzbl %al,%edx
    27de:	e9 68 fd ff ff       	jmpq   254b <request_flag_dump+0x6b>
    27e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    27ea:	e8 00 00 00 00       	callq  27ef <request_flag_dump+0x30f>
    27ef:	8b 43 14             	mov    0x14(%rbx),%eax
    27f2:	0f b6 d0             	movzbl %al,%edx
    27f5:	e9 48 fd ff ff       	jmpq   2542 <request_flag_dump+0x62>
    27fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2801:	e8 00 00 00 00       	callq  2806 <request_flag_dump+0x326>
    2806:	8b 43 14             	mov    0x14(%rbx),%eax
    2809:	0f b6 d0             	movzbl %al,%edx
    280c:	e9 28 fd ff ff       	jmpq   2539 <request_flag_dump+0x59>
    2811:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2818:	e8 00 00 00 00       	callq  281d <request_flag_dump+0x33d>
    281d:	8b 43 14             	mov    0x14(%rbx),%eax
    2820:	0f b6 d0             	movzbl %al,%edx
    2823:	e9 08 fd ff ff       	jmpq   2530 <request_flag_dump+0x50>
    2828:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    282f:	e8 00 00 00 00       	callq  2834 <request_flag_dump+0x354>
    2834:	8b 43 14             	mov    0x14(%rbx),%eax
    2837:	0f b6 d0             	movzbl %al,%edx
    283a:	e9 e8 fc ff ff       	jmpq   2527 <request_flag_dump+0x47>
    283f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2846:	e8 00 00 00 00       	callq  284b <request_flag_dump+0x36b>
    284b:	8b 43 14             	mov    0x14(%rbx),%eax
    284e:	0f b6 d0             	movzbl %al,%edx
    2851:	e9 c8 fc ff ff       	jmpq   251e <request_flag_dump+0x3e>
    2856:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    285d:	e8 00 00 00 00       	callq  2862 <request_flag_dump+0x382>
    2862:	8b 43 14             	mov    0x14(%rbx),%eax
    2865:	0f b6 d0             	movzbl %al,%edx
    2868:	e9 a8 fc ff ff       	jmpq   2515 <request_flag_dump+0x35>
    286d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2874:	e8 00 00 00 00       	callq  2879 <request_flag_dump+0x399>
    2879:	8b 43 14             	mov    0x14(%rbx),%eax
    287c:	0f b6 d0             	movzbl %al,%edx
    287f:	e9 88 fc ff ff       	jmpq   250c <request_flag_dump+0x2c>
    2884:	66 90                	xchg   %ax,%ax
    2886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    288d:	00 00 00 

0000000000002890 <merequest_list_dump>:
    2890:	e8 00 00 00 00       	callq  2895 <merequest_list_dump+0x5>
    2895:	41 57                	push   %r15
    2897:	b9 04 00 00 00       	mov    $0x4,%ecx
    289c:	41 56                	push   %r14
    289e:	41 55                	push   %r13
    28a0:	41 54                	push   %r12
    28a2:	49 89 fc             	mov    %rdi,%r12
    28a5:	55                   	push   %rbp
    28a6:	53                   	push   %rbx
    28a7:	48 83 ec 08          	sub    $0x8,%rsp
    28ab:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
    28b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    28b9:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    28bd:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    28bf:	74 0f                	je     28d0 <merequest_list_dump+0x40>
    28c1:	48 83 c4 08          	add    $0x8,%rsp
    28c5:	5b                   	pop    %rbx
    28c6:	5d                   	pop    %rbp
    28c7:	41 5c                	pop    %r12
    28c9:	41 5d                	pop    %r13
    28cb:	41 5e                	pop    %r14
    28cd:	41 5f                	pop    %r15
    28cf:	c3                   	retq   
    28d0:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    28d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    28dc:	41 8b 74 24 20       	mov    0x20(%r12),%esi
    28e1:	e8 00 00 00 00       	callq  28e6 <merequest_list_dump+0x56>
    28e6:	41 8b 54 24 18       	mov    0x18(%r12),%edx
    28eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    28f2:	41 8b 74 24 14       	mov    0x14(%r12),%esi
    28f7:	e8 00 00 00 00       	callq  28fc <merequest_list_dump+0x6c>
    28fc:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
    2901:	48 85 ff             	test   %rdi,%rdi
    2904:	74 7d                	je     2983 <merequest_list_dump+0xf3>
    2906:	e8 00 00 00 00       	callq  290b <merequest_list_dump+0x7b>
    290b:	49 8b 5c 24 30       	mov    0x30(%r12),%rbx
    2910:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2917:	8b 4b 38             	mov    0x38(%rbx),%ecx
    291a:	8b 53 30             	mov    0x30(%rbx),%edx
    291d:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    2921:	44 8b 43 3c          	mov    0x3c(%rbx),%r8d
    2925:	e8 00 00 00 00       	callq  292a <merequest_list_dump+0x9a>
    292a:	48 85 db             	test   %rbx,%rbx
    292d:	74 1a                	je     2949 <merequest_list_dump+0xb9>
    292f:	49 c7 c5 00 00 00 00 	mov    $0x0,%r13
    2936:	8b 6b 30             	mov    0x30(%rbx),%ebp
    2939:	85 ed                	test   %ebp,%ebp
    293b:	0f 85 80 00 00 00    	jne    29c1 <merequest_list_dump+0x131>
    2941:	48 8b 1b             	mov    (%rbx),%rbx
    2944:	48 85 db             	test   %rbx,%rbx
    2947:	75 ed                	jne    2936 <merequest_list_dump+0xa6>
    2949:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    294e:	48 8d 58 c0          	lea    -0x40(%rax),%rbx
    2952:	49 39 dc             	cmp    %rbx,%r12
    2955:	0f 84 66 ff ff ff    	je     28c1 <merequest_list_dump+0x31>
    295b:	48 c7 c5 00 00 00 00 	mov    $0x0,%rbp
    2962:	48 89 de             	mov    %rbx,%rsi
    2965:	4c 89 e2             	mov    %r12,%rdx
    2968:	48 89 ef             	mov    %rbp,%rdi
    296b:	e8 00 00 00 00       	callq  2970 <merequest_list_dump+0xe0>
    2970:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    2974:	48 83 eb 40          	sub    $0x40,%rbx
    2978:	49 39 dc             	cmp    %rbx,%r12
    297b:	0f 84 40 ff ff ff    	je     28c1 <merequest_list_dump+0x31>
    2981:	eb df                	jmp    2962 <merequest_list_dump+0xd2>
    2983:	44 8b 04 25 3c 00 00 	mov    0x3c,%r8d
    298a:	00 
    298b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2992:	8b 0c 25 38 00 00 00 	mov    0x38,%ecx
    2999:	8b 14 25 30 00 00 00 	mov    0x30,%edx
    29a0:	48 8b 34 25 28 00 00 	mov    0x28,%rsi
    29a7:	00 
    29a8:	e8 00 00 00 00       	callq  29ad <merequest_list_dump+0x11d>
    29ad:	49 8b 44 24 40       	mov    0x40(%r12),%rax
    29b2:	48 8d 58 c0          	lea    -0x40(%rax),%rbx
    29b6:	49 39 dc             	cmp    %rbx,%r12
    29b9:	0f 84 02 ff ff ff    	je     28c1 <merequest_list_dump+0x31>
    29bf:	eb 9a                	jmp    295b <merequest_list_dump+0xcb>
    29c1:	44 8b 7b 34          	mov    0x34(%rbx),%r15d
    29c5:	44 8b 43 3c          	mov    0x3c(%rbx),%r8d
    29c9:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
    29d0:	4c 89 f9             	mov    %r15,%rcx
    29d3:	4c 89 f8             	mov    %r15,%rax
    29d6:	4c 89 ef             	mov    %r13,%rdi
    29d9:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    29de:	48 c1 e0 04          	shl    $0x4,%rax
    29e2:	89 0c 24             	mov    %ecx,(%rsp)
    29e5:	44 8b 74 02 08       	mov    0x8(%rdx,%rax,1),%r14d
    29ea:	89 ca                	mov    %ecx,%edx
    29ec:	45 29 c6             	sub    %r8d,%r14d
    29ef:	41 39 ee             	cmp    %ebp,%r14d
    29f2:	44 0f 47 f5          	cmova  %ebp,%r14d
    29f6:	44 89 f6             	mov    %r14d,%esi
    29f9:	e8 00 00 00 00       	callq  29fe <merequest_list_dump+0x16e>
    29fe:	8b 43 10             	mov    0x10(%rbx),%eax
    2a01:	8b 0c 24             	mov    (%rsp),%ecx
    2a04:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    2a09:	0f b6 d0             	movzbl %al,%edx
    2a0c:	83 ea 05             	sub    $0x5,%edx
    2a0f:	83 e2 fb             	and    $0xfffffffb,%edx
    2a12:	74 56                	je     2a6a <merequest_list_dump+0x1da>
    2a14:	25 fb 00 00 00       	and    $0xfb,%eax
    2a19:	83 f8 03             	cmp    $0x3,%eax
    2a1c:	74 4c                	je     2a6a <merequest_list_dump+0x1da>
    2a1e:	41 39 ee             	cmp    %ebp,%r14d
    2a21:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
    2a28:	77 5a                	ja     2a84 <merequest_list_dump+0x1f4>
    2a2a:	45 85 f6             	test   %r14d,%r14d
    2a2d:	75 0a                	jne    2a39 <merequest_list_dump+0x1a9>
    2a2f:	eb a2                	jmp    29d3 <merequest_list_dump+0x143>
    2a31:	45 85 f6             	test   %r14d,%r14d
    2a34:	74 37                	je     2a6d <merequest_list_dump+0x1dd>
    2a36:	41 89 cf             	mov    %ecx,%r15d
    2a39:	49 c1 e7 04          	shl    $0x4,%r15
    2a3d:	44 89 f0             	mov    %r14d,%eax
    2a40:	44 39 f5             	cmp    %r14d,%ebp
    2a43:	0f 46 c5             	cmovbe %ebp,%eax
    2a46:	42 8b 74 3a 08       	mov    0x8(%rdx,%r15,1),%esi
    2a4b:	89 f7                	mov    %esi,%edi
    2a4d:	44 29 c7             	sub    %r8d,%edi
    2a50:	39 f8                	cmp    %edi,%eax
    2a52:	0f 47 c7             	cmova  %edi,%eax
    2a55:	41 01 c0             	add    %eax,%r8d
    2a58:	41 29 c6             	sub    %eax,%r14d
    2a5b:	29 c5                	sub    %eax,%ebp
    2a5d:	44 39 c6             	cmp    %r8d,%esi
    2a60:	75 cf                	jne    2a31 <merequest_list_dump+0x1a1>
    2a62:	83 c1 01             	add    $0x1,%ecx
    2a65:	45 31 c0             	xor    %r8d,%r8d
    2a68:	eb c7                	jmp    2a31 <merequest_list_dump+0x1a1>
    2a6a:	44 29 f5             	sub    %r14d,%ebp
    2a6d:	85 ed                	test   %ebp,%ebp
    2a6f:	0f 84 cc fe ff ff    	je     2941 <merequest_list_dump+0xb1>
    2a75:	41 89 cf             	mov    %ecx,%r15d
    2a78:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
    2a7f:	e9 4f ff ff ff       	jmpq   29d3 <merequest_list_dump+0x143>
    2a84:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 2a8b <merequest_list_dump+0x1fb>
    2a8b:	0f 85 b0 fe ff ff    	jne    2941 <merequest_list_dump+0xb1>
    2a91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2a98:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 2a9f <merequest_list_dump+0x20f>
    2a9f:	e8 00 00 00 00       	callq  2aa4 <merequest_list_dump+0x214>
    2aa4:	0f 0b                	ud2    
    2aa6:	e9 96 fe ff ff       	jmpq   2941 <merequest_list_dump+0xb1>
    2aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002ab0 <scan_block_dev_disk>:
    2ab0:	e8 00 00 00 00       	callq  2ab5 <scan_block_dev_disk+0x5>
    2ab5:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 2abc <scan_block_dev_disk+0xc>
    2abc:	41 56                	push   %r14
    2abe:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
    2ac5:	41 55                	push   %r13
    2ac7:	41 54                	push   %r12
    2ac9:	55                   	push   %rbp
    2aca:	53                   	push   %rbx
    2acb:	e8 00 00 00 00       	callq  2ad0 <scan_block_dev_disk+0x20>
    2ad0:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 2ad7 <scan_block_dev_disk+0x27>
    2ad7:	48 8b 02             	mov    (%rdx),%rax
    2ada:	4c 8d a0 68 ff ff ff 	lea    -0x98(%rax),%r12
    2ae1:	48 39 c2             	cmp    %rax,%rdx
    2ae4:	75 21                	jne    2b07 <scan_block_dev_disk+0x57>
    2ae6:	e9 c0 00 00 00       	jmpq   2bab <scan_block_dev_disk+0xfb>
    2aeb:	49 8b 84 24 98 00 00 	mov    0x98(%r12),%rax
    2af2:	00 
    2af3:	48 39 05 00 00 00 00 	cmp    %rax,0x0(%rip)        # 2afa <scan_block_dev_disk+0x4a>
    2afa:	4c 8d a0 68 ff ff ff 	lea    -0x98(%rax),%r12
    2b01:	0f 84 a4 00 00 00    	je     2bab <scan_block_dev_disk+0xfb>
    2b07:	49 8b 84 24 80 00 00 	mov    0x80(%r12),%rax
    2b0e:	00 
    2b0f:	48 8d 70 0c          	lea    0xc(%rax),%rsi
    2b13:	48 85 c0             	test   %rax,%rax
    2b16:	74 d3                	je     2aeb <scan_block_dev_disk+0x3b>
    2b18:	48 85 f6             	test   %rsi,%rsi
    2b1b:	74 ce                	je     2aeb <scan_block_dev_disk+0x3b>
    2b1d:	b9 04 00 00 00       	mov    $0x4,%ecx
    2b22:	4c 89 f7             	mov    %r14,%rdi
    2b25:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2b27:	75 c2                	jne    2aeb <scan_block_dev_disk+0x3b>
    2b29:	48 8b 80 b8 03 00 00 	mov    0x3b8(%rax),%rax
    2b30:	4c 8b a8 98 01 00 00 	mov    0x198(%rax),%r13
    2b37:	4d 85 ed             	test   %r13,%r13
    2b3a:	74 af                	je     2aeb <scan_block_dev_disk+0x3b>
    2b3c:	49 8b 85 10 03 00 00 	mov    0x310(%r13),%rax
    2b43:	49 81 c5 10 03 00 00 	add    $0x310,%r13
    2b4a:	48 8d 98 10 fe ff ff 	lea    -0x1f0(%rax),%rbx
    2b51:	49 39 c5             	cmp    %rax,%r13
    2b54:	74 95                	je     2aeb <scan_block_dev_disk+0x3b>
    2b56:	48 85 db             	test   %rbx,%rbx
    2b59:	74 38                	je     2b93 <scan_block_dev_disk+0xe3>
    2b5b:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    2b5f:	e8 00 00 00 00       	callq  2b64 <scan_block_dev_disk+0xb4>
    2b64:	48 8b 43 28          	mov    0x28(%rbx),%rax
    2b68:	48 8d 6b 28          	lea    0x28(%rbx),%rbp
    2b6c:	48 39 c5             	cmp    %rax,%rbp
    2b6f:	74 1e                	je     2b8f <scan_block_dev_disk+0xdf>
    2b71:	48 8b 43 30          	mov    0x30(%rbx),%rax
    2b75:	be 01 00 00 00       	mov    $0x1,%esi
    2b7a:	48 8d b8 18 ff ff ff 	lea    -0xe8(%rax),%rdi
    2b81:	e8 00 00 00 00       	callq  2b86 <scan_block_dev_disk+0xd6>
    2b86:	48 8b 43 28          	mov    0x28(%rbx),%rax
    2b8a:	48 39 c5             	cmp    %rax,%rbp
    2b8d:	75 e2                	jne    2b71 <scan_block_dev_disk+0xc1>
    2b8f:	c6 43 58 00          	movb   $0x0,0x58(%rbx)
    2b93:	48 8b 83 f0 01 00 00 	mov    0x1f0(%rbx),%rax
    2b9a:	48 8d 98 10 fe ff ff 	lea    -0x1f0(%rax),%rbx
    2ba1:	49 39 c5             	cmp    %rax,%r13
    2ba4:	75 b0                	jne    2b56 <scan_block_dev_disk+0xa6>
    2ba6:	e9 40 ff ff ff       	jmpq   2aeb <scan_block_dev_disk+0x3b>
    2bab:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2bb2 <scan_block_dev_disk+0x102>
    2bb2:	c6 00 00             	movb   $0x0,(%rax)
    2bb5:	5b                   	pop    %rbx
    2bb6:	5d                   	pop    %rbp
    2bb7:	41 5c                	pop    %r12
    2bb9:	41 5d                	pop    %r13
    2bbb:	41 5e                	pop    %r14
    2bbd:	c3                   	retq   
    2bbe:	66 90                	xchg   %ax,%ax

0000000000002bc0 <dump_inode_data>:
    2bc0:	e8 00 00 00 00       	callq  2bc5 <dump_inode_data+0x5>
    2bc5:	48 8b 4f 50          	mov    0x50(%rdi),%rcx
    2bc9:	8b 57 0c             	mov    0xc(%rdi),%edx
    2bcc:	48 8b 77 40          	mov    0x40(%rdi),%rsi
    2bd0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2bd7:	e9 00 00 00 00       	jmpq   2bdc <dump_inode_data+0x1c>
    2bdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002be0 <inode_mapping_dump>:
    2be0:	e8 00 00 00 00       	callq  2be5 <inode_mapping_dump+0x5>
    2be5:	c3                   	retq   
    2be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2bed:	00 00 00 

0000000000002bf0 <bio_dump_data>:
    2bf0:	e8 00 00 00 00       	callq  2bf5 <bio_dump_data+0x5>
    2bf5:	41 55                	push   %r13
    2bf7:	49 c7 c5 00 00 00 00 	mov    $0x0,%r13
    2bfe:	41 54                	push   %r12
    2c00:	45 31 e4             	xor    %r12d,%r12d
    2c03:	55                   	push   %rbp
    2c04:	53                   	push   %rbx
    2c05:	0f b6 47 10          	movzbl 0x10(%rdi),%eax
    2c09:	48 89 fb             	mov    %rdi,%rbx
    2c0c:	48 8b af 80 00 00 00 	mov    0x80(%rdi),%rbp
    2c13:	0f b7 4f 7a          	movzwl 0x7a(%rdi),%ecx
    2c17:	0f b7 57 78          	movzwl 0x78(%rdi),%edx
    2c1b:	8b 77 1c             	mov    0x1c(%rdi),%esi
    2c1e:	50                   	push   %rax
    2c1f:	8b 47 3c             	mov    0x3c(%rdi),%eax
    2c22:	50                   	push   %rax
    2c23:	8b 47 38             	mov    0x38(%rdi),%eax
    2c26:	50                   	push   %rax
    2c27:	44 8b 4f 34          	mov    0x34(%rdi),%r9d
    2c2b:	44 8b 47 30          	mov    0x30(%rdi),%r8d
    2c2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2c36:	e8 00 00 00 00       	callq  2c3b <bio_dump_data+0x4b>
    2c3b:	48 83 c4 18          	add    $0x18,%rsp
    2c3f:	8b 4d 0c             	mov    0xc(%rbp),%ecx
    2c42:	4c 89 ef             	mov    %r13,%rdi
    2c45:	41 83 c4 01          	add    $0x1,%r12d
    2c49:	48 83 c5 10          	add    $0x10,%rbp
    2c4d:	8b 55 f8             	mov    -0x8(%rbp),%edx
    2c50:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2c54:	e8 00 00 00 00       	callq  2c59 <bio_dump_data+0x69>
    2c59:	0f b7 43 78          	movzwl 0x78(%rbx),%eax
    2c5d:	44 39 e0             	cmp    %r12d,%eax
    2c60:	7d dd                	jge    2c3f <bio_dump_data+0x4f>
    2c62:	5b                   	pop    %rbx
    2c63:	5d                   	pop    %rbp
    2c64:	41 5c                	pop    %r12
    2c66:	41 5d                	pop    %r13
    2c68:	c3                   	retq   
    2c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002c70 <vma_scan>:
    2c70:	e8 00 00 00 00       	callq  2c75 <vma_scan+0x5>
    2c75:	41 57                	push   %r15
    2c77:	31 c0                	xor    %eax,%eax
    2c79:	b9 1e 00 00 00       	mov    $0x1e,%ecx
    2c7e:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    2c85:	41 56                	push   %r14
    2c87:	41 55                	push   %r13
    2c89:	49 89 fd             	mov    %rdi,%r13
    2c8c:	41 54                	push   %r12
    2c8e:	55                   	push   %rbp
    2c8f:	53                   	push   %rbx
    2c90:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    2c97:	41 8b 55 08          	mov    0x8(%r13),%edx
    2c9b:	48 89 e7             	mov    %rsp,%rdi
    2c9e:	48 89 e5             	mov    %rsp,%rbp
    2ca1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    2ca4:	49 8b 85 30 01 00 00 	mov    0x130(%r13),%rax
    2cab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2cb2:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    2cb9:	00 
    2cba:	e8 00 00 00 00       	callq  2cbf <vma_scan+0x4f>
    2cbf:	41 8b 7d 08          	mov    0x8(%r13),%edi
    2cc3:	83 ff ff             	cmp    $0xffffffff,%edi
    2cc6:	0f 84 42 02 00 00    	je     2f0e <vma_scan+0x29e>
    2ccc:	e8 00 00 00 00       	callq  2cd1 <vma_scan+0x61>
    2cd1:	49 89 c4             	mov    %rax,%r12
    2cd4:	4d 85 e4             	test   %r12,%r12
    2cd7:	0f 84 86 02 00 00    	je     2f63 <vma_scan+0x2f3>
    2cdd:	4d 8d bc 24 a8 06 00 	lea    0x6a8(%r12),%r15
    2ce4:	00 
    2ce5:	31 db                	xor    %ebx,%ebx
    2ce7:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
    2cee:	41 8b 8c 9c 54 04 00 	mov    0x454(%r12,%rbx,4),%ecx
    2cf5:	00 
    2cf6:	89 da                	mov    %ebx,%edx
    2cf8:	4c 89 fe             	mov    %r15,%rsi
    2cfb:	4c 89 f7             	mov    %r14,%rdi
    2cfe:	48 83 c3 01          	add    $0x1,%rbx
    2d02:	e8 00 00 00 00       	callq  2d07 <vma_scan+0x97>
    2d07:	48 83 fb 04          	cmp    $0x4,%rbx
    2d0b:	75 e1                	jne    2cee <vma_scan+0x7e>
    2d0d:	4d 8b a4 24 18 04 00 	mov    0x418(%r12),%r12
    2d14:	00 
    2d15:	49 8d 5c 24 70       	lea    0x70(%r12),%rbx
    2d1a:	48 89 df             	mov    %rbx,%rdi
    2d1d:	e8 00 00 00 00       	callq  2d22 <vma_scan+0xb2>
    2d22:	4d 8b 24 24          	mov    (%r12),%r12
    2d26:	4d 85 e4             	test   %r12,%r12
    2d29:	0f 85 ed 01 00 00    	jne    2f1c <vma_scan+0x2ac>
    2d2f:	48 89 df             	mov    %rbx,%rdi
    2d32:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
    2d39:	e8 00 00 00 00       	callq  2d3e <vma_scan+0xce>
    2d3e:	48 8b 34 24          	mov    (%rsp),%rsi
    2d42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2d49:	48 c1 ee 0c          	shr    $0xc,%rsi
    2d4d:	48 c1 e6 02          	shl    $0x2,%rsi
    2d51:	e8 00 00 00 00       	callq  2d56 <vma_scan+0xe6>
    2d56:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2d5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2d62:	48 c1 ee 0c          	shr    $0xc,%rsi
    2d66:	48 c1 e6 02          	shl    $0x2,%rsi
    2d6a:	e8 00 00 00 00       	callq  2d6f <vma_scan+0xff>
    2d6f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    2d74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2d7b:	48 c1 ee 0c          	shr    $0xc,%rsi
    2d7f:	48 c1 e6 02          	shl    $0x2,%rsi
    2d83:	e8 00 00 00 00       	callq  2d88 <vma_scan+0x118>
    2d88:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    2d8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2d94:	48 c1 ee 0c          	shr    $0xc,%rsi
    2d98:	48 c1 e6 02          	shl    $0x2,%rsi
    2d9c:	e8 00 00 00 00       	callq  2da1 <vma_scan+0x131>
    2da1:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    2da6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2dad:	48 c1 ee 0c          	shr    $0xc,%rsi
    2db1:	48 c1 e6 02          	shl    $0x2,%rsi
    2db5:	e8 00 00 00 00       	callq  2dba <vma_scan+0x14a>
    2dba:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    2dbf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2dc6:	48 c1 ee 0c          	shr    $0xc,%rsi
    2dca:	48 c1 e6 02          	shl    $0x2,%rsi
    2dce:	e8 00 00 00 00       	callq  2dd3 <vma_scan+0x163>
    2dd3:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    2dd8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2ddf:	48 c1 ee 0c          	shr    $0xc,%rsi
    2de3:	48 c1 e6 02          	shl    $0x2,%rsi
    2de7:	e8 00 00 00 00       	callq  2dec <vma_scan+0x17c>
    2dec:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    2df1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2df8:	48 c1 ee 0c          	shr    $0xc,%rsi
    2dfc:	48 c1 e6 02          	shl    $0x2,%rsi
    2e00:	e8 00 00 00 00       	callq  2e05 <vma_scan+0x195>
    2e05:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    2e0a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2e11:	48 c1 ee 0c          	shr    $0xc,%rsi
    2e15:	48 c1 e6 02          	shl    $0x2,%rsi
    2e19:	e8 00 00 00 00       	callq  2e1e <vma_scan+0x1ae>
    2e1e:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    2e23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2e2a:	48 c1 ee 0c          	shr    $0xc,%rsi
    2e2e:	48 c1 e6 02          	shl    $0x2,%rsi
    2e32:	e8 00 00 00 00       	callq  2e37 <vma_scan+0x1c7>
    2e37:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    2e3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2e43:	48 c1 ee 0c          	shr    $0xc,%rsi
    2e47:	48 c1 e6 02          	shl    $0x2,%rsi
    2e4b:	31 db                	xor    %ebx,%ebx
    2e4d:	e8 00 00 00 00       	callq  2e52 <vma_scan+0x1e2>
    2e52:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    2e57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2e5e:	48 c1 ee 0c          	shr    $0xc,%rsi
    2e62:	48 c1 e6 02          	shl    $0x2,%rsi
    2e66:	e8 00 00 00 00       	callq  2e6b <vma_scan+0x1fb>
    2e6b:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    2e70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2e77:	48 c1 ee 0c          	shr    $0xc,%rsi
    2e7b:	48 c1 e6 02          	shl    $0x2,%rsi
    2e7f:	e8 00 00 00 00       	callq  2e84 <vma_scan+0x214>
    2e84:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    2e89:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2e90:	48 c1 ee 0c          	shr    $0xc,%rsi
    2e94:	48 c1 e6 02          	shl    $0x2,%rsi
    2e98:	e8 00 00 00 00       	callq  2e9d <vma_scan+0x22d>
    2e9d:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    2ea2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2ea9:	48 c1 ee 0c          	shr    $0xc,%rsi
    2ead:	48 c1 e6 02          	shl    $0x2,%rsi
    2eb1:	e8 00 00 00 00       	callq  2eb6 <vma_scan+0x246>
    2eb6:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
    2ebb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2ec2:	48 c1 ee 0c          	shr    $0xc,%rsi
    2ec6:	48 c1 e6 02          	shl    $0x2,%rsi
    2eca:	e8 00 00 00 00       	callq  2ecf <vma_scan+0x25f>
    2ecf:	48 8b 94 dd 88 00 00 	mov    0x88(%rbp,%rbx,8),%rdx
    2ed6:	00 
    2ed7:	89 de                	mov    %ebx,%esi
    2ed9:	4c 89 e7             	mov    %r12,%rdi
    2edc:	48 83 c3 01          	add    $0x1,%rbx
    2ee0:	e8 00 00 00 00       	callq  2ee5 <vma_scan+0x275>
    2ee5:	48 83 fb 0b          	cmp    $0xb,%rbx
    2ee9:	75 e4                	jne    2ecf <vma_scan+0x25f>
    2eeb:	49 8d 7d 50          	lea    0x50(%r13),%rdi
    2eef:	ba f0 00 00 00       	mov    $0xf0,%edx
    2ef4:	48 89 ee             	mov    %rbp,%rsi
    2ef7:	e8 00 00 00 00       	callq  2efc <vma_scan+0x28c>
    2efc:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
    2f03:	5b                   	pop    %rbx
    2f04:	5d                   	pop    %rbp
    2f05:	41 5c                	pop    %r12
    2f07:	41 5d                	pop    %r13
    2f09:	41 5e                	pop    %r14
    2f0b:	41 5f                	pop    %r15
    2f0d:	c3                   	retq   
    2f0e:	65 4c 8b 24 25 00 00 	mov    %gs:0x0,%r12
    2f15:	00 00 
    2f17:	e9 b8 fd ff ff       	jmpq   2cd4 <vma_scan+0x64>
    2f1c:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
    2f23:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
    2f28:	4c 89 f6             	mov    %r14,%rsi
    2f2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2f32:	49 8b 14 24          	mov    (%r12),%rdx
    2f36:	e8 00 00 00 00       	callq  2f3b <vma_scan+0x2cb>
    2f3b:	49 8b 34 24          	mov    (%r12),%rsi
    2f3f:	4c 89 e7             	mov    %r12,%rdi
    2f42:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    2f47:	48 29 f2             	sub    %rsi,%rdx
    2f4a:	48 c1 ea 0c          	shr    $0xc,%rdx
    2f4e:	e8 00 00 00 00       	callq  2f53 <vma_scan+0x2e3>
    2f53:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    2f58:	4d 85 e4             	test   %r12,%r12
    2f5b:	0f 84 ce fd ff ff    	je     2d2f <vma_scan+0xbf>
    2f61:	eb c0                	jmp    2f23 <vma_scan+0x2b3>
    2f63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2f6a:	e8 00 00 00 00       	callq  2f6f <vma_scan+0x2ff>
    2f6f:	31 c0                	xor    %eax,%eax
    2f71:	eb 89                	jmp    2efc <vma_scan+0x28c>
    2f73:	0f 1f 00             	nopl   (%rax)
    2f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2f7d:	00 00 00 

0000000000002f80 <pmd_clear_bad>:
    2f80:	e8 00 00 00 00       	callq  2f85 <pmd_clear_bad+0x5>
    2f85:	53                   	push   %rbx
    2f86:	48 89 fb             	mov    %rdi,%rbx
    2f89:	48 8b 3f             	mov    (%rdi),%rdi
    2f8c:	ff 14 25 00 00 00 00 	callq  *0x0
    2f93:	ba 24 00 00 00       	mov    $0x24,%edx
    2f98:	49 89 c0             	mov    %rax,%r8
    2f9b:	48 89 d9             	mov    %rbx,%rcx
    2f9e:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    2fa5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2fac:	e8 00 00 00 00       	callq  2fb1 <pmd_clear_bad+0x31>
    2fb1:	31 ff                	xor    %edi,%edi
    2fb3:	ff 14 25 00 00 00 00 	callq  *0x0
    2fba:	48 89 c6             	mov    %rax,%rsi
    2fbd:	48 89 df             	mov    %rbx,%rdi
    2fc0:	ff 14 25 00 00 00 00 	callq  *0x0
    2fc7:	5b                   	pop    %rbx
    2fc8:	c3                   	retq   
    2fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002fd0 <kmem_unit_ioctl_func>:
    2fd0:	e8 00 00 00 00       	callq  2fd5 <kmem_unit_ioctl_func+0x5>
    2fd5:	41 55                	push   %r13
    2fd7:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    2fde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    2fe5:	41 54                	push   %r12
    2fe7:	55                   	push   %rbp
    2fe8:	53                   	push   %rbx
    2fe9:	8b 4a 04             	mov    0x4(%rdx),%ecx
    2fec:	48 89 d3             	mov    %rdx,%rbx
    2fef:	ba 59 01 00 00       	mov    $0x159,%edx
    2ff4:	e8 00 00 00 00       	callq  2ff9 <kmem_unit_ioctl_func+0x29>
    2ff9:	8b 43 04             	mov    0x4(%rbx),%eax
    2ffc:	83 f8 09             	cmp    $0x9,%eax
    2fff:	0f 84 e5 00 00 00    	je     30ea <kmem_unit_ioctl_func+0x11a>
    3005:	7f 26                	jg     302d <kmem_unit_ioctl_func+0x5d>
    3007:	83 f8 01             	cmp    $0x1,%eax
    300a:	0f 84 bd 00 00 00    	je     30cd <kmem_unit_ioctl_func+0xfd>
    3010:	83 f8 02             	cmp    $0x2,%eax
    3013:	75 0c                	jne    3021 <kmem_unit_ioctl_func+0x51>
    3015:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    301c:	e8 00 00 00 00       	callq  3021 <kmem_unit_ioctl_func+0x51>
    3021:	5b                   	pop    %rbx
    3022:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3027:	5d                   	pop    %rbp
    3028:	41 5c                	pop    %r12
    302a:	41 5d                	pop    %r13
    302c:	c3                   	retq   
    302d:	83 f8 0a             	cmp    $0xa,%eax
    3030:	74 5b                	je     308d <kmem_unit_ioctl_func+0xbd>
    3032:	83 f8 0b             	cmp    $0xb,%eax
    3035:	75 ea                	jne    3021 <kmem_unit_ioctl_func+0x51>
    3037:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    303e:	e8 00 00 00 00       	callq  3043 <kmem_unit_ioctl_func+0x73>
    3043:	48 8b ab 90 01 00 00 	mov    0x190(%rbx),%rbp
    304a:	48 85 ed             	test   %rbp,%rbp
    304d:	74 d2                	je     3021 <kmem_unit_ioctl_func+0x51>
    304f:	4c 8b a3 88 01 00 00 	mov    0x188(%rbx),%r12
    3056:	45 31 ed             	xor    %r13d,%r13d
    3059:	31 c0                	xor    %eax,%eax
    305b:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
    3062:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
    3066:	41 83 c5 01          	add    $0x1,%r13d
    306a:	48 89 df             	mov    %rbx,%rdi
    306d:	48 89 f2             	mov    %rsi,%rdx
    3070:	48 c1 e2 06          	shl    $0x6,%rdx
    3074:	48 03 15 00 00 00 00 	add    0x0(%rip),%rdx        # 307b <kmem_unit_ioctl_func+0xab>
    307b:	48 8b 0a             	mov    (%rdx),%rcx
    307e:	e8 00 00 00 00       	callq  3083 <kmem_unit_ioctl_func+0xb3>
    3083:	49 63 c5             	movslq %r13d,%rax
    3086:	48 39 c5             	cmp    %rax,%rbp
    3089:	76 96                	jbe    3021 <kmem_unit_ioctl_func+0x51>
    308b:	eb d5                	jmp    3062 <kmem_unit_ioctl_func+0x92>
    308d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3094:	e8 00 00 00 00       	callq  3099 <kmem_unit_ioctl_func+0xc9>
    3099:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    309d:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    30a4:	00 00 
    30a6:	48 8b b0 18 04 00 00 	mov    0x418(%rax),%rsi
    30ad:	e8 00 00 00 00       	callq  30b2 <kmem_unit_ioctl_func+0xe2>
    30b2:	48 8b 10             	mov    (%rax),%rdx
    30b5:	48 89 c7             	mov    %rax,%rdi
    30b8:	48 89 53 48          	mov    %rdx,0x48(%rbx)
    30bc:	e8 00 00 00 00       	callq  30c1 <kmem_unit_ioctl_func+0xf1>
    30c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    30c6:	5b                   	pop    %rbx
    30c7:	5d                   	pop    %rbp
    30c8:	41 5c                	pop    %r12
    30ca:	41 5d                	pop    %r13
    30cc:	c3                   	retq   
    30cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    30d4:	e8 00 00 00 00       	callq  30d9 <kmem_unit_ioctl_func+0x109>
    30d9:	e8 00 00 00 00       	callq  30de <kmem_unit_ioctl_func+0x10e>
    30de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    30e3:	5b                   	pop    %rbx
    30e4:	5d                   	pop    %rbp
    30e5:	41 5c                	pop    %r12
    30e7:	41 5d                	pop    %r13
    30e9:	c3                   	retq   
    30ea:	ba 62 01 00 00       	mov    $0x162,%edx
    30ef:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    30f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    30fd:	e8 00 00 00 00       	callq  3102 <kmem_unit_ioctl_func+0x132>
    3102:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3109:	e8 00 00 00 00       	callq  310e <kmem_unit_ioctl_func+0x13e>
    310e:	48 89 df             	mov    %rbx,%rdi
    3111:	e8 5a fb ff ff       	callq  2c70 <vma_scan>
    3116:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    311b:	5b                   	pop    %rbx
    311c:	5d                   	pop    %rbp
    311d:	41 5c                	pop    %r12
    311f:	41 5d                	pop    %r13
    3121:	c3                   	retq   
    3122:	0f 1f 40 00          	nopl   0x0(%rax)
    3126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    312d:	00 00 00 

0000000000003130 <kmem_unit_init>:
    3130:	e8 00 00 00 00       	callq  3135 <kmem_unit_init+0x5>
    3135:	41 57                	push   %r15
    3137:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    313e:	41 56                	push   %r14
    3140:	41 55                	push   %r13
    3142:	41 54                	push   %r12
    3144:	55                   	push   %rbp
    3145:	53                   	push   %rbx
    3146:	48 83 ec 10          	sub    $0x10,%rsp
    314a:	e8 00 00 00 00       	callq  314f <kmem_unit_init+0x1f>
    314f:	48 85 c0             	test   %rax,%rax
    3152:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3159 <kmem_unit_init+0x29>
    3159:	0f 84 30 04 00 00    	je     358f <kmem_unit_init+0x45f>
    315f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3166:	e8 00 00 00 00       	callq  316b <kmem_unit_init+0x3b>
    316b:	48 85 c0             	test   %rax,%rax
    316e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3175 <kmem_unit_init+0x45>
    3175:	0f 84 f7 03 00 00    	je     3572 <kmem_unit_init+0x442>
    317b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3182:	e8 00 00 00 00       	callq  3187 <kmem_unit_init+0x57>
    3187:	48 85 c0             	test   %rax,%rax
    318a:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3191 <kmem_unit_init+0x61>
    3191:	0f 84 be 03 00 00    	je     3555 <kmem_unit_init+0x425>
    3197:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    319e:	e8 00 00 00 00       	callq  31a3 <kmem_unit_init+0x73>
    31a3:	48 85 c0             	test   %rax,%rax
    31a6:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 31ad <kmem_unit_init+0x7d>
    31ad:	0f 84 85 03 00 00    	je     3538 <kmem_unit_init+0x408>
    31b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    31ba:	e8 00 00 00 00       	callq  31bf <kmem_unit_init+0x8f>
    31bf:	48 85 c0             	test   %rax,%rax
    31c2:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 31c9 <kmem_unit_init+0x99>
    31c9:	0f 84 4c 03 00 00    	je     351b <kmem_unit_init+0x3eb>
    31cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    31d6:	e8 00 00 00 00       	callq  31db <kmem_unit_init+0xab>
    31db:	48 85 c0             	test   %rax,%rax
    31de:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 31e5 <kmem_unit_init+0xb5>
    31e5:	0f 84 13 03 00 00    	je     34fe <kmem_unit_init+0x3ce>
    31eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    31f2:	e8 00 00 00 00       	callq  31f7 <kmem_unit_init+0xc7>
    31f7:	48 85 c0             	test   %rax,%rax
    31fa:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3201 <kmem_unit_init+0xd1>
    3201:	0f 84 da 02 00 00    	je     34e1 <kmem_unit_init+0x3b1>
    3207:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    320e:	e8 00 00 00 00       	callq  3213 <kmem_unit_init+0xe3>
    3213:	48 85 c0             	test   %rax,%rax
    3216:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 321d <kmem_unit_init+0xed>
    321d:	0f 84 a4 02 00 00    	je     34c7 <kmem_unit_init+0x397>
    3223:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    322a:	e8 00 00 00 00       	callq  322f <kmem_unit_init+0xff>
    322f:	48 85 c0             	test   %rax,%rax
    3232:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3239 <kmem_unit_init+0x109>
    3239:	0f 84 6e 02 00 00    	je     34ad <kmem_unit_init+0x37d>
    323f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3246:	e8 00 00 00 00       	callq  324b <kmem_unit_init+0x11b>
    324b:	48 85 c0             	test   %rax,%rax
    324e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3255 <kmem_unit_init+0x125>
    3255:	0f 84 38 02 00 00    	je     3493 <kmem_unit_init+0x363>
    325b:	ba 02 00 00 00       	mov    $0x2,%edx
    3260:	be c0 00 60 00       	mov    $0x6000c0,%esi
    3265:	bf 00 40 00 00       	mov    $0x4000,%edi
    326a:	e8 00 00 00 00       	callq  326f <kmem_unit_init+0x13f>
    326f:	bb 00 00 00 80       	mov    $0x80000000,%ebx
    3274:	48 01 c3             	add    %rax,%rbx
    3277:	48 89 c5             	mov    %rax,%rbp
    327a:	0f 82 07 02 00 00    	jb     3487 <kmem_unit_init+0x357>
    3280:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    3287:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 328e <kmem_unit_init+0x15e>
    328e:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 3295 <kmem_unit_init+0x165>
    3295:	48 01 c3             	add    %rax,%rbx
    3298:	48 c1 eb 0c          	shr    $0xc,%rbx
    329c:	48 c1 e3 06          	shl    $0x6,%rbx
    32a0:	48 01 d3             	add    %rdx,%rbx
    32a3:	48 8b 03             	mov    (%rbx),%rax
    32a6:	48 89 c1             	mov    %rax,%rcx
    32a9:	48 c1 e8 33          	shr    $0x33,%rax
    32ad:	83 e0 07             	and    $0x7,%eax
    32b0:	48 c1 e9 36          	shr    $0x36,%rcx
    32b4:	48 69 c0 c0 05 00 00 	imul   $0x5c0,%rax,%rax
    32bb:	48 03 04 cd 00 00 00 	add    0x0(,%rcx,8),%rax
    32c2:	00 
    32c3:	4c 8b 68 58          	mov    0x58(%rax),%r13
    32c7:	65 4c 03 2d 00 00 00 	add    %gs:0x0(%rip),%r13        # 32cf <kmem_unit_init+0x19f>
    32ce:	00 
    32cf:	48 8b 43 08          	mov    0x8(%rbx),%rax
    32d3:	48 89 df             	mov    %rbx,%rdi
    32d6:	4c 8b 53 28          	mov    0x28(%rbx),%r10
    32da:	45 8b 7d 00          	mov    0x0(%r13),%r15d
    32de:	4c 8b 73 20          	mov    0x20(%rbx),%r14
    32e2:	4c 8d 60 ff          	lea    -0x1(%rax),%r12
    32e6:	a8 01                	test   $0x1,%al
    32e8:	4c 0f 44 e3          	cmove  %rbx,%r12
    32ec:	4c 89 14 24          	mov    %r10,(%rsp)
    32f0:	49 29 d4             	sub    %rdx,%r12
    32f3:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    32f7:	49 c1 fc 06          	sar    $0x6,%r12
    32fb:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    32ff:	83 e2 01             	and    $0x1,%edx
    3302:	48 0f 44 c3          	cmove  %rbx,%rax
    3306:	44 8b 58 34          	mov    0x34(%rax),%r11d
    330a:	44 89 5c 24 0c       	mov    %r11d,0xc(%rsp)
    330f:	e8 00 00 00 00       	callq  3314 <kmem_unit_init+0x1e4>
    3314:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    3318:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    331e:	4c 8b 14 24          	mov    (%rsp),%r10
    3322:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
    3327:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    332b:	83 e1 01             	and    $0x1,%ecx
    332e:	48 0f 44 d3          	cmove  %rbx,%rdx
    3332:	48 8b 0a             	mov    (%rdx),%rcx
    3335:	48 8b 13             	mov    (%rbx),%rdx
    3338:	48 c1 e9 04          	shr    $0x4,%rcx
    333c:	83 e1 01             	and    $0x1,%ecx
    333f:	f7 c2 00 00 01 00    	test   $0x10000,%edx
    3345:	0f 84 2f 01 00 00    	je     347a <kmem_unit_init+0x34a>
    334b:	8b 53 30             	mov    0x30(%rbx),%edx
    334e:	45 31 c0             	xor    %r8d,%r8d
    3351:	41 57                	push   %r15
    3353:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    335a:	41 56                	push   %r14
    335c:	41 54                	push   %r12
    335e:	41 53                	push   %r11
    3360:	89 d6                	mov    %edx,%esi
    3362:	41 52                	push   %r10
    3364:	81 e6 80 00 00 f0    	and    $0xf0000080,%esi
    336a:	50                   	push   %rax
    336b:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esi
    3371:	48 89 de             	mov    %rbx,%rsi
    3374:	51                   	push   %rcx
    3375:	48 8b 0b             	mov    (%rbx),%rcx
    3378:	41 0f 94 c0          	sete   %r8b
    337c:	48 2b 35 00 00 00 00 	sub    0x0(%rip),%rsi        # 3383 <kmem_unit_init+0x253>
    3383:	41 83 e1 01          	and    $0x1,%r9d
    3387:	48 c1 fe 06          	sar    $0x6,%rsi
    338b:	e8 00 00 00 00       	callq  3390 <kmem_unit_init+0x260>
    3390:	48 89 ef             	mov    %rbp,%rdi
    3393:	48 83 c4 38          	add    $0x38,%rsp
    3397:	e8 00 00 00 00       	callq  339c <kmem_unit_init+0x26c>
    339c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 33a3 <kmem_unit_init+0x273>
    33a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    33aa:	e8 00 00 00 00       	callq  33af <kmem_unit_init+0x27f>
    33af:	48 8b 43 08          	mov    0x8(%rbx),%rax
    33b3:	48 89 df             	mov    %rbx,%rdi
    33b6:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    33ba:	45 8b 6d 00          	mov    0x0(%r13),%r13d
    33be:	4c 8b 63 20          	mov    0x20(%rbx),%r12
    33c2:	48 8d 68 ff          	lea    -0x1(%rax),%rbp
    33c6:	a8 01                	test   $0x1,%al
    33c8:	4c 8b 73 28          	mov    0x28(%rbx),%r14
    33cc:	48 0f 44 eb          	cmove  %rbx,%rbp
    33d0:	48 2b 2d 00 00 00 00 	sub    0x0(%rip),%rbp        # 33d7 <kmem_unit_init+0x2a7>
    33d7:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    33db:	48 c1 fd 06          	sar    $0x6,%rbp
    33df:	83 e2 01             	and    $0x1,%edx
    33e2:	48 0f 44 c3          	cmove  %rbx,%rax
    33e6:	44 8b 78 34          	mov    0x34(%rax),%r15d
    33ea:	e8 00 00 00 00       	callq  33ef <kmem_unit_init+0x2bf>
    33ef:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    33f3:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    33f9:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    33fd:	83 e1 01             	and    $0x1,%ecx
    3400:	48 0f 44 d3          	cmove  %rbx,%rdx
    3404:	48 8b 0a             	mov    (%rdx),%rcx
    3407:	48 8b 13             	mov    (%rbx),%rdx
    340a:	48 c1 e9 04          	shr    $0x4,%rcx
    340e:	83 e1 01             	and    $0x1,%ecx
    3411:	f7 c2 00 00 01 00    	test   $0x10000,%edx
    3417:	75 08                	jne    3421 <kmem_unit_init+0x2f1>
    3419:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
    341d:	41 83 e1 01          	and    $0x1,%r9d
    3421:	8b 53 30             	mov    0x30(%rbx),%edx
    3424:	45 31 c0             	xor    %r8d,%r8d
    3427:	41 55                	push   %r13
    3429:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3430:	41 54                	push   %r12
    3432:	55                   	push   %rbp
    3433:	41 57                	push   %r15
    3435:	89 d6                	mov    %edx,%esi
    3437:	41 56                	push   %r14
    3439:	81 e6 80 00 00 f0    	and    $0xf0000080,%esi
    343f:	50                   	push   %rax
    3440:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esi
    3446:	48 89 de             	mov    %rbx,%rsi
    3449:	51                   	push   %rcx
    344a:	48 8b 0b             	mov    (%rbx),%rcx
    344d:	41 0f 94 c0          	sete   %r8b
    3451:	48 2b 35 00 00 00 00 	sub    0x0(%rip),%rsi        # 3458 <kmem_unit_init+0x328>
    3458:	41 83 e1 01          	and    $0x1,%r9d
    345c:	48 c1 fe 06          	sar    $0x6,%rsi
    3460:	e8 00 00 00 00       	callq  3465 <kmem_unit_init+0x335>
    3465:	31 c0                	xor    %eax,%eax
    3467:	48 83 c4 38          	add    $0x38,%rsp
    346b:	48 83 c4 10          	add    $0x10,%rsp
    346f:	5b                   	pop    %rbx
    3470:	5d                   	pop    %rbp
    3471:	41 5c                	pop    %r12
    3473:	41 5d                	pop    %r13
    3475:	41 5e                	pop    %r14
    3477:	41 5f                	pop    %r15
    3479:	c3                   	retq   
    347a:	4c 8b 4b 08          	mov    0x8(%rbx),%r9
    347e:	41 83 e1 01          	and    $0x1,%r9d
    3482:	e9 c4 fe ff ff       	jmpq   334b <kmem_unit_init+0x21b>
    3487:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 348e <kmem_unit_init+0x35e>
    348e:	e9 fb fd ff ff       	jmpq   328e <kmem_unit_init+0x15e>
    3493:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    349a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    34a1:	e8 00 00 00 00       	callq  34a6 <kmem_unit_init+0x376>
    34a6:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    34ab:	eb be                	jmp    346b <kmem_unit_init+0x33b>
    34ad:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    34b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    34bb:	e8 00 00 00 00       	callq  34c0 <kmem_unit_init+0x390>
    34c0:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    34c5:	eb a4                	jmp    346b <kmem_unit_init+0x33b>
    34c7:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    34ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    34d5:	e8 00 00 00 00       	callq  34da <kmem_unit_init+0x3aa>
    34da:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    34df:	eb 8a                	jmp    346b <kmem_unit_init+0x33b>
    34e1:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    34e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    34ef:	e8 00 00 00 00       	callq  34f4 <kmem_unit_init+0x3c4>
    34f4:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    34f9:	e9 6d ff ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    34fe:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    3505:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    350c:	e8 00 00 00 00       	callq  3511 <kmem_unit_init+0x3e1>
    3511:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    3516:	e9 50 ff ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    351b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    3522:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3529:	e8 00 00 00 00       	callq  352e <kmem_unit_init+0x3fe>
    352e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    3533:	e9 33 ff ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    3538:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    353f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3546:	e8 00 00 00 00       	callq  354b <kmem_unit_init+0x41b>
    354b:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    3550:	e9 16 ff ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    3555:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    355c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3563:	e8 00 00 00 00       	callq  3568 <kmem_unit_init+0x438>
    3568:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    356d:	e9 f9 fe ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    3572:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    3579:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3580:	e8 00 00 00 00       	callq  3585 <kmem_unit_init+0x455>
    3585:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    358a:	e9 dc fe ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    358f:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
    3596:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    359d:	e8 00 00 00 00       	callq  35a2 <kmem_unit_init+0x472>
    35a2:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    35a7:	e9 bf fe ff ff       	jmpq   346b <kmem_unit_init+0x33b>
    35ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000035b0 <kmem_unit_exit>:
    35b0:	e8 00 00 00 00       	callq  35b5 <kmem_unit_exit+0x5>
    35b5:	31 c0                	xor    %eax,%eax
    35b7:	c3                   	retq   
    35b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    35bf:	00 

00000000000035c0 <pmd_huge>:
    35c0:	e8 00 00 00 00       	callq  35c5 <pmd_huge+0x5>
    35c5:	31 c0                	xor    %eax,%eax
    35c7:	48 f7 c7 9f ff ff ff 	test   $0xffffffffffffff9f,%rdi
    35ce:	74 16                	je     35e6 <pmd_huge+0x26>
    35d0:	ff 14 25 00 00 00 00 	callq  *0x0
    35d7:	25 81 00 00 00       	and    $0x81,%eax
    35dc:	48 83 f8 01          	cmp    $0x1,%rax
    35e0:	0f 95 c0             	setne  %al
    35e3:	0f b6 c0             	movzbl %al,%eax
    35e6:	c3                   	retq   
    35e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    35ee:	00 00 

00000000000035f0 <pud_huge>:
    35f0:	e8 00 00 00 00       	callq  35f5 <pud_huge+0x5>
    35f5:	ff 14 25 00 00 00 00 	callq  *0x0
    35fc:	48 c1 e8 07          	shr    $0x7,%rax
    3600:	83 e0 01             	and    $0x1,%eax
    3603:	c3                   	retq   
    3604:	66 90                	xchg   %ax,%ax
    3606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    360d:	00 00 00 

0000000000003610 <get_pte>:
    3610:	e8 00 00 00 00       	callq  3615 <get_pte+0x5>
    3615:	48 8b 4e 50          	mov    0x50(%rsi),%rcx
    3619:	48 89 f8             	mov    %rdi,%rax
    361c:	48 89 fa             	mov    %rdi,%rdx
    361f:	48 c1 e8 27          	shr    $0x27,%rax
    3623:	25 ff 01 00 00       	and    $0x1ff,%eax
    3628:	48 8b 3c c1          	mov    (%rcx,%rax,8),%rdi
    362c:	ff 14 25 00 00 00 00 	callq  *0x0
    3633:	49 b8 00 f0 ff ff ff 	movabs $0xffffffffff000,%r8
    363a:	ff 0f 00 
    363d:	48 89 d6             	mov    %rdx,%rsi
    3640:	48 89 d1             	mov    %rdx,%rcx
    3643:	48 c1 ee 1b          	shr    $0x1b,%rsi
    3647:	4c 21 c0             	and    %r8,%rax
    364a:	48 c1 e9 12          	shr    $0x12,%rcx
    364e:	81 e6 f8 0f 00 00    	and    $0xff8,%esi
    3654:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
    365a:	48 01 c6             	add    %rax,%rsi
    365d:	48 03 35 00 00 00 00 	add    0x0(%rip),%rsi        # 3664 <get_pte+0x54>
    3664:	48 8b 3e             	mov    (%rsi),%rdi
    3667:	ff 14 25 00 00 00 00 	callq  *0x0
    366e:	48 be 00 00 00 c0 ff 	movabs $0xfffffc0000000,%rsi
    3675:	ff 0f 00 
    3678:	81 e7 80 00 00 00    	and    $0x80,%edi
    367e:	49 0f 44 f0          	cmove  %r8,%rsi
    3682:	48 c1 ea 09          	shr    $0x9,%rdx
    3686:	81 e2 f8 0f 00 00    	and    $0xff8,%edx
    368c:	48 21 f0             	and    %rsi,%rax
    368f:	48 01 c1             	add    %rax,%rcx
    3692:	48 03 0d 00 00 00 00 	add    0x0(%rip),%rcx        # 3699 <get_pte+0x89>
    3699:	48 8b 39             	mov    (%rcx),%rdi
    369c:	ff 14 25 00 00 00 00 	callq  *0x0
    36a3:	48 b9 00 00 e0 ff ff 	movabs $0xfffffffe00000,%rcx
    36aa:	ff 0f 00 
    36ad:	81 e7 80 00 00 00    	and    $0x80,%edi
    36b3:	4c 0f 45 c1          	cmovne %rcx,%r8
    36b7:	48 03 15 00 00 00 00 	add    0x0(%rip),%rdx        # 36be <get_pte+0xae>
    36be:	4c 21 c0             	and    %r8,%rax
    36c1:	48 01 d0             	add    %rdx,%rax
    36c4:	c3                   	retq   
    36c5:	90                   	nop
    36c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    36cd:	00 00 00 

00000000000036d0 <vma_pte_dump>:
    36d0:	e8 00 00 00 00       	callq  36d5 <vma_pte_dump+0x5>
    36d5:	41 57                	push   %r15
    36d7:	48 c1 e2 0c          	shl    $0xc,%rdx
    36db:	48 89 fe             	mov    %rdi,%rsi
    36de:	41 56                	push   %r14
    36e0:	41 55                	push   %r13
    36e2:	41 54                	push   %r12
    36e4:	55                   	push   %rbp
    36e5:	53                   	push   %rbx
    36e6:	48 8b 0f             	mov    (%rdi),%rcx
    36e9:	4c 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13
    36ed:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    36f1:	48 89 c8             	mov    %rcx,%rax
    36f4:	48 c1 e8 27          	shr    $0x27,%rax
    36f8:	25 ff 01 00 00       	and    $0x1ff,%eax
    36fd:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    3701:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    3705:	ff 14 25 00 00 00 00 	callq  *0x0
    370c:	48 c1 e9 1b          	shr    $0x1b,%rcx
    3710:	48 8b 1e             	mov    (%rsi),%rbx
    3713:	49 bc 00 f0 ff ff ff 	movabs $0xffffffffff000,%r12
    371a:	ff 0f 00 
    371d:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
    3723:	48 03 0d 00 00 00 00 	add    0x0(%rip),%rcx        # 372a <vma_pte_dump+0x5a>
    372a:	4c 21 e0             	and    %r12,%rax
    372d:	49 39 dd             	cmp    %rbx,%r13
    3730:	48 8d 2c 01          	lea    (%rcx,%rax,1),%rbp
    3734:	0f 86 c6 00 00 00    	jbe    3800 <vma_pte_dump+0x130>
    373a:	49 be 00 00 00 c0 ff 	movabs $0xfffffc0000000,%r14
    3741:	ff 0f 00 
    3744:	e9 a6 00 00 00       	jmpq   37ef <vma_pte_dump+0x11f>
    3749:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    374d:	48 f7 c7 9f ff ff ff 	test   $0xffffffffffffff9f,%rdi
    3754:	0f 84 a6 00 00 00    	je     3800 <vma_pte_dump+0x130>
    375a:	48 89 d9             	mov    %rbx,%rcx
    375d:	48 c1 e9 12          	shr    $0x12,%rcx
    3761:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
    3767:	ff 14 25 00 00 00 00 	callq  *0x0
    376e:	81 e7 80 00 00 00    	and    $0x80,%edi
    3774:	4c 89 e2             	mov    %r12,%rdx
    3777:	49 0f 45 d6          	cmovne %r14,%rdx
    377b:	48 03 0d 00 00 00 00 	add    0x0(%rip),%rcx        # 3782 <vma_pte_dump+0xb2>
    3782:	48 21 d0             	and    %rdx,%rax
    3785:	4c 8d 3c 01          	lea    (%rcx,%rax,1),%r15
    3789:	49 8b 3f             	mov    (%r15),%rdi
    378c:	e8 00 00 00 00       	callq  3791 <vma_pte_dump+0xc1>
    3791:	85 c0                	test   %eax,%eax
    3793:	75 4e                	jne    37e3 <vma_pte_dump+0x113>
    3795:	49 8b 3f             	mov    (%r15),%rdi
    3798:	48 f7 c7 9f ff ff ff 	test   $0xffffffffffffff9f,%rdi
    379f:	74 42                	je     37e3 <vma_pte_dump+0x113>
    37a1:	48 89 d9             	mov    %rbx,%rcx
    37a4:	48 c1 e9 09          	shr    $0x9,%rcx
    37a8:	81 e1 f8 0f 00 00    	and    $0xff8,%ecx
    37ae:	ff 14 25 00 00 00 00 	callq  *0x0
    37b5:	48 ba 00 00 e0 ff ff 	movabs $0xfffffffe00000,%rdx
    37bc:	ff 0f 00 
    37bf:	81 e7 80 00 00 00    	and    $0x80,%edi
    37c5:	49 0f 44 d4          	cmove  %r12,%rdx
    37c9:	48 03 0d 00 00 00 00 	add    0x0(%rip),%rcx        # 37d0 <vma_pte_dump+0x100>
    37d0:	48 21 d0             	and    %rdx,%rax
    37d3:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    37d7:	48 8b 3a             	mov    (%rdx),%rdi
    37da:	48 f7 c7 9f ff ff ff 	test   $0xffffffffffffff9f,%rdi
    37e1:	75 28                	jne    380b <vma_pte_dump+0x13b>
    37e3:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    37ea:	49 39 dd             	cmp    %rbx,%r13
    37ed:	76 11                	jbe    3800 <vma_pte_dump+0x130>
    37ef:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    37f3:	e8 00 00 00 00       	callq  37f8 <vma_pte_dump+0x128>
    37f8:	85 c0                	test   %eax,%eax
    37fa:	0f 84 49 ff ff ff    	je     3749 <vma_pte_dump+0x79>
    3800:	5b                   	pop    %rbx
    3801:	5d                   	pop    %rbp
    3802:	41 5c                	pop    %r12
    3804:	41 5d                	pop    %r13
    3806:	41 5e                	pop    %r14
    3808:	41 5f                	pop    %r15
    380a:	c3                   	retq   
    380b:	ff 14 25 00 00 00 00 	callq  *0x0
    3812:	49 89 c0             	mov    %rax,%r8
    3815:	b9 00 00 00 00       	mov    $0x0,%ecx
    381a:	48 89 de             	mov    %rbx,%rsi
    381d:	49 f7 d0             	not    %r8
    3820:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3827:	41 83 e0 01          	and    $0x1,%r8d
    382b:	49 f7 d8             	neg    %r8
    382e:	48 85 c0             	test   %rax,%rax
    3831:	4c 0f 44 c1          	cmove  %rcx,%r8
    3835:	48 8b 0a             	mov    (%rdx),%rcx
    3838:	49 31 c0             	xor    %rax,%r8
    383b:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    3842:	00 00 00 
    3845:	49 c1 e8 0c          	shr    $0xc,%r8
    3849:	49 21 c0             	and    %rax,%r8
    384c:	4c 89 c0             	mov    %r8,%rax
    384f:	48 c1 e0 06          	shl    $0x6,%rax
    3853:	48 03 05 00 00 00 00 	add    0x0(%rip),%rax        # 385a <vma_pte_dump+0x18a>
    385a:	4c 8b 08             	mov    (%rax),%r9
    385d:	e8 00 00 00 00       	callq  3862 <vma_pte_dump+0x192>
    3862:	e9 7c ff ff ff       	jmpq   37e3 <vma_pte_dump+0x113>
    3867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    386e:	00 00 

0000000000003870 <next_online_pgdat>:
    3870:	e8 00 00 00 00       	callq  3875 <next_online_pgdat+0x5>
    3875:	8b 97 00 9d 02 00    	mov    0x29d00(%rdi),%edx
    387b:	be 00 04 00 00       	mov    $0x400,%esi
    3880:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3887:	83 c2 01             	add    $0x1,%edx
    388a:	48 63 d2             	movslq %edx,%rdx
    388d:	e8 00 00 00 00       	callq  3892 <next_online_pgdat+0x22>
    3892:	ba 00 04 00 00       	mov    $0x400,%edx
    3897:	3d 00 04 00 00       	cmp    $0x400,%eax
    389c:	0f 4f c2             	cmovg  %edx,%eax
    389f:	3d 00 04 00 00       	cmp    $0x400,%eax
    38a4:	74 0b                	je     38b1 <next_online_pgdat+0x41>
    38a6:	48 98                	cltq   
    38a8:	48 8b 04 c5 00 00 00 	mov    0x0(,%rax,8),%rax
    38af:	00 
    38b0:	c3                   	retq   
    38b1:	31 c0                	xor    %eax,%eax
    38b3:	c3                   	retq   
    38b4:	66 90                	xchg   %ax,%ax
    38b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    38bd:	00 00 00 

00000000000038c0 <next_zone>:
    38c0:	e8 00 00 00 00       	callq  38c5 <next_zone+0x5>
    38c5:	48 8b 47 50          	mov    0x50(%rdi),%rax
    38c9:	48 8d 90 00 17 00 00 	lea    0x1700(%rax),%rdx
    38d0:	48 39 d7             	cmp    %rdx,%rdi
    38d3:	73 08                	jae    38dd <next_zone+0x1d>
    38d5:	48 8d 87 c0 05 00 00 	lea    0x5c0(%rdi),%rax
    38dc:	c3                   	retq   
    38dd:	48 89 c7             	mov    %rax,%rdi
    38e0:	eb 8e                	jmp    3870 <next_online_pgdat>
    38e2:	0f 1f 40 00          	nopl   0x0(%rax)
    38e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    38ed:	00 00 00 

00000000000038f0 <first_online_pgdat>:
    38f0:	e8 00 00 00 00       	callq  38f5 <first_online_pgdat+0x5>
    38f5:	be 00 04 00 00       	mov    $0x400,%esi
    38fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3901:	e8 00 00 00 00       	callq  3906 <first_online_pgdat+0x16>
    3906:	ba 00 04 00 00       	mov    $0x400,%edx
    390b:	3d 00 04 00 00       	cmp    $0x400,%eax
    3910:	0f 4f c2             	cmovg  %edx,%eax
    3913:	48 98                	cltq   
    3915:	48 8b 04 c5 00 00 00 	mov    0x0(,%rax,8),%rax
    391c:	00 
    391d:	c3                   	retq   
    391e:	66 90                	xchg   %ax,%ax

0000000000003920 <kmem_dump_state>:
    3920:	e8 00 00 00 00       	callq  3925 <kmem_dump_state+0x5>
    3925:	53                   	push   %rbx
    3926:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 392d <kmem_dump_state+0xd>
    392d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3934:	48 8b 33             	mov    (%rbx),%rsi
    3937:	e8 00 00 00 00       	callq  393c <kmem_dump_state+0x1c>
    393c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    3940:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3947:	e8 00 00 00 00       	callq  394c <kmem_dump_state+0x2c>
    394c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    3950:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3957:	e8 00 00 00 00       	callq  395c <kmem_dump_state+0x3c>
    395c:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    3960:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3967:	e8 00 00 00 00       	callq  396c <kmem_dump_state+0x4c>
    396c:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    3970:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3977:	e8 00 00 00 00       	callq  397c <kmem_dump_state+0x5c>
    397c:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    3980:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3987:	e8 00 00 00 00       	callq  398c <kmem_dump_state+0x6c>
    398c:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    3990:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3997:	e8 00 00 00 00       	callq  399c <kmem_dump_state+0x7c>
    399c:	48 8b 73 30          	mov    0x30(%rbx),%rsi
    39a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    39a7:	e8 00 00 00 00       	callq  39ac <kmem_dump_state+0x8c>
    39ac:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    39b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    39b7:	e8 00 00 00 00       	callq  39bc <kmem_dump_state+0x9c>
    39bc:	48 8b 73 40          	mov    0x40(%rbx),%rsi
    39c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    39c7:	e8 00 00 00 00       	callq  39cc <kmem_dump_state+0xac>
    39cc:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    39d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    39d7:	e8 00 00 00 00       	callq  39dc <kmem_dump_state+0xbc>
    39dc:	48 8b 73 50          	mov    0x50(%rbx),%rsi
    39e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    39e7:	e8 00 00 00 00       	callq  39ec <kmem_dump_state+0xcc>
    39ec:	48 8b 73 58          	mov    0x58(%rbx),%rsi
    39f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    39f7:	e8 00 00 00 00       	callq  39fc <kmem_dump_state+0xdc>
    39fc:	48 8b 73 60          	mov    0x60(%rbx),%rsi
    3a00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a07:	e8 00 00 00 00       	callq  3a0c <kmem_dump_state+0xec>
    3a0c:	48 8b 73 68          	mov    0x68(%rbx),%rsi
    3a10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a17:	e8 00 00 00 00       	callq  3a1c <kmem_dump_state+0xfc>
    3a1c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3a23 <kmem_dump_state+0x103>
    3a23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a2a:	48 8b 30             	mov    (%rax),%rsi
    3a2d:	e8 00 00 00 00       	callq  3a32 <kmem_dump_state+0x112>
    3a32:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3a39 <kmem_dump_state+0x119>
    3a39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a40:	48 8b 30             	mov    (%rax),%rsi
    3a43:	e8 00 00 00 00       	callq  3a48 <kmem_dump_state+0x128>
    3a48:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3a4f <kmem_dump_state+0x12f>
    3a4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a56:	48 8b 70 08          	mov    0x8(%rax),%rsi
    3a5a:	e8 00 00 00 00       	callq  3a5f <kmem_dump_state+0x13f>
    3a5f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3a66 <kmem_dump_state+0x146>
    3a66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a6d:	48 8b 70 10          	mov    0x10(%rax),%rsi
    3a71:	e8 00 00 00 00       	callq  3a76 <kmem_dump_state+0x156>
    3a76:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3a7d <kmem_dump_state+0x15d>
    3a7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a84:	48 8b 70 18          	mov    0x18(%rax),%rsi
    3a88:	e8 00 00 00 00       	callq  3a8d <kmem_dump_state+0x16d>
    3a8d:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3a94 <kmem_dump_state+0x174>
    3a94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3a9b:	48 8b 70 20          	mov    0x20(%rax),%rsi
    3a9f:	e8 00 00 00 00       	callq  3aa4 <kmem_dump_state+0x184>
    3aa4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3aab <kmem_dump_state+0x18b>
    3aab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3ab2:	48 8b 70 28          	mov    0x28(%rax),%rsi
    3ab6:	e8 00 00 00 00       	callq  3abb <kmem_dump_state+0x19b>
    3abb:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3ac2 <kmem_dump_state+0x1a2>
    3ac2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3ac9:	48 8b 70 30          	mov    0x30(%rax),%rsi
    3acd:	e8 00 00 00 00       	callq  3ad2 <kmem_dump_state+0x1b2>
    3ad2:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3ad9 <kmem_dump_state+0x1b9>
    3ad9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3ae0:	48 8b 70 38          	mov    0x38(%rax),%rsi
    3ae4:	e8 00 00 00 00       	callq  3ae9 <kmem_dump_state+0x1c9>
    3ae9:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3af0 <kmem_dump_state+0x1d0>
    3af0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3af7:	48 8b 70 40          	mov    0x40(%rax),%rsi
    3afb:	e8 00 00 00 00       	callq  3b00 <kmem_dump_state+0x1e0>
    3b00:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b07 <kmem_dump_state+0x1e7>
    3b07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b0e:	48 8b 70 48          	mov    0x48(%rax),%rsi
    3b12:	e8 00 00 00 00       	callq  3b17 <kmem_dump_state+0x1f7>
    3b17:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b1e <kmem_dump_state+0x1fe>
    3b1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b25:	48 8b 70 50          	mov    0x50(%rax),%rsi
    3b29:	e8 00 00 00 00       	callq  3b2e <kmem_dump_state+0x20e>
    3b2e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b35 <kmem_dump_state+0x215>
    3b35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b3c:	48 8b 70 60          	mov    0x60(%rax),%rsi
    3b40:	e8 00 00 00 00       	callq  3b45 <kmem_dump_state+0x225>
    3b45:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b4c <kmem_dump_state+0x22c>
    3b4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b53:	48 8b 70 68          	mov    0x68(%rax),%rsi
    3b57:	e8 00 00 00 00       	callq  3b5c <kmem_dump_state+0x23c>
    3b5c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b63 <kmem_dump_state+0x243>
    3b63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b6a:	48 8b 70 70          	mov    0x70(%rax),%rsi
    3b6e:	e8 00 00 00 00       	callq  3b73 <kmem_dump_state+0x253>
    3b73:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b7a <kmem_dump_state+0x25a>
    3b7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b81:	48 8b 70 78          	mov    0x78(%rax),%rsi
    3b85:	e8 00 00 00 00       	callq  3b8a <kmem_dump_state+0x26a>
    3b8a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b91 <kmem_dump_state+0x271>
    3b91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3b98:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
    3b9f:	e8 00 00 00 00       	callq  3ba4 <kmem_dump_state+0x284>
    3ba4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3bab <kmem_dump_state+0x28b>
    3bab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3bb2:	48 8b b0 88 00 00 00 	mov    0x88(%rax),%rsi
    3bb9:	e8 00 00 00 00       	callq  3bbe <kmem_dump_state+0x29e>
    3bbe:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3bc5 <kmem_dump_state+0x2a5>
    3bc5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3bcc:	48 8b b0 90 00 00 00 	mov    0x90(%rax),%rsi
    3bd3:	e8 00 00 00 00       	callq  3bd8 <kmem_dump_state+0x2b8>
    3bd8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3bdf <kmem_dump_state+0x2bf>
    3bdf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3be6:	48 8b b0 98 00 00 00 	mov    0x98(%rax),%rsi
    3bed:	e8 00 00 00 00       	callq  3bf2 <kmem_dump_state+0x2d2>
    3bf2:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3bf9 <kmem_dump_state+0x2d9>
    3bf9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c00:	48 8b b0 a0 00 00 00 	mov    0xa0(%rax),%rsi
    3c07:	e8 00 00 00 00       	callq  3c0c <kmem_dump_state+0x2ec>
    3c0c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3c13 <kmem_dump_state+0x2f3>
    3c13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c1a:	48 8b b0 a8 00 00 00 	mov    0xa8(%rax),%rsi
    3c21:	e8 00 00 00 00       	callq  3c26 <kmem_dump_state+0x306>
    3c26:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3c2d <kmem_dump_state+0x30d>
    3c2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c34:	48 8b b0 b0 00 00 00 	mov    0xb0(%rax),%rsi
    3c3b:	e8 00 00 00 00       	callq  3c40 <kmem_dump_state+0x320>
    3c40:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3c47 <kmem_dump_state+0x327>
    3c47:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c4e:	48 8b b0 c0 00 00 00 	mov    0xc0(%rax),%rsi
    3c55:	e8 00 00 00 00       	callq  3c5a <kmem_dump_state+0x33a>
    3c5a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3c61 <kmem_dump_state+0x341>
    3c61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c68:	48 8b b0 c8 00 00 00 	mov    0xc8(%rax),%rsi
    3c6f:	e8 00 00 00 00       	callq  3c74 <kmem_dump_state+0x354>
    3c74:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3c7b <kmem_dump_state+0x35b>
    3c7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c82:	48 8b b0 d0 00 00 00 	mov    0xd0(%rax),%rsi
    3c89:	e8 00 00 00 00       	callq  3c8e <kmem_dump_state+0x36e>
    3c8e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3c95 <kmem_dump_state+0x375>
    3c95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3c9c:	48 8b b0 d8 00 00 00 	mov    0xd8(%rax),%rsi
    3ca3:	e8 00 00 00 00       	callq  3ca8 <kmem_dump_state+0x388>
    3ca8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3caf <kmem_dump_state+0x38f>
    3caf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3cb6:	48 8b b0 e8 00 00 00 	mov    0xe8(%rax),%rsi
    3cbd:	e8 00 00 00 00       	callq  3cc2 <kmem_dump_state+0x3a2>
    3cc2:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3cc9 <kmem_dump_state+0x3a9>
    3cc9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3cd0:	48 8b 30             	mov    (%rax),%rsi
    3cd3:	e8 00 00 00 00       	callq  3cd8 <kmem_dump_state+0x3b8>
    3cd8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3cdf <kmem_dump_state+0x3bf>
    3cdf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3ce6:	48 8b 70 08          	mov    0x8(%rax),%rsi
    3cea:	e8 00 00 00 00       	callq  3cef <kmem_dump_state+0x3cf>
    3cef:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3cf6 <kmem_dump_state+0x3d6>
    3cf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3cfd:	48 8b 70 10          	mov    0x10(%rax),%rsi
    3d01:	e8 00 00 00 00       	callq  3d06 <kmem_dump_state+0x3e6>
    3d06:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d0d <kmem_dump_state+0x3ed>
    3d0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3d14:	48 8b 70 18          	mov    0x18(%rax),%rsi
    3d18:	e8 00 00 00 00       	callq  3d1d <kmem_dump_state+0x3fd>
    3d1d:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d24 <kmem_dump_state+0x404>
    3d24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3d2b:	48 8b 70 20          	mov    0x20(%rax),%rsi
    3d2f:	e8 00 00 00 00       	callq  3d34 <kmem_dump_state+0x414>
    3d34:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d3b <kmem_dump_state+0x41b>
    3d3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3d42:	48 8b 70 28          	mov    0x28(%rax),%rsi
    3d46:	e8 00 00 00 00       	callq  3d4b <kmem_dump_state+0x42b>
    3d4b:	5b                   	pop    %rbx
    3d4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3d53:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d5a <kmem_dump_state+0x43a>
    3d5a:	48 8b 70 30          	mov    0x30(%rax),%rsi
    3d5e:	e9 00 00 00 00       	jmpq   3d63 <kmem_dump_state+0x443>
    3d63:	0f 1f 00             	nopl   (%rax)
    3d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3d6d:	00 00 00 

0000000000003d70 <compatc_zone_order>:
    3d70:	e8 00 00 00 00       	callq  3d75 <compatc_zone_order+0x5>
    3d75:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    3d7a:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    3d7e:	41 89 c9             	mov    %ecx,%r9d
    3d81:	41 ff 72 f8          	pushq  -0x8(%r10)
    3d85:	55                   	push   %rbp
    3d86:	31 c0                	xor    %eax,%eax
    3d88:	b9 10 00 00 00       	mov    $0x10,%ecx
    3d8d:	48 89 e5             	mov    %rsp,%rbp
    3d90:	41 57                	push   %r15
    3d92:	41 56                	push   %r14
    3d94:	41 be 00 02 40 00    	mov    $0x400200,%r14d
    3d9a:	41 55                	push   %r13
    3d9c:	45 31 ed             	xor    %r13d,%r13d
    3d9f:	41 54                	push   %r12
    3da1:	4c 8d a5 50 ff ff ff 	lea    -0xb0(%rbp),%r12
    3da8:	41 52                	push   %r10
    3daa:	49 89 fa             	mov    %rdi,%r10
    3dad:	53                   	push   %rbx
    3dae:	48 8d bd 50 ff ff ff 	lea    -0xb0(%rbp),%rdi
    3db5:	bb 00 00 40 00       	mov    $0x400000,%ebx
    3dba:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    3dbe:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    3dc1:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    3dc6:	4c 89 a5 50 ff ff ff 	mov    %r12,-0xb0(%rbp)
    3dcd:	4c 89 95 70 ff ff ff 	mov    %r10,-0x90(%rbp)
    3dd4:	89 55 b0             	mov    %edx,-0x50(%rbp)
    3dd7:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    3dda:	44 89 4d bc          	mov    %r9d,-0x44(%rbp)
    3dde:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
    3de2:	c7 45 c4 02 00 00 00 	movl   $0x2,-0x3c(%rbp)
    3de9:	c6 45 cb 01          	movb   $0x1,-0x35(%rbp)
    3ded:	c6 45 cc 01          	movb   $0x1,-0x34(%rbp)
    3df1:	4c 89 a5 58 ff ff ff 	mov    %r12,-0xa8(%rbp)
    3df8:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    3dff:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3e06:	eb 23                	jmp    3e2b <compatc_zone_order+0xbb>
    3e08:	4c 8b 7d 80          	mov    -0x80(%rbp),%r15
    3e0c:	4d 39 ef             	cmp    %r13,%r15
    3e0f:	75 6f                	jne    3e80 <compatc_zone_order+0x110>
    3e11:	49 81 c6 00 02 00 00 	add    $0x200,%r14
    3e18:	48 81 c3 00 02 00 00 	add    $0x200,%rbx
    3e1f:	4d 89 fd             	mov    %r15,%r13
    3e22:	49 81 fe 00 02 50 00 	cmp    $0x500200,%r14
    3e29:	74 40                	je     3e6b <compatc_zone_order+0xfb>
    3e2b:	48 89 d8             	mov    %rbx,%rax
    3e2e:	48 c1 e0 06          	shl    $0x6,%rax
    3e32:	48 03 05 00 00 00 00 	add    0x0(%rip),%rax        # 3e39 <compatc_zone_order+0xc9>
    3e39:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3e3d:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    3e41:	83 e2 01             	and    $0x1,%edx
    3e44:	48 0f 45 c1          	cmovne %rcx,%rax
    3e48:	48 8b 00             	mov    (%rax),%rax
    3e4b:	a8 10                	test   $0x10,%al
    3e4d:	74 b9                	je     3e08 <compatc_zone_order+0x98>
    3e4f:	4c 89 f2             	mov    %r14,%rdx
    3e52:	48 89 de             	mov    %rbx,%rsi
    3e55:	4c 89 e7             	mov    %r12,%rdi
    3e58:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3e5f <compatc_zone_order+0xef>
    3e5f:	b9 08 00 00 00       	mov    $0x8,%ecx
    3e64:	e8 00 00 00 00       	callq  3e69 <compatc_zone_order+0xf9>
    3e69:	eb 9d                	jmp    3e08 <compatc_zone_order+0x98>
    3e6b:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    3e6f:	5b                   	pop    %rbx
    3e70:	41 5a                	pop    %r10
    3e72:	41 5c                	pop    %r12
    3e74:	41 5d                	pop    %r13
    3e76:	41 5e                	pop    %r14
    3e78:	41 5f                	pop    %r15
    3e7a:	5d                   	pop    %rbp
    3e7b:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    3e7f:	c3                   	retq   
    3e80:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    3e87:	4c 89 f9             	mov    %r15,%rcx
    3e8a:	48 89 de             	mov    %rbx,%rsi
    3e8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3e94:	e8 00 00 00 00       	callq  3e99 <compatc_zone_order+0x129>
    3e99:	e9 73 ff ff ff       	jmpq   3e11 <compatc_zone_order+0xa1>
    3e9e:	66 90                	xchg   %ax,%ax

0000000000003ea0 <zone_dump_info>:
    3ea0:	e8 00 00 00 00       	callq  3ea5 <zone_dump_info+0x5>
    3ea5:	41 54                	push   %r12
    3ea7:	be 00 04 00 00       	mov    $0x400,%esi
    3eac:	55                   	push   %rbp
    3ead:	48 89 fd             	mov    %rdi,%rbp
    3eb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3eb7:	53                   	push   %rbx
    3eb8:	e8 00 00 00 00       	callq  3ebd <zone_dump_info+0x1d>
    3ebd:	ba 00 04 00 00       	mov    $0x400,%edx
    3ec2:	3d 00 04 00 00       	cmp    $0x400,%eax
    3ec7:	0f 4f c2             	cmovg  %edx,%eax
    3eca:	48 98                	cltq   
    3ecc:	48 8b 1c c5 00 00 00 	mov    0x0(,%rax,8),%rbx
    3ed3:	00 
    3ed4:	48 85 db             	test   %rbx,%rbx
    3ed7:	74 27                	je     3f00 <zone_dump_info+0x60>
    3ed9:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
    3ee0:	48 83 7b 78 00       	cmpq   $0x0,0x78(%rbx)
    3ee5:	75 2d                	jne    3f14 <zone_dump_info+0x74>
    3ee7:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    3eeb:	48 8d 87 00 17 00 00 	lea    0x1700(%rdi),%rax
    3ef2:	48 39 c3             	cmp    %rax,%rbx
    3ef5:	73 0e                	jae    3f05 <zone_dump_info+0x65>
    3ef7:	48 81 c3 c0 05 00 00 	add    $0x5c0,%rbx
    3efe:	75 e0                	jne    3ee0 <zone_dump_info+0x40>
    3f00:	5b                   	pop    %rbx
    3f01:	5d                   	pop    %rbp
    3f02:	41 5c                	pop    %r12
    3f04:	c3                   	retq   
    3f05:	e8 00 00 00 00       	callq  3f0a <zone_dump_info+0x6a>
    3f0a:	48 85 c0             	test   %rax,%rax
    3f0d:	74 f1                	je     3f00 <zone_dump_info+0x60>
    3f0f:	48 89 c3             	mov    %rax,%rbx
    3f12:	eb cc                	jmp    3ee0 <zone_dump_info+0x40>
    3f14:	48 8b 43 60          	mov    0x60(%rbx),%rax
    3f18:	31 d2                	xor    %edx,%edx
    3f1a:	48 89 df             	mov    %rbx,%rdi
    3f1d:	45 31 c0             	xor    %r8d,%r8d
    3f20:	31 c9                	xor    %ecx,%ecx
    3f22:	be 09 00 00 00       	mov    $0x9,%esi
    3f27:	48 89 85 48 01 00 00 	mov    %rax,0x148(%rbp)
    3f2e:	48 8b 43 68          	mov    0x68(%rbx),%rax
    3f32:	48 89 85 50 01 00 00 	mov    %rax,0x150(%rbp)
    3f39:	48 8b 43 70          	mov    0x70(%rbx),%rax
    3f3d:	48 89 85 58 01 00 00 	mov    %rax,0x158(%rbp)
    3f44:	48 8b 43 78          	mov    0x78(%rbx),%rax
    3f48:	48 89 85 60 01 00 00 	mov    %rax,0x160(%rbp)
    3f4f:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    3f56:	48 89 85 68 01 00 00 	mov    %rax,0x168(%rbp)
    3f5d:	48 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%rax
    3f64:	48 89 85 70 01 00 00 	mov    %rax,0x170(%rbp)
    3f6b:	48 8b 83 d0 04 00 00 	mov    0x4d0(%rbx),%rax
    3f72:	48 89 85 78 01 00 00 	mov    %rax,0x178(%rbp)
    3f79:	48 8b 83 d8 04 00 00 	mov    0x4d8(%rbx),%rax
    3f80:	48 89 85 80 01 00 00 	mov    %rax,0x180(%rbp)
    3f87:	e8 00 00 00 00       	callq  3f8c <zone_dump_info+0xec>
    3f8c:	ba e2 00 00 00       	mov    $0xe2,%edx
    3f91:	4c 89 e6             	mov    %r12,%rsi
    3f94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
    3f9b:	e8 00 00 00 00       	callq  3fa0 <zone_dump_info+0x100>
    3fa0:	e9 42 ff ff ff       	jmpq   3ee7 <zone_dump_info+0x47>

Disassembly of section .init.text:

0000000000000000 <init_module>:
   0:	e8 00 00 00 00       	callq  5 <init_module+0x5>
   5:	41 54                	push   %r12
   7:	55                   	push   %rbp
   8:	31 ed                	xor    %ebp,%ebp
   a:	53                   	push   %rbx
   b:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
  12:	49 89 dc             	mov    %rbx,%r12
  15:	83 7b 08 00          	cmpl   $0x0,0x8(%rbx)
  19:	74 33                	je     4e <init_module+0x4e>
  1b:	48 8b 43 18          	mov    0x18(%rbx),%rax
  1f:	48 83 c3 28          	add    $0x28,%rbx
  23:	e8 00 00 00 00       	callq  28 <init_module+0x28>
  28:	85 c0                	test   %eax,%eax
  2a:	74 1e                	je     4a <init_module+0x4a>
  2c:	48 63 c5             	movslq %ebp,%rax
  2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  36:	31 db                	xor    %ebx,%ebx
  38:	48 6b c0 28          	imul   $0x28,%rax,%rax
  3c:	49 8b 34 04          	mov    (%r12,%rax,1),%rsi
  40:	e8 00 00 00 00       	callq  45 <init_module+0x45>
  45:	e9 a2 00 00 00       	jmpq   ec <init_module+0xec>
  4a:	ff c5                	inc    %ebp
  4c:	eb c7                	jmp    15 <init_module+0x15>
  4e:	ba 18 00 00 00       	mov    $0x18,%edx
  53:	be c0 80 60 00       	mov    $0x6080c0,%esi
  58:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
  5d:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 64 <init_module+0x64>
  64:	e8 00 00 00 00       	callq  69 <init_module+0x69>
  69:	48 85 c0             	test   %rax,%rax
  6c:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 73 <init_module+0x73>
  73:	0f 84 91 00 00 00    	je     10a <init_module+0x10a>
  79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  80:	e8 00 00 00 00       	callq  85 <init_module+0x85>
  85:	85 c0                	test   %eax,%eax
  87:	89 c3                	mov    %eax,%ebx
  89:	74 0e                	je     99 <init_module+0x99>
  8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  92:	e8 00 00 00 00       	callq  97 <init_module+0x97>
  97:	eb 45                	jmp    de <init_module+0xde>
  99:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # a0 <init_module+0xa0>
  a0:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
  a7:	e8 00 00 00 00       	callq  ac <init_module+0xac>
  ac:	85 c0                	test   %eax,%eax
  ae:	89 c3                	mov    %eax,%ebx
  b0:	75 20                	jne    d2 <init_module+0xd2>
  b2:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # b9 <init_module+0xb9>
  b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  c0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # c7 <init_module+0xc7>
  c7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  cb:	e8 00 00 00 00       	callq  d0 <init_module+0xd0>
  d0:	eb 38                	jmp    10a <init_module+0x10a>
  d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  d9:	e8 00 00 00 00       	callq  de <init_module+0xde>
  de:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # e5 <init_module+0xe5>
  e5:	e8 00 00 00 00       	callq  ea <init_module+0xea>
  ea:	eb 1e                	jmp    10a <init_module+0x10a>
  ec:	39 dd                	cmp    %ebx,%ebp
  ee:	7e 15                	jle    105 <init_module+0x105>
  f0:	48 6b c3 28          	imul   $0x28,%rbx,%rax
  f4:	48 ff c3             	inc    %rbx
  f7:	48 8b 80 00 00 00 00 	mov    0x0(%rax),%rax
  fe:	e8 00 00 00 00       	callq  103 <init_module+0x103>
 103:	eb e7                	jmp    ec <init_module+0xec>
 105:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
 10a:	89 d8                	mov    %ebx,%eax
 10c:	5b                   	pop    %rbx
 10d:	5d                   	pop    %rbp
 10e:	41 5c                	pop    %r12
 110:	c3                   	retq   

Disassembly of section .exit.text:

0000000000000000 <cleanup_module>:
   0:	53                   	push   %rbx
   1:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
   8:	48 83 c3 28          	add    $0x28,%rbx
   c:	83 7b e0 00          	cmpl   $0x0,-0x20(%rbx)
  10:	74 0b                	je     1d <cleanup_module+0x1d>
  12:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  16:	e8 00 00 00 00       	callq  1b <cleanup_module+0x1b>
  1b:	eb eb                	jmp    8 <cleanup_module+0x8>
  1d:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 24 <cleanup_module+0x24>
  24:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
  2b:	e8 00 00 00 00       	callq  30 <cleanup_module+0x30>
  30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  37:	e8 00 00 00 00       	callq  3c <cleanup_module+0x3c>
  3c:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 43 <cleanup_module+0x43>
  43:	e8 00 00 00 00       	callq  48 <cleanup_module+0x48>
  48:	5b                   	pop    %rbx
  49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  50:	e9 00 00 00 00       	jmpq   55 <__func__.35320+0x5>
